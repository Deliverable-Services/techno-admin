{"version":3,"sources":["context/IsDesktopContext.ts","shared-components/ErrorToast/useErrorToastStore.ts","shared-components/ErrorToast/ErrorToast.tsx","hooks/useTokenStore.tsx","utils/constants.ts","utils/API.ts","hooks/useToggle.tsx","shared-components/isLoading.tsx","shared-components/Pagination.tsx","shared-components/ReactTable.tsx","utils/showErrorToast.ts","utils/queryClient.ts","hooks/useGetSingleQuery.tsx","shared-components/InputFeild.tsx","components/Brands/BrandsCreateUpdateForm.tsx","components/Brands/index.tsx","components/BrandModels/BrandModelsUpdateCreateForm.tsx","components/BrandModels/index.tsx","components/Categories/CategoriesCreateUpdateForm.tsx","components/Categories/index.tsx","components/Coupons/CouponsCreateUpdateForm.tsx","components/Coupons/index.tsx","assets/logo.jpg","utils/mockData.ts","components/Faqs/FaqsCreateUpdateForm.tsx","components/Faqs/index.tsx","shared-components/Logo.tsx","components/LoginPage.tsx","shared-components/Navlink.tsx","shared-components/Overlay.tsx","components/NavBar.tsx","components/Plans/PlansCreateUpdateForm.tsx","components/Plans/index.tsx","components/Servicies/ServiciesCreateUpdateForm.tsx","components/Servicies/index.tsx","assets/profile.svg","hooks/useUserProfileStore.tsx","components/TopBar.tsx","components/Users/UsersCreateUpdateForm.tsx","components/Users/index.tsx","components/VerifyOtp.tsx","components/Dashboard/Chart.tsx","components/Dashboard/index.tsx","components/Orders/index.tsx","components/Advertisements/AdvertisementTypes.tsx","shared-components/DatePicker.tsx","components/Advertisements/AdvertisementUpdateCreateForm.tsx","components/Advertisements/useCurrentAdTypeSelectedStore.ts","components/Advertisements/AdCardsContainer.tsx","components/Advertisements/index.tsx","hooks/useMeQuery.tsx","shared-components/PrivateRoute.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["IsDesktopContext","createContext","useErrorToastStore","create","combine","toasts","set","hideToast","id","x","filter","y","showToast","t","v4","ErrorToast","props","className","style","bottom","right","zIndex","minWidth","map","setTimeout","Toast","onClose","Header","Body","message","store","accessToken","setToken","token","state","removeToken","persist","name","useTokenStore","primaryColor","window","innerHeight","secondaryColor","API","axios","baseURL","process","useToggle","useState","status","setStatus","setStatusDefault","setStatusCreate","setStatusEdit","IsLoading","Container","fluid","Spinner","variant","animation","TablePagination","currentPage","setPage","hasNextPage","hasPrevPage","lastPage","Pagination","First","onClick","Prev","Item","active","Next","Last","SearchInput","preGlobalFilteredRows","globalFilter","setGlobalFilter","count","length","React","value","setValue","onChange","useAsyncDebounce","undefined","e","target","placeholder","ReactTable","data","columns","useTable","useFilters","useGlobalFilter","useSortBy","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","allColumns","size","Dropdown","Toggle","color","Menu","column","disableGlobalFilter","isVisible","type","getToggleHiddenProps","htmlFor","Table","responsive","striped","bordered","hover","headerGroup","getHeaderGroupProps","headers","getHeaderProps","getSortByToggleProps","render","isSorted","isSortedDesc","row","getRowProps","cells","cell","getCellProps","showErrorToast","m","getState","defaultQueryFn","a","queryKey","get","r","toString","Error","queryClient","QueryClient","defaultOptions","queries","staleTime","queryFn","onError","error","response","keepPreviousData","getSingle","useGetSingleQuery","key","useQuery","enabled","InputField","isFile","label","as","setFieldValue","selectData","selectValueKey","selectTitleKey","useField","field","Form","Group","Label","File","custom","input","currentTarget","files","Control","Text","createUpdataBrand","formdata","post","BrandsCreateUpdateForm","useEffect","bsCustomFileInput","init","dataLoading","isLoading","useMutation","onSuccess","invalidateQueries","mutate","console","log","apiData","Row","Col","initialValues","url","logo","onSubmit","values","FormData","append","Alert","required","md","Button","disabled","deleteBrand","delete","Brands","selectedRowId","setSelectedRowId","page","deletePopup","setDeletePopup","err","isFetching","isDeleteLoading","useMemo","accessor","Cell","src","alt","current_page","last_page","next_page_url","prev_page_url","Modal","show","onHide","closeButton","Title","Footer","brands","isBrandLoading","image","brand_id","deleteBrandModels","BrandModels","createUpdataCategories","CategoriesCreateUpdateForm","Categories","createUpdataCoupons","CouponCreateUpdateForm","title","coupon_code","description","terms","deleteCoupon","Coupons","mockData","imageScr","FaqsCreateUpdateForm","Logo","LoginSchema","Yup","shape","phone","matches","sendOtp","formData","LoginPage","history","useHistory","push","user","otp","validationSchema","errors","Navlink","path","icon","pathname","useLocation","to","Overlay","manageLinks","mainLinks","NavBar","isNavOpen","setIsNavOpen","isDesktop","useContext","closeNavBar","price","deletePlan","Plans","is_active","is_popular","createUpdataServices","ServicesCreateUpdateForm","categories","isCategoriesLoading","category_id","deleteService","Services","setUser","removeUser","useUserProfileStore","TopBar","profile","createUpdateUser","email","disableUser","Users","VerifySchema","max","min","verifyOtp","VerifyOtp","params","useParams","data1","data2","data3","ChartLine","ResponsiveContainer","LineChart","width","height","margin","top","left","XAxis","dataKey","tickLine","padding","YAxis","axisLine","Tooltip","Legend","Line","stroke","activeDot","ChartArea","AreaChart","x1","y1","x2","y2","offset","stopColor","stopOpacity","Area","fillOpacity","fill","ChartBar","BarChart","Bar","Dashboard","chartOneSelect","setChartOneSelect","setChartTwoSelect","handleChartTwoChange","Array","from","isActiveTab","classname","Orders","setKey","displayTab","types","DatePicker","inputProps","closeOnSelect","moment","_d","format","createUpdataAdvertisement","AdvertisementCreateUpdateForm","deeplink","valid_to","valid_from","setCurrentType","useCurrentAdTypeSelectedStore","getBanners","toLowerCase","LatestAd","selectedType","setSelectedType","ad","Card","Img","deleteBanner","Advertisements","AdCardsContainer","getProfile","Authorization","useMeQuery","retry","isAxiosError","res","access_token","PrivateRoute","Component","component","rest","App","setIsDesktop","defaults","common","updateDimensions","addEventListener","removeEventListener","innerWidth","showNavTopBar","includes","Provider","exact","Faqs","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","QueryClientProvider","client","document","getElementById"],"mappings":"gQAEaA,EAAmBC,yBAAc,G,kDCWjCC,EAAqBC,YAC9BC,kBACI,CACIC,OAAQ,KAEZ,SAACC,GAAD,MAAU,CACNC,UAAW,SAACC,GAAD,OAAgBF,GAAI,SAACG,GAAD,MAAQ,CAAEJ,OAAQI,EAAEJ,OAAOK,QAAO,SAACC,GAAD,OAAOA,EAAEH,KAAOA,UACjFI,UAAW,SAACC,GAAD,OAA0BP,GAAI,SAACG,GAAD,MAAQ,CAAEJ,OAAO,GAAD,mBAAMI,EAAEJ,QAAR,4BAAqBQ,GAArB,IAAwBL,GAAIM,4B,OCmBlFC,EAhCI,SAACC,GAAkB,IAAD,EACHd,IAAtBG,EADyB,EACzBA,OAAQE,EADiB,EACjBA,UAIhB,OACI,mCACI,qBAAKU,UAAU,iBAAiBC,MAAO,CAAEC,OAAQ,KAAMC,MAAO,KAAMC,OAAQ,KAAMC,SAAU,SAA5F,SAEQjB,EAAOkB,KAAI,SAACV,GAGR,OAFAW,YAAW,kBAAMjB,EAAUM,EAAEL,MAAK,KAG9B,eAACiB,EAAA,EAAD,CAAOR,UAAU,aAAaC,MAAO,CAAEC,OAAQ,KAAMC,MAAO,KAAMC,OAAQ,KAAMC,SAAU,SAAWI,QAAS,kBAAMnB,EAAUM,EAAEL,KAAhI,UACI,eAACiB,EAAA,EAAME,OAAP,CAAcV,UAAU,iCAAxB,UACI,2CACA,yBACA,+BAAO,SAEX,cAACQ,EAAA,EAAMG,KAAP,UAAaf,EAAEgB,YANuHhB,EAAEL,YCfpKsB,EAAQ1B,kBACR,CAAE2B,YAAa,OACf,SAACzB,GAAD,MAAU,CACN0B,SAAU,SAACC,GAAD,OAAmB3B,GAAI,SAAC4B,GAAD,MAAY,CAAEH,YAAaE,OAC5DE,YAAa,kBAAM7B,GAAI,SAAC4B,GAAD,MAAY,CAAEH,YAAa,cAI1DD,EAAQM,kBAAQN,EAAO,CAAEO,KAAM,gBAE/B,IAEeC,EAFOnC,YAAO2B,G,kBCdhBS,GADYC,OAAOC,YACJ,WACfC,EAAiB,UCWfC,EANHC,IAAMzC,OAAO,CACrB0C,QDL2BC,K,6DEyBhBC,EAlBG,WAAmB,IAAD,EAGJC,mBAAwB,WAHpB,mBAGzBC,EAHyB,KAGjBC,EAHiB,KAWhC,MAAO,CACHD,SACAE,iBARqB,kBAAMD,EAAU,YAQnBE,gBAPE,kBAAMF,EAAU,aAODG,cANjB,kBAAMH,EAAU,cCH3BI,EAVG,WAGd,OACI,cAACC,EAAA,EAAD,CAAWC,OAAK,EAACvC,UAAU,gCAA3B,SACI,cAACwC,EAAA,EAAD,CAASC,QAAQ,UAAUC,UAAU,c,SCqBlCC,EApBS,SAAC,GAAyE,IAAvEC,EAAsE,EAAtEA,YAAaC,EAAyD,EAAzDA,QAASC,EAAgD,EAAhDA,YAAaC,EAAmC,EAAnCA,YAAaC,EAAsB,EAAtBA,SACvE,OACI,cAACV,EAAA,EAAD,CAAWC,OAAK,EAACvC,UAAU,6BAA3B,SACI,eAACiD,EAAA,EAAD,WACI,cAACA,EAAA,EAAWC,MAAZ,CAAkBC,QAAS,kBAAMN,EAAQ,MAErCE,GACA,cAACE,EAAA,EAAWG,KAAZ,CAAiBD,QAAS,kBAAMN,EAAQD,EAAc,MAE1D,cAACK,EAAA,EAAWI,KAAZ,CAAiBC,QAAM,EAAvB,SAAyB,sBAAMtD,UAAU,iBAAhB,SAAkC4C,MAEvDE,GACA,cAACG,EAAA,EAAWM,KAAZ,CAAiBJ,QAAS,kBAAMN,EAAQD,EAAc,MAE1D,cAACK,EAAA,EAAWO,KAAZ,CAAiBL,QAAS,kBAAMN,EAAQG,Y,6CCHxD,SAASS,EAAT,GAIkB,IAHdC,EAGa,EAHbA,sBACAC,EAEa,EAFbA,aACAC,EACa,EADbA,gBAEMC,EAAQH,EAAsBI,OADvB,EAEaC,IAAMhC,SAAS4B,GAF5B,mBAENK,EAFM,KAECC,EAFD,KAGPC,EAAWC,4BAAiB,SAAAH,GAC9BJ,EAAgBI,QAASI,KAC1B,KAEH,OAEI,uBACIJ,MAAOA,GAAS,GAChBE,SAAU,SAAAG,GACNJ,EAASI,EAAEC,OAAON,OAClBE,EAASG,EAAEC,OAAON,QAEtBO,YAAW,iBAAYV,EAAZ,iBAoKRW,MA9Jf,YAA6D,IAAvCC,EAAsC,EAAtCA,KAAMC,EAAgC,EAAhCA,QAAgC,EAgBpDC,mBAAS,CAAED,UAASD,QAAQG,aAAYC,kBAAiBC,aAVzDC,EANoD,EAMpDA,cACAC,EAPoD,EAOpDA,kBACAC,EARoD,EAQpDA,aACAC,EAToD,EASpDA,KACAC,EAVoD,EAUpDA,WACAC,EAXoD,EAWpDA,WACAnE,EAZoD,EAYpDA,MACAyC,EAboD,EAapDA,sBACAE,EAdoD,EAcpDA,gBAOJ,OAEI,eAACtB,EAAA,EAAD,CAAWC,OAAK,EAACvC,UAAU,OAA3B,UAII,eAACsC,EAAA,EAAD,CAAWC,OAAK,EAACvC,UAAU,uEAA3B,UACI,qBAAKA,UAAU,QAAf,SACI,sBAAKA,UAAU,eAAf,UACI,cAAC,IAAD,CAAiBqF,KAAM,KACvB,cAAC5B,EAAD,CACIC,sBAAuBA,EACvBC,aAAc1C,EAAM0C,aACpBC,gBAAiBA,SAI7B,eAAC0B,EAAA,EAAD,WACI,cAACA,EAAA,EAASC,OAAV,CAAiBhG,GAAG,iBAAiBS,UAAU,qDAA/C,SAGI,cAAC,IAAD,CAAYqF,KAAM,GAAIG,MAAOlE,MAIjC,cAACgE,EAAA,EAASG,KAAV,CAAezF,UAAU,MAAzB,SAEQoF,EAAW9E,KAAI,SAACoF,GAIZ,OAFAA,EAAOC,qBAAuBD,EAAOE,UAGjC,sBAAqB5F,UAAU,iCAA/B,UAEI,+CAAO6F,KAAK,YAAeH,EAAOI,wBAAlC,IAA0D9F,UAAU,SAAST,GAAImG,EAAOnG,MAGxF,sBAAKS,UAAU,kCAAf,UACI,mCAAO6F,KAAK,WAAW7F,UAAU,uBAAuBT,GAAImG,EAAOnG,IAAQmG,EAAOI,yBAGlF,uBAAO9F,UAAU,uBAAuB+F,QAASL,EAAOnG,GAAxD,SAA4D,4BAAImG,EAAOhF,gBATrEgF,EAAOnG,eAqBzC,eAAC+C,EAAA,EAAD,CAAWC,OAAK,EAACvC,UAAU,WAA3B,UAEI,qBAAKA,UAAU,aAAf,SAEI,eAACgG,EAAA,EAAD,yBAAOhG,UAAU,eAAkB+E,KAAnC,IAAoDkB,YAAU,EAACC,SAAO,EAACC,UAAQ,EAACC,OAAK,EAACf,KAAK,KAA3F,UACI,uBAAOrF,UAAU,mBAAjB,SAEQiF,EAAa3E,KAAI,SAAA+F,GAAW,OAExB,aADA,CACA,gCAAQA,EAAYC,uBAApB,aAEQD,EAAYE,QAAQjG,KAAI,SAACoF,GAAD,OAEpB,cADA,CACA,gCAAQA,EAAOc,eAAgBd,EAAQe,yBAAvC,cAEQf,EAAOgB,OAAO,UAClB,+BACKhB,EAAOiB,SACFjB,EAAOkB,aACH,cAAC,IAAD,IACA,cAAC,IAAD,IACJ,oBAStC,iDAAW5B,KAAX,aAEQE,EAAK5E,KAAI,SAAAuG,GAKL,OAHA1B,EAAW0B,GAKP,aADA,CACA,gCAAQA,EAAIC,eAAZ,aAEQD,EAAIE,MAAMzG,KAAI,SAAA0G,GAEV,OACI,8CAAQA,EAAKC,gBAAb,aAEQD,EAAKN,OAAO,6BAqBxC,IAAhBxB,EAAKpB,OACD,cAACxB,EAAA,EAAD,CAAWC,OAAK,EAACvC,UAAU,0CAA3B,SACI,sBAAKA,UAAU,wCAAf,UAEI,cAAC,IAAD,CAAOwF,MAAOlE,IACd,sBAAMtB,UAAU,yBAAhB,gCAIR,Y,kCCjMXkH,EAAiB,SAACC,GAC3BlI,EAAmBmI,WAAWzH,UAAU,CAAEiB,QAASuG,KCA1CE,EAA6B,uCAAG,+BAAAC,EAAA,6DAASC,EAAT,EAASA,SAAT,SAKzB7F,EAAI8F,IAAJ,UAAWD,EAAS,GAApB,iBAA+BA,EAAS,KALf,UAOxB,OAFXE,EALmC,QAOnCzF,OAPmC,sBAQrCkF,EAAeO,EAAEzF,OAAO0F,YAClB,IAAIC,MAT2B,uBAY5BF,EAAEhD,KAZ0B,oFAAH,sDAe7BmD,EAAc,IAAIC,IAAY,CACvCC,eAAgB,CACZC,QAAS,CAGLC,UAAW,IACXC,QAASZ,EACTa,QAAS,SAACC,GAEwB,MAA1BA,EAAMC,SAASpG,QACfkF,EAAgBiB,EAAgBvH,SAAW,iBAGnDyH,kBAAkB,M,wDCxBxBC,GAAwB,uCAAG,+BAAAhB,EAAA,6DAASC,EAAT,EAASA,SAAT,SAEb7F,EAAI8F,IAAJ,UAAWD,EAAS,KAFP,cAEvBE,EAFuB,yBAKtBA,EAAEhD,MALoB,2CAAH,sDAkBf8D,GATW,SAAC,GAAgC,IAA9BhJ,EAA6B,EAA7BA,GAAIiJ,EAAyB,EAAzBA,IAM7B,OAJgBC,YAAS,GAAD,OAAID,EAAJ,YAAWjJ,GAAM+I,GAAW,CAChDI,UAAWnJ,K,oBCANoJ,GAAwC,SAAC,GAW/C,IAVHC,EAUE,EAVFA,OACAT,EASE,EATFA,MACAU,EAQE,EARFA,MAQE,IAPFC,UAOE,MAPG,QAOH,EANFC,EAME,EANFA,cAEAC,GAIE,EALF3D,KAKE,EAJF2D,YACAC,EAGE,EAHFA,eACAC,EAEE,EAFFA,eACGnJ,EACD,wHAEcoJ,aAASpJ,GAAlBqJ,EAFL,oBAQF,OACI,qBAAKpJ,UAAU,QAAf,SACI,eAACqJ,GAAA,EAAKC,MAAN,WAEQT,EACI,cAACQ,GAAA,EAAKE,MAAN,CAAYxD,QAASqD,EAAMhI,KAA3B,SAAkCyH,IAChC,KAGND,EAEI,cAACS,GAAA,EAAKG,KAAN,CACIjK,GAAG,cACHsJ,MAAM,cACNY,QAAM,EACNvF,SAAU,SAACG,GACP,IAAMqF,EAASrF,EAAEsF,cAAmCC,MAChDF,GAASX,GACTA,EAAcK,EAAMhI,KAAMsI,EAAM,OAIrC,WAAPZ,EACI,eAACO,GAAA,EAAKQ,QAAN,2BAAkBT,GAAlB,IAAyB7J,GAAI6J,EAAMhI,KAAM0H,GAAG,SAA5C,UACI,wBAAQ9E,MAAM,GAAd,SAAkB6E,IAEdG,GAAcA,EAAW1I,KAAI,SAACmE,GAAD,OACzB,wBAAQT,MAAOS,EAAKwE,GAAkB,MAAtC,SAA8CxE,EAAKyE,GAAkB,iBAKjF,cAACG,GAAA,EAAKQ,QAAN,uCAAkBT,GAAWrJ,GAA7B,IAAoCR,GAAI6J,EAAMhI,KAAM0H,GAAIA,KAIhEX,GACA,cAACkB,GAAA,EAAKS,KAAN,CAAW9J,UAAU,cAArB,SACKmI,UC9DnBK,GAAM,SAGNuB,GAAoB,SAAC,GAA0D,IAAxDC,EAAuD,EAAvDA,SAAUzK,EAA6C,EAA7CA,GACnC,OAAKA,EAOEmC,EAAIuI,KAAJ,UAAYzB,GAAZ,YAAmBjJ,GAAMyK,EAAU,CACtCzD,QAAS,CAAE,eAAgB,yBAPpB7E,EAAIuI,KAAJ,UAAYzB,IAAOwB,EAAU,CAChCzD,QAAS,CAAE,eAAgB,0BAoGxB2D,GAzFgB,SAAC,GAAoC,IAAD,IAAjC3K,UAAiC,MAA5B,GAA4B,EAE/D4K,qBAAU,WACNC,IAAkBC,SACnB,IAJ4D,MAKtB9B,GAAkB,CAAEhJ,KAAIiJ,SAAzD/D,EALuD,EAKvDA,KAAiB6F,EALsC,EAKjDC,UALiD,EAMlBC,YAAYT,GAAmB,CACxEU,UAAW,WACPlK,YAAW,kBACPqH,EAAY8C,kBAAkBlC,MAC5B,QAJNmC,EANuD,EAMvDA,OAAQJ,EAN+C,EAM/CA,UAAWpC,EANoC,EAMpCA,MAAOnG,EAN6B,EAM7BA,OAQlC4I,QAAQC,IAAI,OAAQpG,GAIpB,IAAMqG,EAAUrG,EAKhB,OAAI6F,EACO,cAAC,EAAD,IAIP,cAACS,GAAA,EAAD,CAAK/K,UAAU,eAAf,SACI,cAACgL,GAAA,EAAD,CAAKhL,UAAU,2BAAf,SAEI,cAAC,KAAD,CACIiL,cAAe,CAAE7J,KAAMqD,EAAOqG,EAAQ1J,KAAO,GAAI8J,IAAKzG,EAAOqG,EAAQI,IAAM,GAAIC,KAAM,IACrFC,SAAU,SAACC,GACP,IAAMrB,EAAW,IAAIsB,SACrBtB,EAASuB,OAAO,OAAQF,EAAOjK,MAC/B4I,EAASuB,OAAO,MAAOF,EAAOH,KACzB3L,GACDyK,EAASuB,OAAO,OAAQF,EAAOF,MAGnCR,EAAO,CAAEX,WAAUzK,QAV3B,SAYK,gBAAGwJ,EAAH,EAAGA,cAAH,OACG,eAAC,KAAD,WACI,oBAAI/I,UAAU,gCAAd,SAA8C,4BAAIT,EAAK,eAAiB,mBAC5D,YAAXyC,GACG,cAACwJ,GAAA,EAAD,CAAO/I,QAAQ,UAAf,SAA0BlD,EAAK,6BAA+B,+BAEjE4I,GACG,cAACqD,GAAA,EAAD,CAAO/I,QAAQ,SAAf,SAA0B0F,EAAgBvH,UAE9C,sBAAKZ,UAAU,kBAAf,UAGI,cAAC,GAAD,CACIoB,KAAK,OACLmD,YAAY,OACZsE,MAAM,OACN4C,UAAQ,IAIZ,cAAC,GAAD,CAAYrK,KAAK,MAAMmD,YAAY,MAAMsE,MAAM,MAAM4C,UAAQ,KAExDlM,GAED,cAAC,GAAD,CAAY6B,KAAK,OAAOmD,YAAY,OAAOsE,MAAM,oBAAoBD,QAAM,EAACG,cAAeA,OAInG,cAACgC,GAAA,EAAD,CAAK/K,UAAU,gCAAf,SACI,cAACgL,GAAA,EAAD,CAAKU,GAAG,IAAR,SACI,cAACC,EAAA,EAAD,CAAQ9F,KAAK,SAAS+F,SAAUrB,EAAWvK,UAAU,QAArD,SACKuK,EAAY,cAAC/H,EAAA,EAAD,CAASE,UAAU,SAAS2C,KAAK,OAAU,0BCxF1FmD,GAAM,SAINqD,GAAc,SAACtM,GAEjB,OAAOmC,EAAIoK,OAAJ,UAActD,GAAd,YAAqBjJ,GAAM,CAC9BgH,QAAS,CAAE,eAAgB,0BAoLpBwF,GA7KA,WAAO,IAAD,EAEoDjK,IAA7DK,EAFS,EAETA,gBAAiBD,EAFR,EAEQA,iBAAkBF,EAF1B,EAE0BA,OAAQI,EAFlC,EAEkCA,cAFlC,EAGyBL,mBAAiB,IAH1C,mBAGViK,EAHU,KAGKC,EAHL,OAIOlK,mBAAiB,GAJxB,mBAIVmK,EAJU,KAIJrJ,EAJI,OAKqBd,oBAAS,GAL9B,mBAKVoK,EALU,KAKGC,EALH,OAM8B3D,YAAc,CAACD,GAAK0D,GAAO,CACtEhE,QAAS,SAACmE,GAENnF,EAAemF,EAAIjE,SAAS3D,KAAK7D,YAHjC6D,EANS,EAMTA,KAAM8F,EANG,EAMHA,UAAW+B,EANR,EAMQA,WAAYnE,EANpB,EAMoBA,MANpB,EAa8BqC,YAAYqB,GAAa,CACpEpB,UAAW,WAEP7C,EAAY8C,kBAAkBlC,IAC9B4D,GAAe,IAEnBlE,QAAS,WAELhB,EAAe,iDARfyD,EAbS,EAaTA,OAAmB4B,EAbV,EAaDhC,UAYV7F,EAAU8H,mBACZ,iBAAM,CACF,CACI9L,OAAQ,MACR+L,SAAU,MAEd,CACI/L,OAAQ,OACR+L,SAAU,OACVC,KAAM,SAACjI,GAAD,OACF,qBAAKzE,UAAU,cAAf,SACI,qBAAK2M,IAAG,UX/DH9K,GW+DG,kBAA4B4C,EAAKoC,IAAIwE,OAAOF,MAAQyB,IAAI,aAK5E,CACIlM,OAAQ,OACR+L,SAAU,QAEd,CACI/L,OAAQ,MACR+L,SAAU,OAEd,CACI/L,OAAQ,UACRgM,KAAM,SAACjI,GAEH,OACI,sBAAKzE,UAAU,SAAf,UACI,wBAAQmD,QAAS,WACb8I,EAAiBxH,EAAKoC,IAAIwE,OAAO9L,IACjC6C,KAFJ,SAII,cAAC,IAAD,CAAYoD,MAAO/D,EAAgB4D,KAAM,OAE7C,wBAAQrF,UAAU,OAAOmD,QAAS,WAC9B8I,EAAiBxH,EAAKoC,IAAIwE,OAAO9L,IACjC6M,GAAe,IAFnB,SAII,cAAC,IAAD,CAAc5G,MAAM,MAAMH,KAAM,eAOxD,IAOJ,OACI,qCACI,eAAC/C,EAAA,EAAD,CAAWC,OAAK,EAACvC,UAAU,8BAA3B,UACI,eAACsC,EAAA,EAAD,CAAWC,OAAK,EAACvC,UAAU,sCAA3B,UACI,oBAAIA,UAAU,gCAAd,oBAEe,YAAXgC,EACI,cAAC2J,EAAA,EAAD,CAAQlJ,QAAQ,UAAUU,QAASjB,EAAnC,SACI,sBAAKlC,UAAU,iBAAf,UACI,cAAC,IAAD,CAAkBqF,KAAM,KAD5B,IACmC,0CAGvC,cAACsG,EAAA,EAAD,CAAQlJ,QAAQ,UAAUU,QAAShB,EAAnC,SACI,sBAAKnC,UAAU,iBAAf,UAEI,cAAC,IAAD,CAAkBqF,KAAM,KAF5B,IAEmC,+CAOnD,eAAC/C,EAAA,EAAD,CAAWC,OAAK,EAACvC,UAAU,YAA3B,UAGmB,aAAXgC,GACA,cAACM,EAAA,EAAD,CAAWC,OAAK,EAACvC,UAAU,YAA3B,SACI,cAAC,GAAD,MAKO,YAAXgC,GACA,cAACM,EAAA,EAAD,CAAWC,OAAK,EAACvC,UAAU,YAA3B,SACI,cAAC,GAAD,CAAkBT,GAAIyM,MAKd,YAAXhK,GACD,mCAESuI,GAAa+B,EACV,cAAC,EAAD,IAGA,sCAESnE,GACD,cAAC,EAAD,CAAY1D,KAAMA,EAAKA,KAAMC,QAASA,KAGrCyD,GAAS1D,EAAKA,KAAKX,OAAS,EACzB,cAAC,EAAD,CACIlB,YAAc6B,EAAMoI,aACpB7J,SAAWyB,EAAMqI,UACjBjK,QAASA,EACTC,cAAgB2B,EAAMsI,cACtBhK,cAAgB0B,EAAMuI,gBAExB,KAdd,gBAuBxB,eAACC,EAAA,EAAD,CAAOC,KAAMf,EAAagB,OAAQ,kBAAMf,GAAe,IAAvD,UACI,cAACa,EAAA,EAAMvM,OAAP,CAAc0M,aAAW,EAAzB,SACI,cAACH,EAAA,EAAMI,MAAP,8BAEJ,cAACJ,EAAA,EAAMtM,KAAP,sFACA,eAACsM,EAAA,EAAMK,OAAP,WACI,cAAC3B,EAAA,EAAD,CAAQlJ,QAAQ,WAAWU,QAAS,kBAAMiJ,GAAe,IAAzD,mBAGA,cAACT,EAAA,EAAD,CAAQlJ,QAAQ,SAASU,QAAS,WAE9BwH,EAAOqB,IAFX,SAKQO,EACI,cAAC/J,EAAA,EAAD,CAASE,UAAU,SAAS2C,KAAK,OACjC,qBCrL1BmD,GAAM,eAGNuB,GAAoB,SAAC,GAA0D,IAAxDC,EAAuD,EAAvDA,SAAUzK,EAA6C,EAA7CA,GACnC,OAAKA,EAOEmC,EAAIuI,KAAJ,UAAYzB,GAAZ,YAAmBjJ,GAAMyK,EAAU,CACtCzD,QAAS,CAAE,eAAgB,yBAPpB7E,EAAIuI,KAAJ,UAAYzB,IAAOwB,EAAU,CAChCzD,QAAS,CAAE,eAAgB,0BA4GxB2D,GAjGgB,SAAC,GAAoC,IAAD,IAAjC3K,UAAiC,MAA5B,GAA4B,EAG/D4K,qBAAU,WACNC,IAAkBC,SACnB,IAL4D,MAOX5B,YAAc,CAAC,WAArD8E,EAPiD,EAOvD9I,KAAyB+I,EAP8B,EAOzCjD,UAPyC,EAQtBhC,GAAkB,CAAEhJ,KAAIiJ,SAAzD/D,EARuD,EAQvDA,KAAiB6F,EARsC,EAQjDC,UARiD,EASlBC,YAAYT,GAAmB,CACxEU,UAAW,WACPlK,YAAW,kBACPqH,EAAY8C,kBAAkBlC,MAC5B,QAJNmC,EATuD,EASvDA,OAAQJ,EAT+C,EAS/CA,UAAWpC,EAToC,EASpCA,MAAOnG,EAT6B,EAS7BA,OASlC4I,QAAQC,IAAIpG,GAEZ,IAAMqG,EAAUrG,GAASA,EAOzB,OAAI6F,EACO,cAAC,EAAD,IAIP,cAACS,GAAA,EAAD,CAAK/K,UAAU,eAAf,SACI,cAACgL,GAAA,EAAD,CAAKhL,UAAU,2BAAf,SAEI,cAAC,KAAD,CACIiL,cAAe,CAAE7J,KAAM0J,EAAUA,EAAQ1J,KAAO,GAAI8J,IAAKJ,EAAUA,EAAQI,IAAM,GAAIuC,MAAO,GAAIC,SAAU,IAC1GtC,SAAU,SAACC,GACP,IAAMrB,EAAW,IAAIsB,SACrBtB,EAASuB,OAAO,OAAQF,EAAOjK,MAC1B7B,IACDyK,EAASuB,OAAO,QAASF,EAAOoC,OAChCzD,EAASuB,OAAO,MAAOF,EAAOH,KAC9BlB,EAASuB,OAAO,WAAYF,EAAOqC,WAKvC/C,EAAO,CAAEX,WAAUzK,QAb3B,SAeK,gBAAGwJ,EAAH,EAAGA,cAAH,OACG,eAAC,KAAD,WACI,oBAAI/I,UAAU,gCAAd,SAA8C,4BAAIT,EAAK,qBAAuB,yBAClE,YAAXyC,GACG,cAACwJ,GAAA,EAAD,CAAO/I,QAAQ,UAAf,SAA0BlD,EAAK,mCAAqC,qCAEvE4I,GACG,cAACqD,GAAA,EAAD,CAAO/I,QAAQ,SAAf,SAA0B0F,EAAgBvH,UAE9C,sBAAKZ,UAAS,wBAAd,UACI,cAAC,GAAD,CACIoB,KAAK,OACLmD,YAAY,OACZsE,MAAM,OACN4C,UAAQ,KAIPlM,GACD,cAAC,GAAD,CAAY6B,KAAK,MAAMmD,YAAY,MAAMsE,MAAM,MAAM4C,UAAQ,KAG5DlM,GACD,cAAC,GAAD,CAAY6B,KAAK,QAAQmD,YAAY,QAAQsE,MAAM,2BAA2BD,QAAM,EAACG,cAAeA,KAGnGxJ,GACD,cAAC,GAAD,CAAY6B,KAAK,WAAWmD,YAAY,QAAQsE,MAAM,eAAeC,GAAG,SAASE,YAAawE,GAAmBD,EAAQ9I,UAGjI,cAACsG,GAAA,EAAD,CAAK/K,UAAU,gCAAf,SACI,cAACgL,GAAA,EAAD,CAAKU,GAAG,IAAR,SACI,cAACC,EAAA,EAAD,CAAQ9F,KAAK,SAAS+F,SAAUrB,EAAWvK,UAAU,QAArD,SACKuK,EAAY,cAAC/H,EAAA,EAAD,CAASE,UAAU,SAAS2C,KAAK,OAAU,0BChG1FmD,GAAM,eAINmF,GAAoB,SAACpO,GAEvB,OAAOmC,EAAIoK,OAAJ,UAActD,GAAd,YAAqBjJ,GAAM,CAC9BgH,QAAS,CAAE,eAAgB,0BAsLpBqH,GA/KK,WAAM,MAE+C9L,IAA7DK,EAFc,EAEdA,gBAAiBD,EAFH,EAEGA,iBAAkBF,EAFrB,EAEqBA,OAAQI,EAF7B,EAE6BA,cAF7B,EAGoBL,mBAAiB,IAHrC,mBAGfiK,EAHe,KAGAC,EAHA,OAIElK,mBAAiB,GAJnB,mBAIfmK,EAJe,KAITrJ,EAJS,OAKgBd,oBAAS,GALzB,mBAKfoK,EALe,KAKFC,EALE,OAMkB3D,YAAc,CAACD,GAAK0D,IAApDzH,EANc,EAMdA,KAAM8F,EANQ,EAMRA,UAAW+B,EANH,EAMGA,WANH,EASyB9B,YAAYmD,GAAmB,CAC1ElD,UAAW,WAEP7C,EAAY8C,kBAAkBlC,IAC9B4D,GAAe,IAEnBlE,QAAS,WAELhB,EAAe,iDARfyD,EATc,EASdA,OAAmB4B,EATL,EASNhC,UAYV7F,EAAU8H,mBACZ,iBAAM,CACF,CACI9L,OAAQ,MACR+L,SAAU,MAEd,CACI/L,OAAQ,QACR+L,SAAU,QACVC,KAAM,SAACjI,GAAD,OACF,qBAAKzE,UAAU,cAAf,SACI,qBAAK2M,IAAG,Ub5DH9K,Ia4DG,OAAqB2G,GAArB,YAA4B/D,EAAKoC,IAAIwE,OAAOoC,OAASb,IAAKpE,SAK9E,CACI9H,OAAQ,OACR+L,SAAU,QAGd,CACI/L,OAAQ,MACR+L,SAAU,OAEd,CACI/L,OAAQ,QACR+L,SAAU,YAMd,CACI/L,OAAQ,UACRgM,KAAM,SAACjI,GAEH,OACI,sBAAKzE,UAAU,SAAf,UACI,wBAAQmD,QAAS,WACb8I,EAAiBxH,EAAKoC,IAAIwE,OAAO9L,IACjC6C,KAFJ,SAII,cAAC,IAAD,CAAYoD,MAAO/D,EAAgB4D,KAAM,OAE7C,wBAAQrF,UAAU,OAAOmD,QAAS,WAC9B8I,EAAiBxH,EAAKoC,IAAIwE,OAAO9L,IACjC6M,GAAe,IAFnB,SAII,cAAC,IAAD,CAAc5G,MAAM,MAAMH,KAAM,eAOxD,IAOJ,OACI,qCACI,eAAC/C,EAAA,EAAD,CAAWC,OAAK,EAACvC,UAAU,8BAA3B,UACI,eAACsC,EAAA,EAAD,CAAWC,OAAK,EAACvC,UAAU,sCAA3B,UACI,oBAAIA,UAAU,gCAAd,0BAEe,YAAXgC,EACI,cAAC2J,EAAA,EAAD,CAAQlJ,QAAQ,UAAUU,QAASjB,EAAnC,SACI,sBAAKlC,UAAU,iBAAf,UACI,cAAC,IAAD,CAAkBqF,KAAM,KAD5B,IACmC,0CAGvC,cAACsG,EAAA,EAAD,CAAQlJ,QAAQ,UAAUU,QAAShB,EAAnC,SACI,sBAAKnC,UAAU,iBAAf,UAEI,cAAC,IAAD,CAAkBqF,KAAM,KAF5B,IAEmC,+CAOnD,eAAC/C,EAAA,EAAD,CAAWC,OAAK,EAACvC,UAAU,YAA3B,UAGmB,aAAXgC,GACA,cAACM,EAAA,EAAD,CAAWC,OAAK,EAACvC,UAAU,YAA3B,SACI,cAAC,GAAD,MAKO,YAAXgC,GACA,cAACM,EAAA,EAAD,CAAWC,OAAK,EAACvC,UAAU,YAA3B,SACI,cAAC,GAAD,CAAkBT,GAAIyM,MAKd,YAAXhK,GACD,mCAESuI,GAAa+B,EACV,cAAC,EAAD,IAGA,qCACI,cAAC,EAAD,CAAY7H,KAAOA,EAAMA,KAAMC,QAASA,IAEnCD,EAAMA,KAAKX,OAAS,EACjB,cAAC,EAAD,CACIlB,YAAc6B,EAAMoI,aACpB7J,SAAWyB,EAAMqI,UACjBjK,QAASA,EACTC,cAAgB2B,EAAMsI,cACtBhK,cAAgB0B,EAAMuI,gBAExB,KAXd,gBAoBxB,eAACC,EAAA,EAAD,CAAOC,KAAMf,EAAagB,OAAQ,kBAAMf,GAAe,IAAvD,UACI,cAACa,EAAA,EAAMvM,OAAP,CAAc0M,aAAW,EAAzB,SACI,cAACH,EAAA,EAAMI,MAAP,8BAEJ,cAACJ,EAAA,EAAMtM,KAAP,sFACA,eAACsM,EAAA,EAAMK,OAAP,WACI,cAAC3B,EAAA,EAAD,CAAQlJ,QAAQ,WAAWU,QAAS,kBAAMiJ,GAAe,IAAzD,mBAGA,cAACT,EAAA,EAAD,CAAQlJ,QAAQ,SAASU,QAAS,WAE9BwH,EAAOqB,IAFX,SAKQO,EACI,cAAC/J,EAAA,EAAD,CAASE,UAAU,SAAS2C,KAAK,OACjC,qBCxL1BmD,GAAM,aAINqF,GAAyB,SAAC,GAA+D,IAA7D7D,EAA4D,EAA5DA,SAAUzK,EAAkD,EAAlDA,GACxC,OAAKA,EAOEmC,EAAIuI,KAAJ,UAAYzB,GAAZ,YAAmBjJ,GAAMyK,EAAU,CACtCzD,QAAS,CAAE,eAAgB,sBAPpB7E,EAAIuI,KAAJ,UAAYzB,IAAOwB,EAAU,CAChCzD,QAAS,CAAE,eAAgB,uBAuFxBuH,GA5EoB,SAAC,GAAoC,IAAD,IAAjCvO,UAAiC,MAA5B,GAA4B,EAGnE4K,qBAAU,WACNC,IAAkBC,SACnB,IALgE,MAM1B9B,GAAkB,CAAEhJ,KAAIiJ,SAAzD/D,EAN2D,EAM3DA,KAAiB6F,EAN0C,EAMrDC,UANqD,EAOtBC,YAAYqD,GAAwB,CAC7EpD,UAAW,WACPlK,YAAW,kBACPqH,EAAY8C,kBAAkBlC,MAC5B,QAJNmC,EAP2D,EAO3DA,OAAQJ,EAPmD,EAOnDA,UAAWpC,EAPwC,EAOxCA,MAAOnG,EAPiC,EAOjCA,OAU5B8I,EAAUrG,GAASA,EAOzB,OALAmG,QAAQC,IAAI,UAAWpG,GAKnB6F,EACO,cAAC,EAAD,IAIP,cAACS,GAAA,EAAD,CAAK/K,UAAU,eAAf,SACI,cAACgL,GAAA,EAAD,CAAKhL,UAAU,2BAAf,SAEI,cAAC,KAAD,CACIiL,cAAe,CAAE7J,KAAM0J,EAAUA,EAAQ1J,KAAO,IAChDgK,SAAU,SAACC,GAEPT,QAAQC,IAAIQ,GACZV,EAAO,CAAEX,SAAUqB,EAAQ9L,QALnC,SAOK,kBACG,eAAC,KAAD,CAAMS,UAAU,QAAhB,UACI,oBAAIA,UAAU,gCAAd,SAA8C,4BAAIT,EAAK,iBAAmB,sBAC9D,YAAXyC,GACG,cAACwJ,GAAA,EAAD,CAAO/I,QAAQ,UAAf,SAA0BlD,EAAK,gCAAkC,kCAEpE4I,GACG,cAACqD,GAAA,EAAD,CAAO/I,QAAQ,SAAf,SAA0B0F,EAAgBvH,UAG9C,qBAAKZ,UAAU,sBAAf,SACI,cAAC,GAAD,CACIoB,KAAK,OACLmD,YAAY,OACZsE,MAAM,OACN4C,UAAQ,MAKhB,cAACV,GAAA,EAAD,CAAK/K,UAAU,gCAAf,SACI,cAACgL,GAAA,EAAD,CAAKU,GAAG,IAAR,SACI,cAACC,EAAA,EAAD,CAAQ9F,KAAK,SAAS+F,SAAUrB,EAAWvK,UAAU,QAArD,SACKuK,EAAY,cAAC/H,EAAA,EAAD,CAASE,UAAU,SAAS2C,KAAK,OAAU,0BC9E1FmD,GAAM,aAINmF,GAAoB,SAACpO,GAEvB,OAAOmC,EAAIoK,OAAJ,UAActD,GAAd,YAAqBjJ,GAAM,CAC9BgH,QAAS,CAAE,eAAgB,0BAgKpBwH,GAzJI,WAAM,MAEgDjM,IAA7DK,EAFa,EAEbA,gBAAiBD,EAFJ,EAEIA,iBAAkBF,EAFtB,EAEsBA,OAAQI,EAF9B,EAE8BA,cAF9B,EAGqBL,mBAAiB,IAHtC,mBAGdiK,EAHc,KAGCC,EAHD,OAIGlK,mBAAiB,GAJpB,mBAIdmK,EAJc,KAIRrJ,EAJQ,OAKiBd,oBAAS,GAL1B,mBAKdoK,EALc,KAKDC,EALC,OAMmB3D,YAAS,CAACD,GAAK0D,IAA/CzH,EANa,EAMbA,KAAM8F,EANO,EAMPA,UAAW+B,EANJ,EAMIA,WANJ,EAS0B9B,YAAYmD,GAAmB,CAC1ElD,UAAW,WAEP7C,EAAY8C,kBAAkBlC,IAC9B4D,GAAe,IAEnBlE,QAAS,WAELhB,EAAe,iDARfyD,EATa,EASbA,OAAmB4B,EATN,EASLhC,UAYV7F,EAAU8H,mBACZ,iBAAM,CACF,CACI9L,OAAQ,MACR+L,SAAU,MAGd,CACI/L,OAAQ,OACR+L,SAAU,QAEd,CACI/L,OAAQ,UACRgM,KAAM,SAACjI,GAEH,OACI,sBAAKzE,UAAU,SAAf,UACI,wBAAQmD,QAAS,WACb8I,EAAiBxH,EAAKoC,IAAIwE,OAAO9L,IACjC6C,KAFJ,SAII,cAAC,IAAD,CAAYoD,MAAO/D,EAAgB4D,KAAM,OAE7C,wBAAQrF,UAAU,OAAOmD,QAAS,WAC9B8I,EAAiBxH,EAAKoC,IAAIwE,OAAO9L,IACjC6M,GAAe,IAFnB,SAII,cAAC,IAAD,CAAc5G,MAAM,MAAMH,KAAM,eAOxD,IAOJ,OACI,qCACI,eAAC/C,EAAA,EAAD,CAAWC,OAAK,EAACvC,UAAU,8BAA3B,UACI,eAACsC,EAAA,EAAD,CAAWC,OAAK,EAACvC,UAAU,sCAA3B,UACI,oBAAIA,UAAU,gCAAd,wBAEe,YAAXgC,EACI,cAAC2J,EAAA,EAAD,CAAQlJ,QAAQ,UAAUU,QAASjB,EAAnC,SACI,sBAAKlC,UAAU,iBAAf,UACI,cAAC,IAAD,CAAkBqF,KAAM,KAD5B,IACmC,0CAGvC,cAACsG,EAAA,EAAD,CAAQlJ,QAAQ,UAAUU,QAAShB,EAAnC,SACI,sBAAKnC,UAAU,iBAAf,UAEI,cAAC,IAAD,CAAkBqF,KAAM,KAF5B,IAEmC,+CAOnD,eAAC/C,EAAA,EAAD,CAAWC,OAAK,EAACvC,UAAU,YAA3B,UAGmB,aAAXgC,GACA,cAACM,EAAA,EAAD,CAAWC,OAAK,EAACvC,UAAU,YAA3B,SACI,cAAC,GAAD,MAKO,YAAXgC,GACA,cAACM,EAAA,EAAD,CAAWC,OAAK,EAACvC,UAAU,YAA3B,SACI,cAAC,GAAD,CAAkBT,GAAIyM,MAKd,YAAXhK,GACD,mCAESuI,GAAa+B,EACV,cAAC,EAAD,IAGA,qCACI,cAAC,EAAD,CAAY7H,KAAOA,EAAaA,KAAMC,QAASA,IAE1CD,EAAaA,KAAKX,OAAS,EACxB,cAAC,EAAD,CACIlB,YAAc6B,EAAaoI,aAC3B7J,SAAWyB,EAAaqI,UACxBjK,QAASA,EACTC,cAAgB2B,EAAasI,cAC7BhK,cAAgB0B,EAAauI,gBAE/B,KAXd,gBAoBxB,eAACC,EAAA,EAAD,CAAOC,KAAMf,EAAagB,OAAQ,kBAAMf,GAAe,IAAvD,UACI,cAACa,EAAA,EAAMvM,OAAP,CAAc0M,aAAW,EAAzB,SACI,cAACH,EAAA,EAAMI,MAAP,8BAEJ,cAACJ,EAAA,EAAMtM,KAAP,sFACA,eAACsM,EAAA,EAAMK,OAAP,WACI,cAAC3B,EAAA,EAAD,CAAQlJ,QAAQ,WAAWU,QAAS,kBAAMiJ,GAAe,IAAzD,mBAGA,cAACT,EAAA,EAAD,CAAQlJ,QAAQ,SAASU,QAAS,WAE9BwH,EAAOqB,IAFX,SAKQO,EACI,cAAC/J,EAAA,EAAD,CAASE,UAAU,SAAS2C,KAAK,OACjC,qBClK1BmD,GAAM,UAGNwF,GAAsB,SAAC,GAAqD,IAAnDhE,EAAkD,EAAlDA,SAAUzK,EAAwC,EAAxCA,GACrC,OAAKA,EAOEmC,EAAIuI,KAAJ,UAAYzB,GAAZ,YAAmBjJ,GAAMyK,EAAU,CACtCzD,QAAS,CAAE,eAAgB,sBAPpB7E,EAAIuI,KAAJ,UAAYzB,IAAOwB,EAAU,CAChCzD,QAAS,CAAE,eAAgB,wBAmGxB0H,GAxFgB,SAAC,GAAoC,IAAD,IAAjC1O,UAAiC,MAA5B,GAA4B,EAG/D4K,qBAAU,WACNC,IAAkBC,SACnB,IAL4D,MAMtB9B,GAAkB,CAAEhJ,KAAIiJ,SAAzD/D,EANuD,EAMvDA,KAAiB6F,EANsC,EAMjDC,UANiD,EAOlBC,YAAYwD,GAAqB,CAC1EvD,UAAW,WACPlK,YAAW,kBACPqH,EAAY8C,kBAAkBlC,MAC5B,QAJNmC,EAPuD,EAOvDA,OAAQJ,EAP+C,EAO/CA,UAAWpC,EAPoC,EAOpCA,MAAOnG,EAP6B,EAO7BA,OAU5B8I,EAAUrG,GAASA,EAOzB,OALAmG,QAAQC,IAAI,UAAWC,GAKnBR,EACO,cAAC,EAAD,IAIP,cAACS,GAAA,EAAD,CAAK/K,UAAU,eAAf,SACI,cAACgL,GAAA,EAAD,CAAKhL,UAAU,2BAAf,SAEI,cAAC,KAAD,CACIiL,cAAe,CAAEiD,MAAOpD,EAAUA,EAAQoD,MAAQ,GAAIC,YAAarD,EAAUA,EAAQqD,YAAc,GAAIC,YAAatD,EAAUA,EAAQsD,YAAc,GAAIC,MAAOvD,EAAUA,EAAQuD,MAAQ,IACzLjD,SAAU,SAACC,GAIPV,EAAO,CAAEX,SAAUqB,EAAQ9L,QANnC,SAQK,cAAGwJ,cAAH,OACG,eAAC,KAAD,WACI,oBAAI/I,UAAU,gCAAd,SAA8C,4BAAIT,EAAK,iBAAmB,oBAC9D,YAAXyC,GACG,cAACwJ,GAAA,EAAD,CAAO/I,QAAQ,UAAf,SAA0BlD,EAAK,8BAAgC,gCAElE4I,GACG,cAACqD,GAAA,EAAD,CAAO/I,QAAQ,SAAf,SAA0B0F,EAAgBvH,UAE9C,sBAAKZ,UAAU,wBAAf,UACI,cAAC,GAAD,CACIoB,KAAK,QACLmD,YAAY,QACZsE,MAAM,QACN4C,UAAQ,KAIPlM,GACD,cAAC,GAAD,CAAY6B,KAAK,cAAcmD,YAAY,cAAcsE,MAAM,cAAc4C,UAAQ,KAGpFlM,GACD,cAAC,GAAD,CAAY6B,KAAK,cAAcmD,YAAY,cAAcsE,MAAM,aAAaC,GAAG,WAAW2C,UAAQ,KAIjGlM,GACD,cAAC,GAAD,CAAY6B,KAAK,QAAQmD,YAAY,QAAQsE,MAAM,QAAQC,GAAG,WAAW2C,UAAQ,OAGzF,cAACV,GAAA,EAAD,CAAK/K,UAAU,gCAAf,SACI,cAACgL,GAAA,EAAD,CAAKU,GAAG,IAAR,SACI,cAACC,EAAA,EAAD,CAAQ9F,KAAK,SAAS+F,SAAUrB,EAAWvK,UAAU,QAArD,SACKuK,EAAY,cAAC/H,EAAA,EAAD,CAASE,UAAU,SAAS2C,KAAK,OAAU,0BCvF1FmD,GAAM,UAIN8F,GAAe,SAAC/O,GAElB,OAAOmC,EAAIoK,OAAJ,UAActD,GAAd,YAAqBjJ,GAAM,CAC9BgH,QAAS,CAAE,eAAgB,0BAyKpBgI,GAlKC,WAAM,MAEmDzM,IAA7DK,EAFU,EAEVA,gBAAiBD,EAFP,EAEOA,iBAAkBF,EAFzB,EAEyBA,OAAQI,EAFjC,EAEiCA,cAFjC,EAGwBL,mBAAiB,IAHzC,mBAGXiK,EAHW,KAGIC,EAHJ,OAIMlK,mBAAiB,GAJvB,mBAIXmK,EAJW,KAILrJ,EAJK,OAKoBd,oBAAS,GAL7B,mBAKXoK,EALW,KAKEC,EALF,OAMsB3D,YAAS,CAACD,GAAK0D,IAA/CzH,EANU,EAMVA,KAAM8F,EANI,EAMJA,UAAW+B,EANP,EAMOA,WANP,EAS6B9B,YAAY8D,GAAc,CACrE7D,UAAW,WAEP7C,EAAY8C,kBAAkBlC,IAC9B4D,GAAe,IAEnBlE,QAAS,WAELhB,EAAe,iDARfyD,EATU,EASVA,OAAmB4B,EATT,EASFhC,UAYV7F,EAAU8H,mBACZ,iBAAM,CACF,CACI9L,OAAQ,MACR+L,SAAU,MAGd,CACI/L,OAAQ,QACR+L,SAAU,SAGd,CACI/L,OAAQ,OACR+L,SAAU,QAEd,CACI/L,OAAQ,cACR+L,SAAU,eAEd,CACI/L,OAAQ,UACRgM,KAAM,SAACjI,GAEH,OACI,sBAAKzE,UAAU,SAAf,UACI,wBAAQmD,QAAS,WACb8I,EAAiBxH,EAAKoC,IAAIwE,OAAO9L,IACjC6C,KAFJ,SAII,cAAC,IAAD,CAAYoD,MAAO/D,EAAgB4D,KAAM,OAE7C,wBAAQrF,UAAU,OAAOmD,QAAS,WAC9B8I,EAAiBxH,EAAKoC,IAAIwE,OAAO9L,IACjC6M,GAAe,IAFnB,SAII,cAAC,IAAD,CAAc5G,MAAM,MAAMH,KAAM,eAOxD,IAOJ,OACI,qCACI,eAAC/C,EAAA,EAAD,CAAWC,OAAK,EAACvC,UAAU,8BAA3B,UACI,eAACsC,EAAA,EAAD,CAAWC,OAAK,EAACvC,UAAU,sCAA3B,UACI,oBAAIA,UAAU,gCAAd,qBAEe,YAAXgC,EACI,cAAC2J,EAAA,EAAD,CAAQlJ,QAAQ,UAAUU,QAASjB,EAAnC,SACI,sBAAKlC,UAAU,iBAAf,UACI,cAAC,IAAD,CAAkBqF,KAAM,KAD5B,IACmC,0CAGvC,cAACsG,EAAA,EAAD,CAAQlJ,QAAQ,UAAUU,QAAShB,EAAnC,SACI,sBAAKnC,UAAU,iBAAf,UAEI,cAAC,IAAD,CAAkBqF,KAAM,KAF5B,IAEmC,+CAOnD,eAAC/C,EAAA,EAAD,CAAWC,OAAK,EAACvC,UAAU,YAA3B,UAGmB,aAAXgC,GACA,cAACM,EAAA,EAAD,CAAWC,OAAK,EAACvC,UAAU,YAA3B,SACI,cAAC,GAAD,MAKO,YAAXgC,GACA,cAACM,EAAA,EAAD,CAAWC,OAAK,EAACvC,UAAU,YAA3B,SACI,cAAC,GAAD,CAAkBT,GAAIyM,MAKd,YAAXhK,GACD,mCAESuI,GAAa+B,EACV,cAAC,EAAD,IAGA,qCACI,cAAC,EAAD,CAAY7H,KAAOA,EAAaA,KAAMC,QAASA,IAE1CD,EAAaA,KAAKX,OAAS,EACxB,cAAC,EAAD,CACIlB,YAAc6B,EAAaoI,aAC3B7J,SAAWyB,EAAaqI,UACxBjK,QAASA,EACTC,cAAgB2B,EAAasI,cAC7BhK,cAAgB0B,EAAauI,gBAE/B,KAXd,gBAoBxB,eAACC,EAAA,EAAD,CAAOC,KAAMf,EAAagB,OAAQ,kBAAMf,GAAe,IAAvD,UACI,cAACa,EAAA,EAAMvM,OAAP,CAAc0M,aAAW,EAAzB,SACI,cAACH,EAAA,EAAMI,MAAP,8BAEJ,cAACJ,EAAA,EAAMtM,KAAP,sFACA,eAACsM,EAAA,EAAMK,OAAP,WACI,cAAC3B,EAAA,EAAD,CAAQlJ,QAAQ,WAAWU,QAAS,kBAAMiJ,GAAe,IAAzD,mBAGA,cAACT,EAAA,EAAD,CAAQlJ,QAAQ,SAASU,QAAS,WAE9BwH,EAAOqB,IAFX,SAKQO,EACI,cAAC/J,EAAA,EAAD,CAASE,UAAU,SAAS2C,KAAK,OACjC,qBCxLjB,OAA0B,iCCS5BmJ,GAA6B,CAAC,CACvC,GAAM,IACN,SAAYf,GACZ,WAAc,UACd,KAAQ,SACT,CACC,GAAM,IACN,SAAYA,GACZ,WAAc,UACd,KAAQ,WACT,CACC,GAAM,IACN,SAAYA,GACZ,WAAc,UACd,KAAQ,OACT,CACC,GAAM,IACN,SAAYA,GACZ,WAAc,QACd,KAAQ,OACT,CACC,GAAM,IACN,SAAYA,GACZ,WAAc,UACd,KAAQ,WACT,CACC,GAAM,IACN,SAAYA,GACZ,WAAc,SACd,KAAQ,YCWGvD,GAtCgB,SAAC,GAA+D,IAAD,IAA5DkE,mBAA4D,MAA9C,GAA8C,MAA1CF,aAA0C,MAAlC,GAAkC,EAK1F,OAHA/D,qBAAU,WACNC,IAAkBC,SACnB,IAGC,cAAC,KAAD,CACIY,cAAe,CAAEiD,QAAOE,cAAaX,MAAO,MAC5CrC,SAAU,SAACC,GACPT,QAAQC,IAAIQ,IAHpB,SAKK,gBAAGtC,EAAH,EAAGA,cAAH,OACG,eAAC,KAAD,WACI,cAAC,GAAD,CACI3H,KAAK,QACLmD,YAAY,QACZsE,MAAM,UAGV,cAAC,GAAD,CAAYzH,KAAK,cAAcmD,YAAY,cAAcsE,MAAM,gBAC/D,cAAC,GAAD,CAAYzH,KAAK,QAAQmD,YAAY,QAAQsE,MAAM,eAAeD,QAAM,EAACG,cAAeA,IAOxF,cAAC4C,EAAA,EAAD,CAAQ9F,KAAK,SAAb,2BC0FLkG,GAtHA,WAAO,IAAD,EACoDjK,IAA7DK,EADS,EACTA,gBAAiBD,EADR,EACQA,iBAAkBF,EAD1B,EAC0BA,OAAQI,EADlC,EACkCA,cADlC,EAEqBL,oBAAS,GAF9B,mBAEVoK,EAFU,KAEGC,EAFH,KAGX3H,EAAY+H,mBACd,8BACOgC,MAEP,IAEE9J,EAAU8H,mBACZ,iBAAM,CACF,CACI9L,OAAQ,MACR+L,SAAU,MAEd,CACI/L,OAAQ,QACR+L,SAAU,WACVC,KAAM,SAACjI,GAAD,OACF,qBAAKzE,UAAU,cAAf,SACI,qBAAK2M,IAAKlI,EAAKoC,IAAIwE,OAAOoD,SAAU7B,IAAI,aAKpD,CACIlM,OAAQ,OACR+L,SAAU,QAEd,CACI/L,OAAQ,OACR+L,SAAU,cAEd,CACI/L,OAAQ,UACRgM,KAAM,kBACF,sBAAK1M,UAAU,SAAf,UACI,wBAAQmD,QAAS,WACbf,KADJ,SAGI,cAAC,IAAD,CAAYoD,MAAO/D,EAAgB4D,KAAM,OAE7C,wBAAQrF,UAAU,OAAOmD,QAAS,WAE9BiJ,GAAe,IAFnB,SAII,cAAC,IAAD,CAAc5G,MAAM,MAAMH,KAAM,eAMpD,CAACjD,IAGL,OACI,qCACI,eAACE,EAAA,EAAD,CAAWC,OAAK,EAACvC,UAAU,8BAA3B,UACI,eAACsC,EAAA,EAAD,CAAWtC,UAAU,sCAArB,UACI,oBAAIA,UAAU,gCAAd,kBAEe,YAAXgC,EACI,cAAC2J,EAAA,EAAD,CAAQlJ,QAAQ,UAAUU,QAASjB,EAAnC,SACI,sBAAKlC,UAAU,iBAAf,UACI,cAAC,IAAD,CAAkBqF,KAAM,KAD5B,IACmC,0CAGvC,cAACsG,EAAA,EAAD,CAAQlJ,QAAQ,UAAUU,QAAShB,EAAnC,SACI,sBAAKnC,UAAU,iBAAf,UAEI,cAAC,IAAD,CAAkBqF,KAAM,KAF5B,IAEmC,+CAOnD,eAAC/C,EAAA,EAAD,CAAWC,OAAK,EAACvC,UAAU,YAA3B,UAGmB,aAAXgC,GACA,cAACM,EAAA,EAAD,CAAWC,OAAK,EAACvC,UAAU,YAA3B,SACI,cAAC0O,GAAD,MAKO,YAAX1M,GACA,cAACM,EAAA,EAAD,CAAWC,OAAK,EAACvC,UAAU,YAA3B,SACI,cAAC0O,GAAD,CAAsBR,MAAM,aAAaE,YAAY,uBAK9C,YAAXpM,GACA,cAAC,EAAD,CAAYyC,KAAMA,EAAMC,QAASA,UAK7C,eAACuI,EAAA,EAAD,CAAOC,KAAMf,EAAagB,OAAQ,kBAAMf,GAAe,IAAvD,UACI,cAACa,EAAA,EAAMvM,OAAP,CAAc0M,aAAW,EAAzB,SACI,cAACH,EAAA,EAAMI,MAAP,8BAEJ,cAACJ,EAAA,EAAMtM,KAAP,sFACA,eAACsM,EAAA,EAAMK,OAAP,WACI,cAAC3B,EAAA,EAAD,CAAQlJ,QAAQ,WAAWU,QAAS,kBAAMiJ,GAAe,IAAzD,mBAGA,cAACT,EAAA,EAAD,CAAQlJ,QAAQ,SAASU,QAAS,kBAAMiJ,GAAe,IAAvD,8B,UC5GLuC,GAXF,WACX,OACE,qBAAK3O,UAAU,eAAf,SACE,qBAAKA,UAAU,OAAf,SACE,qBAAK2M,IAAKxB,GAAMyB,IAAI,cCStBgC,GAAcC,OAAaC,MAAM,CACnCC,MAAOF,OAAaG,QAFJ,eAEyB,6BAA6BvD,SAAS,2BAG7EwD,GAAU,SAACC,GACb,OAAOxN,EAAIuI,KAAJ,gBAA0BiF,EAAU,CACvC3I,QAAS,CAAE,eAAgB,0BAoEpB4I,GA/DG,SAACpP,GAEf,IAAMqP,EAAUC,cAFgB,EAII7E,YAAYyE,IAAxCtE,EAJwB,EAIxBA,OAAQlG,EAJgB,EAIhBA,KAAM8F,EAJU,EAIVA,UAYtB,OAVAJ,qBAAU,WACF1F,IACAmG,QAAQC,IAAI,WAAYpG,EAAKA,MAC7B2K,EAAQE,KAAR,sBAA4B7K,EAAKA,KAAK8K,KAAKR,MAA3C,YAAoDtK,EAAKA,KAAK8K,KAAKC,SAGxE,CAAC/K,IAKA,cAACnC,EAAA,EAAD,CAAWC,OAAK,EAACvC,UAAU,aAA3B,SACI,cAAC,KAAD,CAAQiL,cAAe,CAAE8D,MAAO,IAC5B3D,SAAU,SAAAC,GACN,IAAM6D,EAAW,IAAI5D,SACrB4D,EAAS3D,OAAO,QAASF,EAAO0D,OAEhCpE,EAAOuE,IAGXO,iBAAkBb,GARtB,SAYQ,YAAiB,IAAdc,EAAa,EAAbA,OACC,OACI,cAAC,KAAD,UACI,sBAAK1P,UAAU,6FAAf,UAEI,qBAAKA,UAAU,iBAAf,SACI,cAAC,GAAD,MAGJ,oBAAIA,UAAU,oBAAd,SAAkC,wCAClC,4FAEA,cAAC,GAAD,CAAYoB,KAAK,QAAQmD,YAAY,0BAA0BsE,MAAM,eAAehD,KAAK,OAAOsC,MAAOuH,EAAOX,QAE9G,cAACpD,EAAA,EAAD,CAAQlJ,QAAQ,UAAUoD,KAAK,SAAS7F,UAAU,OAAlD,SAEQuK,EACI,cAAC/H,EAAA,EAAD,CAASE,UAAU,SAASD,QAAQ,YAAY4C,KAAK,OACrD,qBAAKrF,UAAU,iBAAf,SACI,wD,SC5DrC2P,GAXC,SAAC,GAA8C,IAA5CzB,EAA2C,EAA3CA,MAAO0B,EAAoC,EAApCA,KAAMzM,EAA8B,EAA9BA,QAAS0M,EAAqB,EAArBA,KAC7BC,EAAaC,cAAbD,SACR,OACI,cAAC,KAAD,CAAME,GAAIJ,EAAV,SACI,qBAAI5P,UAAW8P,IAAaF,EAAO,iBAAmB,eAClDzM,QAASA,EADb,UAEE0M,GAAQA,EAFV,IAEiB3B,QCEd+B,GARC,SAAC,GAA2B,IAAzB9M,EAAwB,EAAxBA,QACf,OACI,qBAAKnD,UAAU,UAAUmD,QAASA,GAAoB,gB,uCCmBxD+M,GAA+B,CACnC,CACEhC,MAAO,SACP0B,KAAM,UACNC,KAAM,cAAC,KAAD,KAER,CACE3B,MAAO,eACP0B,KAAM,gBACNC,KAAM,cAAC,IAAD,KAER,CACE3B,MAAO,aACP0B,KAAM,cACNC,KAAM,cAAC,KAAD,KAER,CACE3B,MAAO,QACP0B,KAAM,SACNC,KAAM,cAAC,KAAD,KAER,CACE3B,MAAO,WACP0B,KAAM,aACNC,KAAM,cAAC,KAAD,KAER,CACE3B,MAAO,OACP0B,KAAM,QACNC,KAAM,cAAC,KAAD,KAER,CACE3B,MAAO,QACP0B,KAAM,SACNC,KAAM,cAAC,KAAD,KAER,CACE3B,MAAO,UACP0B,KAAM,WACNC,KAAM,cAAC,KAAD,MAGJM,GAA6B,CACjC,CACEjC,MAAO,SACP0B,KAAM,UACNC,KAAM,cAAC,KAAD,KAER,CACE3B,MAAO,gBACP0B,KAAM,iBACNC,KAAM,cAAC,KAAD,KAER,CACE3B,MAAO,iBACP0B,KAAM,kBACNC,KAAM,cAAC,KAAD,MA8DKO,GA1DA,SAAC,GAA0C,IAAxCC,EAAuC,EAAvCA,UAAWC,EAA4B,EAA5BA,aACrBC,EAAYC,qBAAWzR,GAEvB0R,EAAc,WACdH,GACFA,GAAa,IAIjB,OACE,qCACE,sBAAKtQ,UAAWqQ,EAAY,SAAW,GAAvC,UACIE,EAIE,KAHF,qBAAKvQ,UAAU,iBAAf,SACE,cAAC,KAAD,CAASqF,KAAM,GAAIlC,QAASsN,EAAajL,MAAM,YAGnD,sBAAKxF,UAAU,iBAAf,UACE,oBAAIA,UAAU,YAAd,SACE,cAAC,GAAD,CACEkO,MAAM,YACN0B,KAAK,IACLzM,QAASsN,EACTZ,KAAM,cAAC,KAAD,QAIV,mBAAG7P,UAAU,QAAb,oBACA,6BACGkQ,GAAY5P,KAAI,gBAAG4N,EAAH,EAAGA,MAAO0B,EAAV,EAAUA,KAAMC,EAAhB,EAAgBA,KAAhB,OACf,cAAC,GAAD,CACED,KAAMA,EACN1B,MAAOA,EAEP/K,QAASsN,EACTZ,KAAMA,GAFD3B,QAMX,mBAAGlO,UAAU,OAAb,kBACA,6BACGmQ,GAAU7P,KAAI,gBAAG4N,EAAH,EAAGA,MAAO0B,EAAV,EAAUA,KAAMC,EAAhB,EAAgBA,KAAhB,OACb,cAAC,GAAD,CACED,KAAMA,EACN1B,MAAOA,EAEP/K,QAASsN,EACTZ,KAAMA,GAFD3B,cAQdmC,GAAa,cAAC,GAAD,CAASlN,QAASsN,QC5HhCjI,GAAM,QAGNwF,GAAsB,SAAC,GAAqD,IAAnDhE,EAAkD,EAAlDA,SAAUzK,EAAwC,EAAxCA,GACrC,OAAKA,EAOEmC,EAAIuI,KAAJ,UAAYzB,GAAZ,YAAmBjJ,GAAMyK,EAAU,CACtCzD,QAAS,CAAE,eAAgB,sBAPpB7E,EAAIuI,KAAJ,UAAYzB,IAAOwB,EAAU,CAChCzD,QAAS,CAAE,eAAgB,wBA+FxB0H,GApFgB,SAAC,GAAoC,IAAD,IAAjC1O,UAAiC,MAA5B,GAA4B,EAG/D4K,qBAAU,WACNC,IAAkBC,SACnB,IAL4D,MAMtB9B,GAAkB,CAAEhJ,KAAIiJ,SAAzD/D,EANuD,EAMvDA,KAAiB6F,EANsC,EAMjDC,UANiD,EAOlBC,YAAYwD,GAAqB,CAC1EvD,UAAW,WACPlK,YAAW,kBACPqH,EAAY8C,kBAAkBlC,MAC5B,QAJNmC,EAPuD,EAOvDA,OAAQJ,EAP+C,EAO/CA,UAAWpC,EAPoC,EAOpCA,MAAOnG,EAP6B,EAO7BA,OAU5B8I,EAAUrG,GAASA,EAOzB,OALAmG,QAAQC,IAAI,UAAWC,GAKnBR,EACO,cAAC,EAAD,IAIP,cAACS,GAAA,EAAD,CAAK/K,UAAU,eAAf,SACI,cAACgL,GAAA,EAAD,CAAKhL,UAAU,2BAAf,SAEI,cAAC,KAAD,CACIiL,cAAe,CAAE7J,KAAM0J,EAAUA,EAAQ1J,KAAO,GAAIgN,YAAatD,EAAUA,EAAQsD,YAAc,GAAIsC,MAAO5F,EAAUA,EAAQ4F,MAAQ,IACtItF,SAAU,SAACC,GAIPV,EAAO,CAAEX,SAAUqB,EAAQ9L,QANnC,SAQK,cAAGwJ,cAAH,OACG,eAAC,KAAD,WACI,oBAAI/I,UAAU,gCAAd,SAA8C,4BAAIT,EAAK,eAAiB,kBAC5D,YAAXyC,GACG,cAACwJ,GAAA,EAAD,CAAO/I,QAAQ,UAAf,SAA0BlD,EAAK,4BAA8B,8BAEhE4I,GACG,cAACqD,GAAA,EAAD,CAAO/I,QAAQ,SAAf,SAA0B0F,EAAgBvH,UAE9C,sBAAKZ,UAAU,wBAAf,UACI,cAAC,GAAD,CACIoB,KAAK,OACLmD,YAAY,OACZsE,MAAM,OACN4C,UAAQ,KAIPlM,GACD,cAAC,GAAD,CAAYsG,KAAK,SAASzE,KAAK,QAAQmD,YAAY,QAAQsE,MAAM,QAAQ4C,UAAQ,KAGhFlM,GACD,cAAC,GAAD,CAAY6B,KAAK,cAAcmD,YAAY,cAAcsE,MAAM,aAAaC,GAAG,WAAW2C,UAAQ,OAI1G,cAACV,GAAA,EAAD,CAAK/K,UAAU,gCAAf,SACI,cAACgL,GAAA,EAAD,CAAKU,GAAG,IAAR,SACI,cAACC,EAAA,EAAD,CAAQ9F,KAAK,SAAS+F,SAAUrB,EAAWvK,UAAU,QAArD,SACKuK,EAAY,cAAC/H,EAAA,EAAD,CAASE,UAAU,SAAS2C,KAAK,OAAU,0BCnF1FmD,GAAM,QAINmI,GAAa,SAACpR,GAEhB,OAAOmC,EAAIoK,OAAJ,UAActD,GAAd,YAAqBjJ,GAAM,CAC9BgH,QAAS,CAAE,eAAgB,0BA2LpBqK,GApLD,WAAM,MAEqD9O,IAA7DK,EAFQ,EAERA,gBAAiBD,EAFT,EAESA,iBAAkBF,EAF3B,EAE2BA,OAAQI,EAFnC,EAEmCA,cAFnC,EAG0BL,mBAAiB,IAH3C,mBAGTiK,EAHS,KAGMC,EAHN,OAIQlK,mBAAiB,GAJzB,mBAITmK,EAJS,KAIHrJ,EAJG,OAKsBd,oBAAS,GAL/B,mBAKToK,EALS,KAKIC,EALJ,OAMwB3D,YAAS,CAACD,GAAK0D,IAA/CzH,EANQ,EAMRA,KAAM8F,EANE,EAMFA,UAAW+B,EANT,EAMSA,WANT,EAS+B9B,YAAYmG,GAAY,CACnElG,UAAW,WAEP7C,EAAY8C,kBAAkBlC,IAC9B4D,GAAe,IAEnBlE,QAAS,WAELhB,EAAe,iDARfyD,EATQ,EASRA,OAAmB4B,EATX,EASAhC,UAYV7F,EAAU8H,mBACZ,iBAAM,CACF,CACI9L,OAAQ,MACR+L,SAAU,MAGd,CACI/L,OAAQ,OACR+L,SAAU,QAGd,CACI/L,OAAQ,cACR+L,SAAU,eAEd,CACI/L,OAAQ,QACR+L,SAAU,SAEd,CACI/L,OAAQ,YACR+L,SAAU,YACVC,KAAM,SAACjI,GACH,OACI,4BAAkC,IAA9BA,EAAKoC,IAAIwE,OAAOwF,UAAkB,KAAO,UAIzD,CACInQ,OAAQ,aACR+L,SAAU,aACVC,KAAM,SAACjI,GACH,OACI,4BAAmC,IAA/BA,EAAKoC,IAAIwE,OAAOyF,WAAmB,KAAO,UAI1D,CACIpQ,OAAQ,UACRgM,KAAM,SAACjI,GAEH,OACI,sBAAKzE,UAAU,SAAf,UACI,wBAAQmD,QAAS,WACb8I,EAAiBxH,EAAKoC,IAAIwE,OAAO9L,IACjC6C,KAFJ,SAII,cAAC,IAAD,CAAYoD,MAAO/D,EAAgB4D,KAAM,OAE7C,wBAAQrF,UAAU,OAAOmD,QAAS,WAC9B8I,EAAiBxH,EAAKoC,IAAIwE,OAAO9L,IACjC6M,GAAe,IAFnB,SAII,cAAC,IAAD,CAAc5G,MAAM,MAAMH,KAAM,eAOxD,IAOJ,OACI,qCACI,eAAC/C,EAAA,EAAD,CAAWC,OAAK,EAACvC,UAAU,8BAA3B,UACI,eAACsC,EAAA,EAAD,CAAWC,OAAK,EAACvC,UAAU,sCAA3B,UACI,oBAAIA,UAAU,gCAAd,mBAEe,YAAXgC,EACI,cAAC2J,EAAA,EAAD,CAAQlJ,QAAQ,UAAUU,QAASjB,EAAnC,SACI,sBAAKlC,UAAU,iBAAf,UACI,cAAC,IAAD,CAAkBqF,KAAM,KAD5B,IACmC,0CAGvC,cAACsG,EAAA,EAAD,CAAQlJ,QAAQ,UAAUU,QAAShB,EAAnC,SACI,sBAAKnC,UAAU,iBAAf,UAEI,cAAC,IAAD,CAAkBqF,KAAM,KAF5B,IAEmC,+CAOnD,eAAC/C,EAAA,EAAD,CAAWC,OAAK,EAACvC,UAAU,YAA3B,UAGmB,aAAXgC,GACA,cAACM,EAAA,EAAD,CAAWC,OAAK,EAACvC,UAAU,YAA3B,SACI,cAAC,GAAD,MAKO,YAAXgC,GACA,cAACM,EAAA,EAAD,CAAWC,OAAK,EAACvC,UAAU,YAA3B,SACI,cAAC,GAAD,CAAkBT,GAAIyM,MAKd,YAAXhK,GACD,mCAESuI,GAAa+B,EACV,cAAC,EAAD,IAGA,qCACI,cAAC,EAAD,CAAY7H,KAAOA,EAAaA,KAAMC,QAASA,IAE1CD,EAAaA,KAAKX,OAAS,EACxB,cAAC,EAAD,CACIlB,YAAc6B,EAAaoI,aAC3B7J,SAAWyB,EAAaqI,UACxBjK,QAASA,EACTC,cAAgB2B,EAAasI,cAC7BhK,cAAgB0B,EAAauI,gBAE/B,KAXd,gBAoBxB,eAACC,EAAA,EAAD,CAAOC,KAAMf,EAAagB,OAAQ,kBAAMf,GAAe,IAAvD,UACI,cAACa,EAAA,EAAMvM,OAAP,CAAc0M,aAAW,EAAzB,SACI,cAACH,EAAA,EAAMI,MAAP,8BAEJ,cAACJ,EAAA,EAAMtM,KAAP,sFACA,eAACsM,EAAA,EAAMK,OAAP,WACI,cAAC3B,EAAA,EAAD,CAAQlJ,QAAQ,WAAWU,QAAS,kBAAMiJ,GAAe,IAAzD,mBAGA,cAACT,EAAA,EAAD,CAAQlJ,QAAQ,SAASU,QAAS,WAE9BwH,EAAOqB,IAFX,SAKQO,EACI,cAAC/J,EAAA,EAAD,CAASE,UAAU,SAAS2C,KAAK,OACjC,qBC3L1BmD,GAAM,WAGNuI,GAAuB,SAAC,GAAqD,IAAnD/G,EAAkD,EAAlDA,SAAUzK,EAAwC,EAAxCA,GACtC,OAAKA,EAOEmC,EAAIuI,KAAJ,UAAYzB,GAAZ,YAAmBjJ,GAAMyK,EAAU,CACtCzD,QAAS,CAAE,eAAgB,sBAPpB7E,EAAIuI,KAAJ,UAAYzB,IAAOwB,EAAU,CAChCzD,QAAS,CAAE,eAAgB,wBAwGxByK,GA7FkB,SAAC,GAAoC,IAAD,IAAjCzR,UAAiC,MAA5B,GAA4B,EACjEqL,QAAQC,IAAI,KAAMtL,GAClB4K,qBAAU,WACNC,IAAkBC,SACnB,IAJ8D,MAKxB9B,GAAkB,CAAEhJ,KAAIiJ,SAAzD/D,EALyD,EAKzDA,KAAiB6F,EALwC,EAKnDC,UALmD,EAMJ9B,YAAS,cAAxDwI,EANmD,EAMzDxM,KAA6ByM,EAN4B,EAMvC3G,UANuC,EAOpBC,YAAYuG,GAAsB,CAC3EtG,UAAW,WACPlK,YAAW,kBACPqH,EAAY8C,kBAAkBlC,MAC5B,QAJNmC,EAPyD,EAOzDA,OAAQJ,EAPiD,EAOjDA,UAAWpC,EAPsC,EAOtCA,MAAOnG,EAP+B,EAO/BA,OAY5B8I,EAAUrG,GAASA,EAOzB,OALAmG,QAAQC,IAAI,UAAWC,GAKnBR,EACO,cAAC,EAAD,IAIP,cAACS,GAAA,EAAD,CAAK/K,UAAU,eAAf,SACI,cAACgL,GAAA,EAAD,CAAKhL,UAAU,2BAAf,SAEI,cAAC,KAAD,CACIiL,cAAe,CAAE7J,KAAM0J,EAAUA,EAAQ1J,KAAO,GAAI8J,IAAKJ,EAAUA,EAAQI,IAAM,GAAIwF,MAAO5F,EAAUA,EAAQ4F,MAAQ,GAAIS,YAAa,IACvI/F,SAAU,SAACC,GAIPV,EAAO,CAAEX,SAAUqB,EAAQ9L,QANnC,SAQK,cAAGwJ,cAAH,OACG,eAAC,KAAD,WACI,oBAAI/I,UAAU,gCAAd,SAA8C,4BAAIT,EAAK,mBAAqB,qBAChE,YAAXyC,GACG,cAACwJ,GAAA,EAAD,CAAO/I,QAAQ,UAAf,SAA0BlD,EAAK,+BAAiC,iCAEnE4I,GACG,cAACqD,GAAA,EAAD,CAAO/I,QAAQ,SAAf,SAA0B0F,EAAgBvH,UAE9C,sBAAKZ,UAAU,wBAAf,UACI,cAAC,GAAD,CACIoB,KAAK,OACLmD,YAAY,OACZsE,MAAM,OACN4C,UAAQ,KAIPlM,GACD,cAAC,GAAD,CAAY6B,KAAK,MAAMmD,YAAY,MAAMsE,MAAM,MAAM4C,UAAQ,KAG5DlM,GACD,cAAC,GAAD,CAAY6B,KAAK,QAAQmD,YAAY,QAAQsE,MAAM,QAAQhD,KAAK,YAG/DtG,GACD,cAAC,GAAD,CAAY6B,KAAK,cAAcmD,YAAY,WAAWsE,MAAM,kBAAkBC,GAAG,SAASE,YAAakI,GAAwBD,EAAmBxM,QAGjJlF,GACD,cAAC,GAAD,CAAY6B,KAAK,UAAUmD,YAAY,UAAUsE,MAAM,UAAUC,GAAG,gBAG5E,cAACiC,GAAA,EAAD,CAAK/K,UAAU,gCAAf,SACI,cAACgL,GAAA,EAAD,CAAKU,GAAG,IAAR,SACI,cAACC,EAAA,EAAD,CAAQ9F,KAAK,SAAS+F,SAAUrB,EAAWvK,UAAU,QAArD,SACKuK,EAAY,cAAC/H,EAAA,EAAD,CAASE,UAAU,SAAS2C,KAAK,OAAU,0BC7F1FmD,GAAM,WAIN4I,GAAgB,SAAC7R,GAEnB,OAAOmC,EAAIoK,OAAJ,UAActD,GAAd,YAAqBjJ,GAAM,CAC9BgH,QAAS,CAAE,eAAgB,0BAqLpB8K,GA9KE,WAAM,MAEkDvP,IAA7DK,EAFW,EAEXA,gBAAiBD,EAFN,EAEMA,iBAAkBF,EAFxB,EAEwBA,OAAQI,EAFhC,EAEgCA,cAFhC,EAGuBL,mBAAiB,IAHxC,mBAGZiK,EAHY,KAGGC,EAHH,OAIKlK,mBAAiB,GAJtB,mBAIZmK,EAJY,KAINrJ,EAJM,OAKmBd,oBAAS,GAL5B,mBAKZoK,EALY,KAKCC,EALD,OAMqB3D,YAAS,CAACD,GAAK0D,IAA/CzH,EANW,EAMXA,KAAM8F,EANK,EAMLA,UAAW+B,EANN,EAMMA,WANN,EAS4B9B,YAAY4G,GAAe,CACtE3G,UAAW,WAEP7C,EAAY8C,kBAAkBlC,IAC9B4D,GAAe,IAEnBlE,QAAS,WAELhB,EAAe,iDARfyD,EATW,EASXA,OAAmB4B,EATR,EASHhC,UAYV7F,EAAU8H,mBACZ,iBAAM,CACF,CACI9L,OAAQ,MACR+L,SAAU,MAGd,CACI/L,OAAQ,OACR+L,SAAU,QAGd,CACI/L,OAAQ,MACR+L,SAAU,OAEd,CACI/L,OAAQ,UACR+L,SAAU,WAEd,CACI/L,OAAQ,cACR+L,SAAU,eAMd,CACI/L,OAAQ,QACR+L,SAAU,SAEd,CACI/L,OAAQ,UACRgM,KAAM,SAACjI,GAEH,OACI,sBAAKzE,UAAU,SAAf,UACI,wBAAQmD,QAAS,WACb8I,EAAiBxH,EAAKoC,IAAIwE,OAAO9L,IACjC6C,KAFJ,SAII,cAAC,IAAD,CAAYoD,MAAO/D,EAAgB4D,KAAM,OAE7C,wBAAQrF,UAAU,OAAOmD,QAAS,WAC9B8I,EAAiBxH,EAAKoC,IAAIwE,OAAO9L,IACjC6M,GAAe,IAFnB,SAII,cAAC,IAAD,CAAc5G,MAAM,MAAMH,KAAM,eAOxD,IAOJ,OACI,qCACI,eAAC/C,EAAA,EAAD,CAAWC,OAAK,EAACvC,UAAU,8BAA3B,UACI,eAACsC,EAAA,EAAD,CAAWC,OAAK,EAACvC,UAAU,sCAA3B,UACI,oBAAIA,UAAU,gCAAd,sBAEe,YAAXgC,EACI,cAAC2J,EAAA,EAAD,CAAQlJ,QAAQ,UAAUU,QAASjB,EAAnC,SACI,sBAAKlC,UAAU,iBAAf,UACI,cAAC,IAAD,CAAkBqF,KAAM,KAD5B,IACmC,0CAGvC,cAACsG,EAAA,EAAD,CAAQlJ,QAAQ,UAAUU,QAAShB,EAAnC,SACI,sBAAKnC,UAAU,iBAAf,UAEI,cAAC,IAAD,CAAkBqF,KAAM,KAF5B,IAEmC,+CAOnD,eAAC/C,EAAA,EAAD,CAAWC,OAAK,EAACvC,UAAU,YAA3B,UAGmB,aAAXgC,GACA,cAACM,EAAA,EAAD,CAAWC,OAAK,EAACvC,UAAU,YAA3B,SACI,cAAC,GAAD,MAKO,YAAXgC,GACA,cAACM,EAAA,EAAD,CAAWC,OAAK,EAACvC,UAAU,YAA3B,SACI,cAAC,GAAD,CAAkBT,GAAIyM,MAKd,YAAXhK,GACD,mCAESuI,GAAa+B,EACV,cAAC,EAAD,IAGA,qCACI,cAAC,EAAD,CAAY7H,KAAOA,EAAaA,KAAMC,QAASA,IAE1CD,EAAaA,KAAKX,OAAS,EACxB,cAAC,EAAD,CACIlB,YAAc6B,EAAaoI,aAC3B7J,SAAWyB,EAAaqI,UACxBjK,QAASA,EACTC,cAAgB2B,EAAasI,cAC7BhK,cAAgB0B,EAAauI,gBAE/B,KAXd,gBAoBxB,eAACC,EAAA,EAAD,CAAOC,KAAMf,EAAagB,OAAQ,kBAAMf,GAAe,IAAvD,UACI,cAACa,EAAA,EAAMvM,OAAP,CAAc0M,aAAW,EAAzB,SACI,cAACH,EAAA,EAAMI,MAAP,8BAEJ,cAACJ,EAAA,EAAMtM,KAAP,sFACA,eAACsM,EAAA,EAAMK,OAAP,WACI,cAAC3B,EAAA,EAAD,CAAQlJ,QAAQ,WAAWU,QAAS,kBAAMiJ,GAAe,IAAzD,mBAGA,cAACT,EAAA,EAAD,CAAQlJ,QAAQ,SAASU,QAAS,WAE9BwH,EAAOqB,IAFX,SAKQO,EACI,cAAC/J,EAAA,EAAD,CAASE,UAAU,SAAS2C,KAAK,OACjC,qB,UCrMjB,OAA0B,oCCMrCxE,GAAQ1B,kBACR,CAAEoQ,KAAM,OACR,SAAClQ,GAAD,MAAU,CACNiS,QAAS,SAAC/B,GAAD,OAAelQ,GAAI,SAAC4B,GAAD,MAAY,CAAEsO,KAAMA,OAChDgC,WAAY,kBAAMlS,GAAI,SAAC4B,GAAD,MAAY,CAAEsO,KAAM,cAIlD1O,GAAQM,kBAAQN,GAAO,CAAEO,KAAM,SAE/B,IAEeoQ,GAFatS,YAAO2B,ICoEpB4Q,GAxEA,SAAC,GAA0C,IAAxCpB,EAAuC,EAAvCA,UAAWC,EAA4B,EAA5BA,aACrBC,EAAYC,qBAAWzR,GACvBmC,EAAcG,GAAc,SAACJ,GAAD,OAAWA,EAAMC,eAC7CqQ,EAAaC,IAAoB,SAACvQ,GAAD,OAAWA,EAAMsQ,cAOxD,OACE,eAACjP,EAAA,EAAD,CACEC,OAAK,EACLvC,UAAU,kEAFZ,UAIIuQ,EAUE,KATF,qBAAKvQ,UAAU,iBAAf,SACIqQ,EAME,KALF,cAAC,IAAD,CACEhL,KAAM,GACNlC,QAhBO,WACbmN,GACFA,GAAa,IAeL9K,MAAOlE,MAMf,cAAC,GAAD,IAEA,sBACEtB,UACEuQ,EACI,oCACA,4BAJR,UAOE,sBAAKvQ,UAAU,eAAf,UACE,cAAC,KAAD,CAAQqF,KAAM,KACd,qBAAKrF,UAAU,kEAAf,SACE,4BACE,yCAQN,eAACsF,EAAA,EAAD,CAAUtF,UAAU,OAApB,UACE,cAACsF,EAAA,EAASC,OAAV,CACEhG,GAAG,iBACHS,UAAU,qDAFZ,SAIE,qBAAK2M,IAAK+E,GAAS9E,IAAI,UAAU5M,UAAU,cAG7C,cAACsF,EAAA,EAASG,KAAV,UACE,cAACH,EAAA,EAASjC,KAAV,CACEF,QAAS,WACPoO,IACArQ,KAHJ,kCCxDNsH,GAAM,QAINmJ,GAAmB,SAAC,GAA+D,IAA7D3H,EAA4D,EAA5DA,SAAUzK,EAAkD,EAAlDA,GAClC,OAAKA,EAOEmC,EAAIuI,KAAJ,UAAYzB,GAAZ,YAAmBjJ,GAAMyK,EAAU,CACtCzD,QAAS,CAAE,eAAgB,sBAPpB7E,EAAIuI,KAAJ,UAAYzB,IAAOwB,EAAU,CAChCzD,QAAS,CAAE,eAAgB,uBAmGxBuH,GAxFoB,SAAC,GAAoC,IAAD,IAAjCvO,UAAiC,MAA5B,GAA4B,EAGnE4K,qBAAU,WACNC,IAAkBC,SACnB,IALgE,MAM1B9B,GAAkB,CAAEhJ,KAAIiJ,SAAzD/D,EAN2D,EAM3DA,KAAiB6F,EAN0C,EAMrDC,UANqD,EAOtBC,YAAYmH,GAAkB,CACvElH,UAAW,WACPlK,YAAW,kBACPqH,EAAY8C,kBAAkBlC,MAC5B,QAJNmC,EAP2D,EAO3DA,OAAQJ,EAPmD,EAOnDA,UAAWpC,EAPwC,EAOxCA,MAAOnG,EAPiC,EAOjCA,OAU5B8I,EAAUrG,GAASA,EAOzB,OAAI6F,EACO,cAAC,EAAD,IAIP,cAACS,GAAA,EAAD,CAAK/K,UAAU,eAAf,SACI,cAACgL,GAAA,EAAD,CAAKhL,UAAU,2BAAf,SAEI,cAAC,KAAD,CACIiL,cAAe,CAAE7J,KAAM0J,EAAUA,EAAQ1J,KAAO,GAAI2N,MAAOjE,EAAUA,EAAQiE,MAAQ,GAAI6C,MAAO9G,EAAUA,EAAQ8G,MAAQ,IAC1HxG,SAAU,SAACC,GAEPT,QAAQC,IAAIQ,GACZV,EAAO,CAAEX,SAAUqB,EAAQ9L,QALnC,SAOK,kBACG,eAAC,KAAD,CAAMS,UAAU,QAAhB,UACI,oBAAIA,UAAU,gCAAd,SAA8C,4BAAIT,EAAK,cAAgB,kBAC3D,YAAXyC,GACG,cAACwJ,GAAA,EAAD,CAAO/I,QAAQ,UAAf,SAA0BlD,EAAK,4BAA8B,8BAEhE4I,GACG,cAACqD,GAAA,EAAD,CAAO/I,QAAQ,SAAf,SAA0B0F,EAAgBvH,UAG9C,sBAAKZ,UAAU,sBAAf,UACI,cAAC,GAAD,CACIoB,KAAK,OACLmD,YAAY,OACZsE,MAAM,OACN4C,UAAQ,IAEZ,cAAC,GAAD,CACIrK,KAAK,QACLmD,YAAY,QACZsE,MAAM,QACN4C,UAAQ,IAEZ,cAAC,GAAD,CACIrK,KAAK,QACLmD,YAAY,QACZsE,MAAM,QACN4C,UAAQ,OAKhB,cAACV,GAAA,EAAD,CAAK/K,UAAU,gCAAf,SACI,cAACgL,GAAA,EAAD,CAAKU,GAAG,IAAR,SACI,cAACC,EAAA,EAAD,CAAQ9F,KAAK,SAAS+F,SAAUrB,EAAWvK,UAAU,QAArD,SACKuK,EAAY,cAAC/H,EAAA,EAAD,CAASE,UAAU,SAAS2C,KAAK,OAAU,0BCvF1FmD,GAAM,QAINqJ,GAAc,SAACtS,GAEjB,OAAOmC,EAAIoK,OAAJ,UAActD,GAAd,YAAqBjJ,GAAM,CAC9BgH,QAAS,CAAE,eAAgB,0BAmLpBuL,GA5KD,WAAM,MAEqDhQ,IAA7DK,EAFQ,EAERA,gBAAiBD,EAFT,EAESA,iBAAkBF,EAF3B,EAE2BA,OAAQI,EAFnC,EAEmCA,cAFnC,EAG0BL,mBAAiB,IAH3C,mBAGTiK,EAHS,KAGMC,EAHN,OAIQlK,mBAAiB,GAJzB,mBAITmK,EAJS,KAIHrJ,EAJG,OAKsBd,oBAAS,GAL/B,mBAKToK,EALS,KAKIC,EALJ,OAMwB3D,YAAS,CAACD,GAAK0D,IAA/CzH,EANQ,EAMRA,KAAM8F,EANE,EAMFA,UAAW+B,EANT,EAMSA,WANT,EAS+B9B,YAAYqH,GAAa,CACpEpH,UAAW,WAEP7C,EAAY8C,kBAAkBlC,IAC9B4D,GAAe,IAEnBlE,QAAS,WAELhB,EAAe,iDARfyD,EATQ,EASRA,OAAmB4B,EATX,EASAhC,UAYV7F,EAAU8H,mBACZ,iBAAM,CACF,CACI9L,OAAQ,MACR+L,SAAU,MAGd,CACI/L,OAAQ,OACR+L,SAAU,QAEd,CACI/L,OAAQ,QACR+L,SAAU,SAEd,CACI/L,OAAQ,QACR+L,SAAU,SAEd,CACI/L,OAAQ,WACR+L,SAAU,WACVC,KAAM,SAACjI,GAEH,OADAmG,QAAQC,IAAIpG,GAER,4BAAiC,IAA7BA,EAAKoC,IAAIwE,OAAOO,SAAiB,KAAO,UAKxD,CACIlL,OAAQ,UACRgM,KAAM,SAACjI,GAEH,OACI,sBAAKzE,UAAU,SAAf,UACI,wBAAQmD,QAAS,WACb8I,EAAiBxH,EAAKoC,IAAIwE,OAAO9L,IACjC6C,KAFJ,SAII,cAAC,IAAD,CAAYoD,MAAO/D,EAAgB4D,KAAM,OAE7C,wBAAQrF,UAAU,OAAOmD,QAAS,WAC9B8I,EAAiBxH,EAAKoC,IAAIwE,OAAO9L,IACjC6M,GAAe,IAFnB,SAII,cAAC,KAAD,CAAW5G,MAAM,MAAMH,KAAM,eAOrD,IAOJ,OACI,qCACI,eAAC/C,EAAA,EAAD,CAAWC,OAAK,EAACvC,UAAU,8BAA3B,UACI,eAACsC,EAAA,EAAD,CAAWC,OAAK,EAACvC,UAAU,sCAA3B,UACI,oBAAIA,UAAU,gCAAd,wBAEe,YAAXgC,EACI,cAAC2J,EAAA,EAAD,CAAQlJ,QAAQ,UAAUU,QAASjB,EAAnC,SACI,sBAAKlC,UAAU,iBAAf,UACI,cAAC,IAAD,CAAkBqF,KAAM,KAD5B,IACmC,0CAGvC,cAACsG,EAAA,EAAD,CAAQlJ,QAAQ,UAAUU,QAAShB,EAAnC,SACI,sBAAKnC,UAAU,iBAAf,UAEI,cAAC,IAAD,CAAkBqF,KAAM,KAF5B,IAEmC,+CAOnD,eAAC/C,EAAA,EAAD,CAAWC,OAAK,EAACvC,UAAU,YAA3B,UAGmB,aAAXgC,GACA,cAACM,EAAA,EAAD,CAAWC,OAAK,EAACvC,UAAU,YAA3B,SACI,cAAC,GAAD,MAKO,YAAXgC,GACA,cAACM,EAAA,EAAD,CAAWC,OAAK,EAACvC,UAAU,YAA3B,SACI,cAAC,GAAD,CAAkBT,GAAIyM,MAKd,YAAXhK,GACD,mCAESuI,GAAa+B,EACV,cAAC,EAAD,IAGA,qCACI,cAAC,EAAD,CAAY7H,KAAOA,EAAaA,KAAMC,QAASA,IAE1CD,EAAaA,KAAKX,OAAS,EACxB,cAAC,EAAD,CACIlB,YAAc6B,EAAaoI,aAC3B7J,SAAWyB,EAAaqI,UACxBjK,QAASA,EACTC,cAAgB2B,EAAasI,cAC7BhK,cAAgB0B,EAAauI,gBAE/B,KAXd,gBAoBxB,eAACC,EAAA,EAAD,CAAOC,KAAMf,EAAagB,OAAQ,kBAAMf,GAAe,IAAvD,UACI,cAACa,EAAA,EAAMvM,OAAP,CAAc0M,aAAW,EAAzB,SACI,cAACH,EAAA,EAAMI,MAAP,8BAEJ,cAACJ,EAAA,EAAMtM,KAAP,uDACA,eAACsM,EAAA,EAAMK,OAAP,WACI,cAAC3B,EAAA,EAAD,CAAQlJ,QAAQ,WAAWU,QAAS,kBAAMiJ,GAAe,IAAzD,mBAGA,cAACT,EAAA,EAAD,CAAQlJ,QAAQ,SAASU,QAAS,WAE9BwH,EAAOqB,IAFX,SAKQO,EACI,cAAC/J,EAAA,EAAD,CAASE,UAAU,SAAS2C,KAAK,OACjC,qBCjL1B0M,GAAelD,OAAaC,MAAM,CACpCU,IAAKX,OAAamD,IAAI,GAAGC,IAAI,GAAGxG,SAAS,qBAIvCyG,GAAY,SAAChD,GACf,OAAOxN,EAAIuI,KAAJ,kBAA4BiF,EAAU,CACzC3I,QAAS,CAAE,eAAgB,0BA2EpB4L,GAtEG,SAACpS,GAEf,IAAMqS,EAAsCC,cACtCjD,EAAUC,cACVtO,EAAWM,GAAc,SAAAJ,GAAK,OAAIA,EAAMF,YACxCuQ,EAAUE,IAAoB,SAAAvQ,GAAK,OAAIA,EAAMqQ,WALnB,EAOW9G,YAAY0H,GAAW,CAC9DzH,UAAW,SAAChG,GACR1D,EAAS0D,EAAKA,KAAKzD,OACnBsQ,EAAQ7M,EAAKA,KAAK8K,MAClBH,EAAQE,KAAK,QAJb3E,EAPwB,EAOxBA,OAAcJ,GAPU,EAOhB9F,KAPgB,EAOV8F,WAAWpC,EAPD,EAOCA,MASjC,OACI,cAAC7F,EAAA,EAAD,CAAWC,OAAK,EAACvC,UAAU,aAA3B,SACI,cAAC,KAAD,CAAQiL,cAAe,CAAEuE,IAAK4C,EAAO5C,KAAO,IAAMpE,SAAU,SAAAC,GAExD,IAAM6D,EAAW,IAAI5D,SACrB4D,EAAS3D,OAAO,QAAS6G,EAAO7S,IAChC2P,EAAS3D,OAAO,MAAOF,EAAOmE,KAE9B7E,EAAOuE,IAIPO,iBAAkBsC,GAVtB,SAcQ,YAAiB,IAAdrC,EAAa,EAAbA,OAEC,OACI,cAAC,KAAD,UACI,sBAAK1P,UAAU,qEAAf,UAEI,qBAAKA,UAAU,iBAAf,SACI,cAAC,GAAD,MAIJ,oBAAIA,UAAU,oBAAd,SAAkC,6CAClC,iFAEImI,GACA,cAACqD,GAAA,EAAD,CAAO/I,QAAQ,SAAf,SAA0B0F,EAAcC,SAAS3D,KAAK0D,QAG1D,cAAC,GAAD,CAAY/G,KAAK,MAAMmD,YAAY,gBAAgBsE,MAAM,aAAaV,MAAOuH,EAAOF,MACpF,cAAC7D,EAAA,EAAD,CAAQlJ,QAAQ,UAAUoD,KAAK,SAAS7F,UAAU,OAAlD,SAEQuK,EACI,cAAC/H,EAAA,EAAD,CAASE,UAAU,SAASD,QAAQ,YAAY4C,KAAK,OACrD,qBAAKrF,UAAU,iBAAf,SACI,0D,8GCtE9CyE,GAAO,CACT,CACIrD,KAAM,SACNkR,MAAO,IACPC,MAAO,KACPC,MAAO,MAEX,CACIpR,KAAM,SACNkR,MAAO,IACPC,MAAO,KACPC,MAAO,MAEX,CACIpR,KAAM,SACNkR,MAAO,IACPC,MAAO,KACPC,MAAO,MAEX,CACIpR,KAAM,SACNkR,MAAO,KACPC,MAAO,KACPC,MAAO,MAITC,GAAY,WACd,OACI,cAACC,GAAA,EAAD,UACI,eAACC,GAAA,EAAD,CAAWC,MAAO,OAAQC,OAAQ,IAAKpO,KAAMA,GAAMqO,OAAQ,CAAEC,IAAK,GAAI5S,MAAO,GAAI6S,KAAM,EAAG9S,OAAQ,GAAlG,UAEI,cAAC+S,GAAA,EAAD,CAAOC,QAAQ,OAAOC,UAAU,EAAOC,QAAS,CAAEJ,KAAM,GAAI7S,MAAO,MACnE,cAACkT,GAAA,EAAD,CAAOF,UAAU,EAAOG,UAAU,IAClC,cAACC,GAAA,EAAD,IACA,cAACC,GAAA,EAAD,IACA,cAACC,GAAA,EAAD,CACI5N,KAAK,WACLqN,QAAQ,QACRQ,OAAQpS,EACRqS,UAAW,CAAElM,EAAG,WAQ9BmM,GAAY,WACd,OACI,cAAClB,GAAA,EAAD,UACI,eAACmB,GAAA,EAAD,CAAWjB,MAAO,OAAQC,OAAQ,IAAKpO,KAAMA,GACzCqO,OAAQ,CAAEC,IAAK,GAAI5S,MAAO,GAAI6S,KAAM,EAAG9S,OAAQ,GADnD,UAEI,+BACI,iCAAgBX,GAAG,UAAUuU,GAAG,IAAIC,GAAG,IAAIC,GAAG,IAAIC,GAAG,IAArD,UACI,sBAAMC,OAAO,KAAKC,UAAW1S,EAAgB2S,YAAa,KAC1D,sBAAMF,OAAO,MAAMC,UAAW1S,EAAgB2S,YAAa,SAOnE,cAACnB,GAAA,EAAD,CAAOC,QAAQ,OAAOC,UAAU,EAAOC,QAAS,CAAEJ,KAAM,GAAI7S,MAAO,MACnE,cAACkT,GAAA,EAAD,CAAOF,UAAU,EAAOG,UAAU,IAElC,cAACC,GAAA,EAAD,IACA,cAACC,GAAA,EAAD,IACA,cAACa,GAAA,EAAD,CAAMxO,KAAK,WAAWqN,QAAQ,QAAQQ,OAAQjS,EAAgB6S,YAAa,EAAGC,KAAK,wBAM7FC,GAAW,WACb,OACI,cAAC9B,GAAA,EAAD,UACI,eAAC+B,GAAA,EAAD,CAAU7B,MAAO,OAAQC,OAAQ,IAAKpO,KAAMA,GAA5C,UAEI,cAACwO,GAAA,EAAD,CAAOC,QAAQ,OAAOC,UAAU,EAAOC,QAAS,CAAEJ,KAAM,GAAI7S,MAAO,MACnE,cAACkT,GAAA,EAAD,CAAOC,UAAU,IACjB,cAACC,GAAA,EAAD,IACA,cAACC,GAAA,EAAD,IACA,cAACkB,GAAA,EAAD,CAAKxB,QAAQ,QAAQqB,KAAMjT,IAC3B,cAACoT,GAAA,EAAD,CAAKxB,QAAQ,QAAQqB,KAAM9S,UC6D5BkT,GArJG,SAAC5U,GAAkB,IAAD,EACYgC,mBAAiB,KAD7B,mBACzB6S,EADyB,KACTC,EADS,OAEY9S,mBAAiB,IAF7B,mBAET+S,GAFS,WAIhClK,QAAQC,IAAI+J,GAEZ,IACMG,EAAuB,SAAC1Q,GAAD,OAAYyQ,EAAkBzQ,EAAEC,OAAON,QACpE,OACI,mCACI,cAAC1B,EAAA,EAAD,CAAWC,OAAK,EAACvC,UAAU,8BAA3B,SAOI,sBAAKA,UAAU,uBAAf,UAEI,eAACsC,EAAA,EAAD,CAAWC,OAAK,EAACvC,UAAU,wBAA3B,UACI,oBAAIA,UAAU,iCAAd,mBACA,qBAAKA,UAAU,WAAf,SAGQgV,MAAMC,KAAK,CAAEnR,OAAQ,IAAKxD,KAAI,SAACf,GAAD,OAC1B,qBAAKS,UAAU,kBAAf,SACI,sBAAKA,UAAU,qBAAf,UACI,qBAAKA,UAAU,OAAf,yBAGA,sBAAKA,UAAU,yBAAf,UAEI,mBAAGA,UAAU,8BAAb,kBACA,uBAAMA,UAAU,uDAAhB,UACI,cAAC,IAAD,CAAkBqF,KAAM,KACxB,mDAVsB9F,WA8BtD,eAAC+C,EAAA,EAAD,CAAWC,OAAK,EAACvC,UAAU,wBAA3B,UAEI,oBAAIA,UAAU,gCAAd,uBACA,sBAAKA,UAAU,aAAf,UAEI,sBAAKA,UAAU,QAAf,UACI,sBAAKA,UAAU,4EAAf,UACI,oBAAIA,UAAU,eAAd,SACI,gDAIJ,8BACI,eAACqJ,GAAA,EAAKQ,QAAN,CAAcf,GAAG,SAASW,QAAM,EAACvF,SA9DxC,SAACG,GAAD,OAAYwQ,EAAkBxQ,EAAEC,OAAON,QA8DiChE,UAAU,iBAA3E,UACI,wBAAQgE,MAAM,IAAd,sBACA,wBAAQA,MAAM,IAAd,sBACA,wBAAQA,MAAM,IAAd,8BAMZ,qBAAKhE,UAAU,mBAAf,SACI,cAAC,GAAD,SAGR,sBAAKA,UAAU,QAAf,UACI,sBAAKA,UAAU,mDAAf,UACI,oBAAIA,UAAU,eAAd,SACI,mDAGJ,8BACI,eAACqJ,GAAA,EAAKQ,QAAN,CAAcf,GAAG,SAASW,QAAM,EAACvF,SAAU6Q,EAAsB/U,UAAU,iBAA3E,UACI,wBAAQgE,MAAM,IAAd,sBACA,wBAAQA,MAAM,IAAd,sBACA,wBAAQA,MAAM,IAAd,8BAKZ,qBAAKhE,UAAU,mBAAf,SACI,cAAC,GAAD,SAGR,sBAAKA,UAAU,QAAf,UACI,sBAAKA,UAAU,mDAAf,UACI,oBAAIA,UAAU,eAAd,SACI,mDAGJ,8BACI,eAACqJ,GAAA,EAAKQ,QAAN,CAAcf,GAAG,SAASW,QAAM,EAACvF,SAAU6Q,EAAsB/U,UAAU,iBAA3E,UACI,wBAAQgE,MAAM,IAAd,sBACA,wBAAQA,MAAM,IAAd,sBACA,wBAAQA,MAAM,IAAd,8BAKZ,qBAAKhE,UAAU,mBAAf,SACI,cAAC,GAAD,SAGR,sBAAKA,UAAU,QAAf,UACI,sBAAKA,UAAU,mDAAf,UACI,oBAAIA,UAAU,eAAd,SACI,mDAGJ,8BACI,eAACqJ,GAAA,EAAKQ,QAAN,CAAcf,GAAG,SAASW,QAAM,EAACvF,SAAU6Q,EAAsB/U,UAAU,iBAA3E,UACI,wBAAQgE,MAAM,IAAd,sBACA,wBAAQA,MAAM,IAAd,sBACA,wBAAQA,MAAM,IAAd,8BAKZ,qBAAKhE,UAAU,mBAAf,SAEI,cAAC,GAAD,uBC9H9BkV,GAAc,SAAC3V,EAAYiJ,GAC7B,IAAM2M,EAAY,WAClB,OAAI5V,IAAOiJ,EACD,GAAN,OAAU2M,EAAV,aAEOA,GA2GAC,GAxGA,SAACrV,GACZ,IAAM2E,EAAU8H,mBACZ,iBAAM,CACF,CACI9L,OAAQ,MACR+L,SAAU,MAEd,CACI/L,OAAQ,QACR+L,SAAU,WACVC,KAAM,SAACjI,GAAD,OACF,qBAAKzE,UAAU,cAAf,SACI,qBAAK2M,IAAKlI,EAAKoC,IAAIwE,OAAOoD,SAAU7B,IAAI,aAKpD,CACIlM,OAAQ,OACR+L,SAAU,QAEd,CACI/L,OAAQ,OACR+L,SAAU,cAEd,CACI/L,OAAQ,UACRgM,KAAM,kBACF,cAACf,EAAA,EAAD,0BAIZ,IAhCyB,EAmCP5J,mBAAiB,KAnCV,mBAmCtByG,EAnCsB,KAmCjB6M,EAnCiB,KAoD7B,OACI,eAAC/S,EAAA,EAAD,CAAWC,OAAK,EAACvC,UAAU,YAA3B,UACI,cAACsC,EAAA,EAAD,CAAWtC,UAAU,sCAArB,SACI,oBAAIA,UAAU,gCAAd,sBAGJ,cAACsC,EAAA,EAAD,CAAWC,OAAK,EAAhB,SACI,sBAAKvC,UAAU,cAAf,UAcI,cAAC2L,EAAA,EAAD,CAAQlJ,QAAQ,QAAQzC,UAAS,UAAKkV,GAAY,IAAK1M,IACnDrF,QAAS,kBAAMkS,EAAO,MAD1B,iBAIA,cAAC1J,EAAA,EAAD,CAAQlJ,QAAQ,QAAQzC,UAAS,UAAKkV,GAAY,IAAK1M,GAAtB,KAC7BrF,QAAS,kBAAMkS,EAAO,MAD1B,qBAGA,cAAC1J,EAAA,EAAD,CAAQlJ,QAAQ,QAAQzC,UAAS,UAAKkV,GAAY,IAAK1M,GAAtB,KAC7BrF,QAAS,kBAAMkS,EAAO,MAD1B,uBAGA,cAAC1J,EAAA,EAAD,CAAQlJ,QAAQ,QAAQzC,UAAS,UAAKkV,GAAY,IAAK1M,GAAtB,KAC7BrF,QAAS,kBAAMkS,EAAO,MAD1B,4BAMR,qBAAKrV,UAAU,WAAf,SApDW,SAACwI,GAChB,OAAQA,GACJ,IAAK,IAEL,IAAK,IAEL,IAAK,IAEL,IAAK,IAGL,QACI,OAAO,cAAC,EAAD,CAAY/D,KAAM+J,GAAU9J,QAASA,KA2CxC4Q,CAAW9M,SCtHlB+M,GAAuB,CAChC,CAAEhW,GAAI,WAAY6B,KAAM,YACxB,CAAE7B,GAAI,SAAU6B,KAAM,W,0CC+CXoU,GArCqB,SAAC,GAE9B,IADH3M,EACE,EADFA,MAAOzH,EACL,EADKA,KAAM+G,EACX,EADWA,MAAOY,EAClB,EADkBA,cAAe0M,EACjC,EADiCA,WAAe1V,EAChD,wEACcoJ,aAAS,2BAAKpJ,GAAN,IAAaqB,UAA9BgI,EADL,oBAEF,OACI,qBAAKpJ,UAAU,QAAf,SACI,eAACqJ,GAAA,EAAKC,MAAN,WAEQT,EACI,cAACQ,GAAA,EAAKE,MAAN,CAAYxD,QAASqD,EAAMhI,KAA3B,SAAkCyH,IAChC,KAIN,cAAC,KAAD,CACI4M,WAAYA,EACZC,eAAa,EACbxR,SAAU,SAACF,GACP4G,QAAQC,IAAI,QAAS7G,GACjBA,GACA+E,EAAcK,EAAMhI,KAAMuU,KAAO3R,EAAM4R,IAAIC,OAAO,2BAO9D1N,GACA,cAACkB,GAAA,EAAKS,KAAN,CAAW9J,UAAU,cAArB,SACKmI,UC3BnBK,GAAM,UAENsN,GAA4B,SAAC,GAA0D,IAAxD9L,EAAuD,EAAvDA,SAAUzK,EAA6C,EAA7CA,GAC3C,OAAKA,EAOEmC,EAAIuI,KAAJ,UAAYzB,GAAZ,YAAmBjJ,GAAMyK,EAAU,CACtCzD,QAAS,CAAE,eAAgB,yBAPpB7E,EAAIuI,KAAJ,UAAYzB,IAAOwB,EAAU,CAChCzD,QAAS,CAAE,eAAgB,0BAuHxBwP,GA5GuB,SAAC,GAAoC,IAAD,IAAjCxW,UAAiC,MAA5B,GAA4B,EAGtE4K,qBAAU,WACNC,IAAkBC,SACnB,IALmE,MAO7B9B,GAAkB,CAAEhJ,KAAIiJ,SAAzD/D,EAP8D,EAO9DA,KAAiB6F,EAP6C,EAOxDC,UAPwD,EAQzBC,YAAYsL,GAA2B,CAChFrL,UAAW,WACPlK,YAAW,WAEPqH,EAAY8C,kBAAkB,gBAC1BnL,GACAqI,EAAY8C,kBAAZ,UAAiClC,GAAjC,YAAwCjJ,MAE1C,QARNoL,EAR8D,EAQ9DA,OAAQJ,EARsD,EAQtDA,UAAWpC,EAR2C,EAQ3CA,MAAOnG,EARoC,EAQpCA,OAe5B8I,EAAUrG,GAASA,EAOzB,OAAI6F,EACO,cAAC,EAAD,IAIP,cAACS,GAAA,EAAD,CAAK/K,UAAU,eAAf,SACI,cAACgL,GAAA,EAAD,CAAKhL,UAAU,2BAAf,SAEI,cAAC,KAAD,CACIiL,cAAe,CAAE7J,KAAM0J,EAAUA,EAAQ1J,KAAO,GAAI4U,SAAUlL,EAAUA,EAAQkL,SAAW,GAAIvI,MAAO,GAAI5H,KAAM,GAAIoQ,SAAU,GAAIC,WAAY,IAC9I9K,SAAU,SAACC,GACP,IAAMrB,EAAW,IAAIsB,SACrBtB,EAASuB,OAAO,OAAQF,EAAOjK,MAC/B4I,EAASuB,OAAO,WAAYF,EAAO2K,UAC9BzW,IACDyK,EAASuB,OAAO,QAASF,EAAOoC,OAChCzD,EAASuB,OAAO,OAAQF,EAAOxF,MAC/BmE,EAASuB,OAAO,WAAYF,EAAO4K,UACnCjM,EAASuB,OAAO,aAAcF,EAAO6K,aAKzCvL,EAAO,CAAEX,WAAUzK,QAf3B,SAiBK,gBAAGwJ,EAAH,EAAGA,cAAH,OACG,eAAC,KAAD,WACI,oBAAI/I,UAAU,gCAAd,SAA8C,4BAAIT,EAAK,uBAAyB,2BACpE,YAAXyC,GACG,cAACwJ,GAAA,EAAD,CAAO/I,QAAQ,UAAf,SAA0BlD,EAAK,sCAAwC,uCAE1E4I,GACG,cAACqD,GAAA,EAAD,CAAO/I,QAAQ,SAAf,SAA0B0F,EAAgBvH,UAE9C,sBAAKZ,UAAS,wBAAd,UACI,cAAC,GAAD,CACIoB,KAAK,OACLmD,YAAY,OACZsE,MAAM,OACN4C,UAAQ,IAGZ,cAAC,GAAD,CAAYrK,KAAK,WAAWmD,YAAY,YAAYsE,MAAM,YAAY4C,UAAQ,KAGzElM,GACD,cAAC,GAAD,CAAY6B,KAAK,aAAa2H,cAAeA,EAAeF,MAAM,aAAa4M,WAAY,CAAElR,YAAa,aAAckH,UAAU,MAGjIlM,GACD,cAAC,GAAD,CAAY6B,KAAK,WAAW2H,cAAeA,EAAeF,MAAM,WAAW4M,WAAY,CAAElR,YAAa,WAAYkH,UAAU,MAG3HlM,GACD,cAAC,GAAD,CAAY6B,KAAK,QAAQmD,YAAY,QAAQsE,MAAM,QAAQD,QAAM,EAACG,cAAeA,KAGhFxJ,GACD,cAAC,GAAD,CAAY6B,KAAK,OAAOmD,YAAY,qBAAqBsE,MAAM,cAAcC,GAAG,SAASE,WAAYuM,QAG7G,cAACxK,GAAA,EAAD,CAAK/K,UAAU,gCAAf,SACI,cAACgL,GAAA,EAAD,CAAKU,GAAG,IAAR,SACI,cAACC,EAAA,EAAD,CAAQ9F,KAAK,SAAS+F,SAAUrB,EAAWvK,UAAU,QAArD,SACKuK,EAAY,cAAC/H,EAAA,EAAD,CAASE,UAAU,SAAS2C,KAAK,OAAU,0B,UC3H5FxE,GAAQ1B,kBACR,CAAE0G,KAAM0P,GAAM,KACd,SAAClW,GAAD,MAAU,CACN8W,eAAgB,SAACtQ,GAAD,OAAkBxG,GAAI,SAAC4B,GAAD,MAAY,CAAE4E,gBAO7CuQ,GAFuBlX,YAAO2B,ICOvCwV,GAAyB,uCAAG,+BAAA/O,EAAA,6DAASC,EAAT,EAASA,SAAT,SACd7F,EAAI8F,IAAJ,UAAWD,EAAS,GAApB,YAA2BA,EAAS,GAAc+O,gBADpC,cACxB7O,EADwB,gBAGjBA,EAAEhD,KAHe,mFAAH,sDA6FhB8R,GAvFmB,SAAC,GAAyD,IAAvDnK,EAAsD,EAAtDA,eAAgBhK,EAAsC,EAAtCA,cAAe6J,EAAuB,EAAvBA,iBAC1DuK,EAAeJ,IAA8B,SAAAnV,GAAK,OAAIA,EAAM4E,QAC5D4Q,EAAkBL,IAA8B,SAAAnV,GAAK,OAAIA,EAAMkV,kBAFkB,EAK/C1N,YAAc,CAd9C,eAcoD+N,EAAajX,IAAK8W,IAAtE5R,EAL+E,EAK/EA,KAAM8F,EALyE,EAKzEA,UAAW+B,EAL8D,EAK9DA,WAGzB,OAAI/B,GAAa+B,EACN,cAAC,EAAD,IAKP,qCACI,cAAChK,EAAA,EAAD,CAAWC,OAAK,EAACvC,UAAU,wEAA3B,SAGI,eAACsF,EAAA,EAAD,CAAUtF,UAAU,UAApB,UACI,cAACsF,EAAA,EAASC,OAAV,CAAiBhG,GAAG,iBAAiBS,UAAU,qDAA/C,SAEQwW,EAAapV,OAMrB,cAACkE,EAAA,EAASG,KAAV,CAAezF,UAAU,MAAzB,SAEQuV,GAAMjV,KAAI,SAAAuF,GAAI,OACV,cAACP,EAAA,EAASjC,KAAV,CAAeC,OAAQkT,EAAajX,KAAOsG,EAAKtG,GAC5C4D,QAAS,kBAAMsT,EAAgB5Q,IADnC,SAEEA,EAAKzE,iBAO3B,cAACkB,EAAA,EAAD,CAAWC,OAAK,EAACvC,UAAU,OAA3B,SAEI,cAAC+K,GAAA,EAAD,UAEQtG,EAAKA,KAAKX,OAAS,EACfW,EAAKA,KAAKnE,KAAI,SAACoW,GAAD,OAEV,cAAC1L,GAAA,EAAD,CAAKU,GAAI,EAAG1L,UAAU,OAAtB,SACI,eAAC2W,GAAA,EAAD,WACI,cAACA,GAAA,EAAKC,IAAN,CAAUnU,QAAQ,MAAMkK,IAAG,U5CrEtC9K,G4CqEsC,mBAA6B6U,EAAGjJ,OAASxN,MAAO,CAAE4S,OAAQ,SAAY7S,UAAU,wBAC3G,eAAC2W,GAAA,EAAKhW,KAAN,CAAWX,UAAU,mDAArB,UACI,gCACI,cAAC2W,GAAA,EAAKtJ,MAAN,CAAYrN,UAAU,mBAAtB,SAA0C0W,EAAGtV,OAC7C,uBAAMpB,UAAU,aAAhB,cAA+B2V,KAAOe,EAAGR,YAAYL,OAAO,YAA5D,IAA0EF,KAAOe,EAAGT,UAAUJ,OAAO,YAArG,UAEJ,sBAAK7V,UAAU,0BAAf,UAEI,wBAAQmD,QAAS,WACb8I,EAAiByK,EAAGnX,IACpB6C,KAFJ,SAII,cAAC,IAAD,CAAYoD,MAAO/D,EAAgB4D,KAAM,OAE7C,wBAAQrF,UAAU,OAAOmD,QAAS,WAC9B8I,EAAiByK,EAAGnX,IACpB6M,GAAe,IAFnB,SAII,cAAC,IAAD,CAAc5G,MAAM,MAAMH,KAAM,qBAOxD,cAAC/C,EAAA,EAAD,CAAWC,OAAK,EAACvC,UAAU,0CAA3B,SACI,sBAAKA,UAAU,wCAAf,UAEI,cAAC,IAAD,CAAOwF,MAAOlE,IACd,sBAAMtB,UAAU,yBAAhB,wCC1F9B6W,GAAe,SAACtX,GAElB,OAAOmC,EAAIoK,OAAJ,kBAAsBvM,GAAM,CAC/BgH,QAAS,CAAE,eAAgB,0BAqGpBuQ,GA/FQ,WAAO,IAAD,EAE4ChV,IAA7DK,EAFiB,EAEjBA,gBAAiBD,EAFA,EAEAA,iBAAkBF,EAFlB,EAEkBA,OAAQI,EAF1B,EAE0BA,cAF1B,EAGiBL,mBAAiB,IAHlC,mBAGlBiK,EAHkB,KAGHC,EAHG,OAIalK,oBAAS,GAJtB,mBAIlBoK,EAJkB,KAILC,EAJK,OAMsB5B,YAAYqM,GAAc,CACrEpM,UAAW,WAEP7C,EAAY8C,kBAAkB,gBAC9B0B,GAAe,IAEnBlE,QAAS,WAELhB,EAAe,iDARfyD,EANiB,EAMjBA,OAAmB4B,EANF,EAMThC,UAchB,OACI,qCACI,eAACjI,EAAA,EAAD,CAAWC,OAAK,EAACvC,UAAU,8BAA3B,UACI,eAACsC,EAAA,EAAD,CAAWC,OAAK,EAACvC,UAAU,sCAA3B,UACI,oBAAIA,UAAU,gCAAd,4BAEe,YAAXgC,EACI,cAAC2J,EAAA,EAAD,CAAQlJ,QAAQ,UAAUU,QAASjB,EAAnC,SACI,sBAAKlC,UAAU,iBAAf,UACI,cAAC,IAAD,CAAkBqF,KAAM,KAD5B,IACmC,0CAGvC,cAACsG,EAAA,EAAD,CAAQlJ,QAAQ,UAAUU,QAAS,WAC/B8I,EAAiB,IACjB9J,KAFJ,SAII,sBAAKnC,UAAU,iBAAf,UAEI,cAAC,IAAD,CAAkBqF,KAAM,KAF5B,IAEmC,+CAOnD,eAAC/C,EAAA,EAAD,CAAWC,OAAK,EAACvC,UAAU,YAA3B,UAGmB,aAAXgC,GACA,cAACM,EAAA,EAAD,CAAWC,OAAK,EAACvC,UAAU,YAA3B,SACI,cAAC,GAAD,MAKO,YAAXgC,GACA,cAACM,EAAA,EAAD,CAAWC,OAAK,EAACvC,UAAU,YAA3B,SACI,cAAC,GAAD,CAAkBT,GAAIyM,MAKd,YAAXhK,GAED,cAAC+U,GAAD,CAAkB3K,eAAgBA,EAAgBH,iBAAkBA,EAAkB7J,cAAeA,UAMjH,eAAC6K,EAAA,EAAD,CAAOC,KAAMf,EAAagB,OAAQ,kBAAMf,GAAe,IAAvD,UACI,cAACa,EAAA,EAAMvM,OAAP,CAAc0M,aAAW,EAAzB,SACI,cAACH,EAAA,EAAMI,MAAP,8BAEJ,cAACJ,EAAA,EAAMtM,KAAP,sFACA,eAACsM,EAAA,EAAMK,OAAP,WACI,cAAC3B,EAAA,EAAD,CAAQlJ,QAAQ,WAAWU,QAAS,kBAAMiJ,GAAe,IAAzD,mBAGA,cAACT,EAAA,EAAD,CAAQlJ,QAAQ,SAASU,QAAS,WAE9BwH,EAAOqB,IAFX,SAKQO,EACI,cAAC/J,EAAA,EAAD,CAASE,UAAU,SAAS2C,KAAK,OACjC,qBCjG1B2R,GAAyB,uCAAG,+BAAA1P,EAAA,0DAASC,EAAT,EAASA,UACzB,GADgB,0CAEnB,GAFmB,uBAId5F,IAAM6F,IAAN,U9CXS3F,kD8CWT,OAA6B0F,EAAS,IAAM,CACxDhB,QAAS,CACL0Q,cAAc,UAAD,OAAY1P,EAAS,OANZ,cAIxBE,EAJwB,yBASvBA,EAAEhD,MATqB,2CAAH,sDA0DhByS,GA5CI,WACf,IAAM9H,EAAUC,cACVrO,EAAQK,GAAc,SAAAJ,GAAK,OAAIA,EAAMH,eACrCC,EAAWM,GAAc,SAAAJ,GAAK,OAAIA,EAAMF,YAExCuQ,GADcjQ,GAAc,SAAAJ,GAAK,OAAIA,EAAMC,eACjCsQ,IAAoB,SAAAvQ,GAAK,OAAIA,EAAMqQ,YAoCnD,OAjCW7I,YAAS,CAAC,UAAWzH,GAAQgW,GAAY,CAChDG,OAAO,EACP1M,UAAW,SAAChG,GACR6M,EAAQ7M,IAEZyD,QAAQ,WAAD,4BAAE,WAAOmE,GAAP,mBAAA/E,EAAA,0DACD3F,IAAMyV,aAAa/K,GADlB,oBAIwB,OAAb,QAFJjE,EAAaiE,EAAbjE,gBAEI,IAARA,OAAA,EAAAA,EAAUpG,QAJb,0CAMyBN,EAAIuI,KAAK,iBANlC,cAMaoN,EANb,gBAO0BA,EAAI5S,KAP9B,QAOaA,EAPb,UASW1D,EAAS0D,EAAK6S,cACd1P,EAAY8C,kBAAkB,YAVzC,kDAaO0E,EAAQE,KAAK,WACbpI,EAAe,KAAMtG,SAd5B,gCAkBGwO,EAAQE,KAAK,UAlBhB,gCAsBDF,EAAQE,KAAK,WAtBZ,0DAAF,mDAAC,MCjCHiI,GAAe,SAAC,GAA4C,IAA/BC,EAA8B,EAAzCC,UAAyBC,EAAgB,gCAE5BR,KAAlC5K,EAF8D,EAE9DA,WAAY/B,EAFkD,EAElDA,UAAWpC,EAFuC,EAEvCA,MAI/B,OAAIoC,GAAa+B,GAAcnE,EACtB,cAAC7F,EAAA,EAAD,CAAWC,OAAK,EAACvC,UAAU,wDAA3B,SAAmF,cAACwC,EAAA,EAAD,CAASE,UAAU,aAG7G,cAAC,IAAD,2BAAWgV,GAAX,IAAiBhR,OAAQ,SAAC3G,GAAD,OAEvB,cAACyX,EAAD,eAAezX,SCkFN4X,GAxEH,WAAO,IAAD,EACkB5V,oBAAkB,GADpC,mBACTwO,EADS,KACEqH,EADF,KAIV5W,EAAQK,GAAc,SAACJ,GAAD,OAAWA,EAAMH,eAEzCE,IAAOU,EAAImW,SAAStR,QAAQuR,OAArB,+BAAyD9W,IAEpEmJ,qBAAU,WAIR,OAHA4N,IAEAxW,OAAOyW,iBAAiB,SAAUD,GAC3B,kBAAMxW,OAAO0W,oBAAoB,SAAUF,MACjD,IAEH,IAAMA,EAAmB,WACvB,IAAMnF,EAAQrR,OAAO2W,WACJN,EAAbhF,EAAQ,MAjBE,EAqBkB7Q,oBAAkB,GArBpC,mBAqBTsO,EArBS,KAqBEC,EArBF,KAsBRR,EAAaC,cAAbD,SAER,SAASqI,IACP,OAAIrI,EAASsI,SAAS,WAAYtI,EAASsI,SAAS,cAKtD,OACE,cAACrZ,EAAiBsZ,SAAlB,CAA2BrU,MAAOuM,EAAlC,SACE,sBAAKvQ,UAAU,MAAf,UACGmY,IACC,cAAC,GAAD,CAAQ9H,UAAWA,EAAWC,aAAcA,IAE5C,GAEF,wBACA,eAAChO,EAAA,EAAD,CAAWC,OAAK,EAACvC,UAAU,cAA3B,UACGmY,IACC,cAAC,GAAD,CAAQ9H,UAAWA,EAAWC,aAAcA,IAE5C,GAGF,eAAC,IAAD,WACE,cAAC,GAAD,CAAcV,KAAK,IAAI0I,OAAK,EAACb,UAAW9C,KACxC,cAAC,GAAD,CAAc/E,KAAK,UAAU0I,OAAK,EAACb,UAAW1L,KAC9C,cAAC,GAAD,CAAc6D,KAAK,gBAAgB0I,OAAK,EAACb,UAAW7J,KACpD,cAAC,GAAD,CAAcgC,KAAK,cAAc0I,OAAK,EAACb,UAAW1J,KAClD,cAAC,GAAD,CAAc6B,KAAK,SAAS0I,OAAK,EAACb,UAAW3F,KAC7C,cAAC,GAAD,CAAclC,KAAK,aAAa0I,OAAK,EAACb,UAAWpG,KACjD,cAAC,GAAD,CAAczB,KAAK,QAAQ0I,OAAK,EAACb,UAAWc,KAC5C,cAAC,GAAD,CAAc3I,KAAK,SAAS0I,OAAK,EAACb,UAAW7G,KAC7C,cAAC,GAAD,CAAchB,KAAK,WAAW0I,OAAK,EAACb,UAAWlJ,KAC/C,cAAC,GAAD,CAAcqB,KAAK,UAAU0I,OAAK,EAACb,UAAWrC,KAC9C,cAAC,GAAD,CACExF,KAAK,kBACL0I,OAAK,EACLb,UAAWX,KAEb,cAAC,IAAD,CAAOlH,KAAK,SAAS0I,OAAK,EAACb,UAAWtI,KACtC,cAAC,IAAD,CAAOS,KAAK,uBAAuB0I,OAAK,EAACb,UAAWtF,QAEtD,cAAC,EAAD,aC9EKqG,GAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,UCIdQ,IAASvS,OACP,cAAC,IAAMwS,WAAP,UAEE,cAACC,GAAA,EAAD,CAAqBC,OAAQxR,EAA7B,SACE,cAAC,KAAD,UACE,cAAC,GAAD,UAKNyR,SAASC,eAAe,SAI1Bd,O","file":"static/js/main.1a7fb98a.chunk.js","sourcesContent":["import { createContext } from \"react\";\n\nexport const IsDesktopContext = createContext(false);","\nimport create from \"zustand\";\nimport { combine } from \"zustand/middleware\";\nimport { v4 } from \"uuid\";\n// import { ToastDurations } from \"../../ui/ErrorToast\";\n\ntype Toast = {\n    id: string;\n\n    //   duration?: ToastDurations;\n    message: string;\n};\n\nexport const useErrorToastStore = create(\n    combine(\n        {\n            toasts: [] as Toast[],\n        },\n        (set) => ({\n            hideToast: (id: string) => set((x) => ({ toasts: x.toasts.filter((y) => y.id !== id) })),\n            showToast: (t: Omit<Toast, \"id\">) => set((x) => ({ toasts: [...x.toasts, { ...t, id: v4() }] })),\n        })\n    )\n);","import { Toast } from 'react-bootstrap'\nimport { useErrorToastStore } from './useErrorToastStore'\n\ninterface Props {\n\n}\n\nconst ErrorToast = (props: Props) => {\n    const { toasts, hideToast } = useErrorToastStore()\n\n\n\n    return (\n        <>\n            <div className=\"position-fixed\" style={{ bottom: \"2%\", right: \"2%\", zIndex: 1001, minWidth: \"200px\" }} >\n                {\n                    toasts.map((t) => {\n                        setTimeout(() => hideToast(t.id), 5000)\n\n                        return (\n                            <Toast className=\" bg-danger\" style={{ bottom: \"2%\", right: \"2%\", zIndex: 1001, minWidth: \"200px\" }} onClose={() => hideToast(t.id)} key={t.id}>\n                                <Toast.Header className=\"d-flex justify-content-between\" >\n                                    <strong>Error</strong>\n                                    <span></span>\n                                    <span>{\" \"}</span>\n                                </Toast.Header>\n                                <Toast.Body>{t.message}</Toast.Body>\n                            </Toast>\n                        )\n                    })\n                }\n            </div>\n\n\n        </>\n    )\n\n}\n\nexport default ErrorToast\n","import create from 'zustand'\nimport { persist, combine } from 'zustand/middleware'\n\ntype Token = string | null\n\nlet store = combine(\n    { accessToken: null as Token },\n    (set) => ({\n        setToken: (token: string) => set((state) => ({ accessToken: token })),\n        removeToken: () => set((state) => ({ accessToken: null })),\n    })\n)\n\nstore = persist(store, { name: \"accessToken\" })\n\nconst useTokenStore = create(store)\n\nexport default useTokenStore","export const isDesktop = window.innerHeight <= 800;\nexport const primaryColor = \"#214D70\";\nexport const secondaryColor = \"#ECB054\";\nexport const adminApiBaseUrl = process.env.REACT_APP_ADMIN_API_URL;\nexport const appApiBaseUrl = process.env.REACT_APP_APP_API_URL;\nexport const baseUploadUrl = process.env.REACT_APP_UPLOAD_URL;\n","import axios from \"axios\";\nimport { adminApiBaseUrl } from \"./constants\";\n\n\n\n\n\nconst API = axios.create({\n    baseURL: adminApiBaseUrl,\n\n    // baseURL: config.baseURL,\n});\n\nexport default API;","import { useState } from 'react'\n\ntype CurrentStatus = \"default\" | \"editing\" | \"creating\";\ninterface IUseToggle {\n    status: CurrentStatus\n    setStatusDefault: () => void;\n    setStatusEdit: () => void;\n    setStatusCreate: () => void\n}\n\nconst useToggle = (): IUseToggle => {\n\n\n    const [status, setStatus] = useState<CurrentStatus>(\"default\")\n\n    const setStatusDefault = () => setStatus(\"default\")\n    const setStatusCreate = () => setStatus(\"creating\")\n    const setStatusEdit = () => setStatus(\"editing\")\n\n\n\n    return {\n        status,\n        setStatusDefault, setStatusCreate, setStatusEdit\n\n    }\n}\n\nexport default useToggle;\n","\nimport { Container, Spinner } from 'react-bootstrap'\n\n\nconst IsLoading = () => {\n\n\n    return (\n        <Container fluid className=\"d-flex justify-content-center\">\n            <Spinner variant=\"primary\" animation=\"border\" />\n        </Container>\n    )\n}\n\nexport default IsLoading\n","import { Container, Pagination } from 'react-bootstrap'\n\ninterface Props {\n    currentPage: number;\n    lastPage: number;\n    hasPrevPage: boolean;\n    hasNextPage: boolean;\n    setPage: React.Dispatch<React.SetStateAction<number>>\n}\n\nconst TablePagination = ({ currentPage, setPage, hasNextPage, hasPrevPage, lastPage }: Props) => {\n    return (\n        <Container fluid className=\"d-flex justify-content-end\">\n            <Pagination>\n                <Pagination.First onClick={() => setPage(1)} />\n                {\n                    hasPrevPage &&\n                    <Pagination.Prev onClick={() => setPage(currentPage - 1)} />\n                }\n                <Pagination.Item active ><span className=\"text-secondary\">{currentPage}</span></Pagination.Item>\n                {\n                    hasNextPage &&\n                    <Pagination.Next onClick={() => setPage(currentPage + 1)} />\n                }\n                <Pagination.Last onClick={() => setPage(lastPage)} />\n            </Pagination>\n        </Container>\n    )\n}\n\nexport default TablePagination\n","import React, { ReactElement } from 'react'\nimport { Container, Dropdown, Table } from 'react-bootstrap'\nimport { AiOutlineSearch } from 'react-icons/ai'\nimport { BiSad } from 'react-icons/bi'\nimport { GoSettings } from 'react-icons/go'\nimport { IoMdArrowDropdown, IoMdArrowDropup } from 'react-icons/io'\nimport { useAsyncDebounce, useFilters, useGlobalFilter, useSortBy, useTable } from 'react-table'\nimport { primaryColor } from '../utils/constants'\n\ninterface Props {\n    data: any,\n    columns: Array<any>,\n\n\n}\ninterface ISearchInput {\n    preGlobalFilteredRows: any;\n    globalFilter: any;\n    setGlobalFilter: any;\n}\n\nfunction SearchInput({\n    preGlobalFilteredRows,\n    globalFilter,\n    setGlobalFilter,\n}: ISearchInput) {\n    const count = preGlobalFilteredRows.length\n    const [value, setValue] = React.useState(globalFilter)\n    const onChange = useAsyncDebounce(value => {\n        setGlobalFilter(value || undefined)\n    }, 200)\n\n    return (\n\n        <input\n            value={value || \"\"}\n            onChange={e => {\n                setValue(e.target.value);\n                onChange(e.target.value);\n            }}\n            placeholder={`Search ${count} records...`}\n        />\n\n    )\n}\n\nfunction ReactTable({ data, columns }: Props): ReactElement {\n\n\n\n    const {\n\n        getTableProps,\n        getTableBodyProps,\n        headerGroups,\n        rows,\n        prepareRow,\n        allColumns,\n        state,\n        preGlobalFilteredRows,\n        setGlobalFilter\n\n    } = useTable({ columns, data }, useFilters, useGlobalFilter, useSortBy,)\n\n\n\n\n    return (\n\n        <Container fluid className=\"px-0\">\n\n            {/* search and column hiding */}\n\n            <Container fluid className=\" bg-light-secondary d-flex align-items-center py-2 position-relative\">\n                <div className=\"w-100\">\n                    <div className=\"search-input\">\n                        <AiOutlineSearch size={24} />\n                        <SearchInput\n                            preGlobalFilteredRows={preGlobalFilteredRows}\n                            globalFilter={state.globalFilter}\n                            setGlobalFilter={setGlobalFilter}\n                        />\n                    </div></div>\n\n                <Dropdown>\n                    <Dropdown.Toggle id=\"dropdown-basic\" className=\"filter-button bg-transparent border-0 text-primary\">\n\n\n                        <GoSettings size={24} color={primaryColor} />\n\n                    </Dropdown.Toggle>\n\n                    <Dropdown.Menu className=\"p-2\">\n                        {\n                            allColumns.map((column) => {\n\n                                column.disableGlobalFilter = !column.isVisible\n\n                                return (\n                                    <div key={column.id} className=\"custom-control custom-checkbox\">\n\n                                        <input type=\"checkbox\" {...column.getToggleHiddenProps()} className=\"d-none\" id={column.id}\n                                        />\n\n                                        <div className=\"custom-control custom-checkbox \">\n                                            <input type=\"checkbox\" className=\"custom-control-input\" id={column.id} {...column.getToggleHiddenProps()}\n                                            />\n\n                                            <label className=\"custom-control-label\" htmlFor={column.id}><p>{column.Header}</p></label>\n                                        </div>\n\n\n                                    </div>\n                                )\n                            })\n                        }\n                    </Dropdown.Menu>\n                </Dropdown>\n\n            </Container>\n            <Container fluid className=\"mt-4    \">\n                {/*-------------------- table---------------------  */}\n                <div className=\"tableFixed\">\n\n                    <Table className=\"table-fixed\" {...getTableProps()} responsive striped bordered hover size=\"sm\">\n                        <thead className=\"bg-light-primary\">\n                            {// Loop over the header rows\n                                headerGroups.map(headerGroup => (\n                                    // Apply the header row props\n                                    <tr {...headerGroup.getHeaderGroupProps()}>\n                                        {// Loop over the headers in each row\n                                            headerGroup.headers.map((column) => (\n                                                // Apply the header cell props\n                                                <th {...column.getHeaderProps((column).getSortByToggleProps())}>\n                                                    {// Render the header\n                                                        column.render('Header')}\n                                                    <span>\n                                                        {column.isSorted\n                                                            ? column.isSortedDesc\n                                                                ? <IoMdArrowDropup />\n                                                                : <IoMdArrowDropdown />\n                                                            : ''}\n                                                    </span>\n\n                                                </th>\n                                            ))}\n                                    </tr>\n                                ))}\n                        </thead>\n                        {/* Apply the table body props */}\n                        <tbody {...getTableBodyProps()}>\n                            {// Loop over the table rows\n                                rows.map(row => {\n                                    // Prepare the row for display\n                                    prepareRow(row)\n                                    // console.log(\"row\", rows.length)\n                                    // if (!rows.length) return <h1>No data</h1>\n                                    return (\n                                        // Apply the row props\n                                        <tr {...row.getRowProps()}>\n                                            {// Loop over the rows cells\n                                                row.cells.map(cell => {\n                                                    // Apply the cell props\n                                                    return (\n                                                        <td {...cell.getCellProps()}>\n                                                            {// Render the cell contents\n                                                                cell.render('Cell')}\n                                                        </td>\n                                                    )\n                                                })}\n                                        </tr>\n                                    )\n                                })}\n                            {/* {rows.length === 0 ?\n                                <Container fluid className=\"d-flex justify-content-center w-100 align-item-center\">\n                                    <span className=\"text-primary display-3\">No data found</span>\n                                </Container>\n                                : \"\"} */}\n                        </tbody>\n\n                    </Table>\n\n                </div>\n\n                {/* pagination  */}\n\n                {\n                    rows.length === 0 ?\n                        <Container fluid className=\"d-flex justify-content-center display-3\">\n                            <div className=\"d-flex flex-column align-items-center\">\n\n                                <BiSad color={primaryColor} />\n                                <span className=\"text-primary display-3\">No data found</span>\n                            </div>\n                        </Container>\n                        :\n                        null\n                }\n\n            </Container>\n        </Container>\n    )\n}\n\nexport default ReactTable\n","import { useErrorToastStore } from \"../shared-components/ErrorToast/useErrorToastStore\";\n\n\nexport const showErrorToast = (m: string) => {\n    useErrorToastStore.getState().showToast({ message: m });\n};","import { QueryClient, QueryFunction } from \"react-query\";\nimport API from \"./API\";\nimport { showErrorToast } from \"./showErrorToast\";\n\nexport const defaultQueryFn: QueryFunction = async ({ queryKey }) => {\n\n\n\n\n    const r = await API.get(`${queryKey[0]}?page=${queryKey[1]}`);\n\n    if (r.status !== 200) {\n        showErrorToast(r.status.toString())\n        throw new Error();\n    }\n\n    return await r.data;\n};\n\nexport const queryClient = new QueryClient({\n    defaultOptions: {\n        queries: {\n\n            // refetchOnWindowFocus: \"always\",\n            staleTime: 60 * 1000 * 5,\n            queryFn: defaultQueryFn,\n            onError: (error: any) => {\n\n                if (error.response.status !== 401)\n                    showErrorToast((error as Error).message || \"unauthorized\")\n\n            },\n            keepPreviousData: true\n        },\n    },\n});","import { QueryFunction, useQuery } from 'react-query'\nimport API from '../utils/API'\n\n\ninterface IUseGetSingle {\n    key: string,\n    id: string\n}\nconst getSingle: QueryFunction = async ({ queryKey }) => {\n\n    const r = await API.get(`${queryKey[0]}`)\n\n\n    return r.data\n\n}\n\nconst useGetSingleQuery = ({ id, key }: IUseGetSingle) => {\n\n    const allData = useQuery(`${key}/${id}`, getSingle, {\n        enabled: !!id\n    })\n\n    return allData\n}\n\nexport default useGetSingleQuery\n","import React, { ChangeEvent, ElementType, InputHTMLAttributes } from \"react\";\nimport { useField } from \"formik\";\nimport { Form } from \"react-bootstrap\";\n\ntype InputFieldProps = InputHTMLAttributes<HTMLInputElement> & {\n    label?: string;\n    name: string;\n    as?: ElementType<any> | undefined;\n    error?: string\n    isFile?: boolean,\n    setFieldValue?: (field: string, value: any, shouldValidate?: boolean | undefined) => void,\n    selectData?: Array<any>,\n    selectValueKey?: string,\n    selectTitleKey?: string,\n\n};\n\n// '' => false\n// 'error message stuff' => true\n\nexport const InputField: React.FC<InputFieldProps> = ({\n    isFile,\n    error,\n    label,\n    as = \"input\",\n    setFieldValue,\n    size: _,\n    selectData,\n    selectValueKey,\n    selectTitleKey,\n    ...props\n}) => {\n\n    const [field] = useField(props);\n    // <Form.File\n    //     label=\"Choose File\"\n    //     custom {...field} {...props} id={field.name}\n    // /> :\n\n    return (\n        <div className=\"w-100\">\n            <Form.Group>\n                {\n                    label ?\n                        <Form.Label htmlFor={field.name}>{label}</Form.Label>\n                        : null\n                }\n                {\n                    isFile ?\n\n                        <Form.File\n                            id=\"custom-file\"\n                            label=\"Choose file\"\n                            custom\n                            onChange={(e: ChangeEvent) => {\n                                const input = (e.currentTarget as HTMLInputElement).files\n                                if (input && setFieldValue) {\n                                    setFieldValue(field.name, input[0])\n                                }\n                            }}\n                        /> :\n                        as === \"select\" ?\n                            <Form.Control {...field} id={field.name} as=\"select\">\n                                <option value=\"\">{label}</option>\n                                {\n                                    selectData && selectData.map((data: any) => (\n                                        <option value={data[selectValueKey || \"id\"]}>{data[selectTitleKey || \"name\"]}</option>\n                                    ))\n                                }\n                            </Form.Control>\n                            :\n                            <Form.Control {...field} {...props} id={field.name} as={as} />\n\n                }\n                {\n                    error &&\n                    <Form.Text className=\"text-danger\">\n                        {error}\n                    </Form.Text>\n                }\n            </Form.Group>\n        </div>\n\n    );\n};","import axios from \"axios\"\nimport bsCustomFileInput from \"bs-custom-file-input\"\nimport { Form, Formik } from 'formik'\nimport { useEffect } from 'react'\nimport { Alert, Button, Col, Row, Spinner } from 'react-bootstrap'\nimport { useMutation } from \"react-query\"\nimport useGetSingleQuery from \"../../hooks/useGetSingleQuery\"\nimport { InputField } from '../../shared-components/InputFeild'\nimport IsLoading from \"../../shared-components/isLoading\"\nimport { ICreateUpdateForm } from \"../../types/interface\"\nimport API from \"../../utils/API\"\nimport { adminApiBaseUrl } from \"../../utils/constants\"\nimport { queryClient } from \"../../utils/queryClient\"\n\n\nconst key = \"brands\"\n\n\nconst createUpdataBrand = ({ formdata, id }: { formdata: FormData, id: string }) => {\n    if (!id) {\n        return API.post(`${key}`, formdata, {\n            headers: { \"Content-Type\": \"multipart/form-data\" },\n\n        })\n    }\n\n    return API.post(`${key}/${id}`, formdata, {\n        headers: { \"Content-Type\": \"multipart/form-data\" },\n\n    })\n}\n\nconst BrandsCreateUpdateForm = ({ id = \"\" }: ICreateUpdateForm) => {\n\n    useEffect(() => {\n        bsCustomFileInput.init()\n    }, [])\n    const { data, isLoading: dataLoading } = useGetSingleQuery({ id, key })\n    const { mutate, isLoading, error, status } = useMutation(createUpdataBrand, {\n        onSuccess: () => {\n            setTimeout(() =>\n                queryClient.invalidateQueries(key)\n                , 500)\n        }\n    })\n\n    console.log(\"data\", data)\n\n\n\n    const apiData = data as any;\n\n\n\n\n    if (dataLoading)\n        return <IsLoading />\n\n\n    return (\n        <Row className=\"px-3 rounded\">\n            <Col className=\" box-shadow py-3 mx-auto\">\n\n                <Formik\n                    initialValues={{ name: data ? apiData.name : \"\", url: data ? apiData.url : \"\", logo: \"\" }}\n                    onSubmit={(values) => {\n                        const formdata = new FormData()\n                        formdata.append(\"name\", values.name)\n                        formdata.append(\"url\", values.url)\n                        if (!id)\n                            formdata.append(\"logo\", values.logo)\n\n\n                        mutate({ formdata, id })\n                    }}>\n                    {({ setFieldValue }) => (\n                        <Form>\n                            <h1 className=\"text-primary text-center my-3\"><b>{id ? \"Update Brand\" : \"Create Brand\"}</b></h1>\n                            {status === \"success\" &&\n                                <Alert variant=\"success\">{id ? \"Brand updated successfully\" : \"Brand created successfully\"}</Alert>\n                            }\n                            {error &&\n                                <Alert variant=\"danger\">{(error as Error).message}</Alert>\n                            }\n                            <div className=\"form-container \">\n\n\n                                <InputField\n                                    name=\"name\"\n                                    placeholder=\"Name\"\n                                    label=\"Name\"\n                                    required\n                                />\n\n\n                                <InputField name=\"url\" placeholder=\"Url\" label=\"Url\" required />\n                                {\n                                    !id &&\n\n                                    <InputField name=\"logo\" placeholder=\"logo\" label=\"Choose Brand Logo\" isFile setFieldValue={setFieldValue} />\n                                }\n                            </div>\n\n                            <Row className=\"d-flex justify-content-center\">\n                                <Col md=\"6\">\n                                    <Button type=\"submit\" disabled={isLoading} className=\"w-100\">\n                                        {isLoading ? <Spinner animation=\"border\" size=\"sm\" /> : \"Submit\"}\n                                    </Button>\n                                </Col>\n                            </Row>\n\n                        </Form>\n\n                    )}\n                </Formik>\n\n            </Col>\n        </Row>\n    )\n}\n\nexport default BrandsCreateUpdateForm\n","import axios from \"axios\"\nimport { useMemo, useState } from \"react\"\nimport { Button, Container, Modal, Spinner } from \"react-bootstrap\"\nimport { AiFillDelete, AiFillEdit, AiFillPlusSquare } from \"react-icons/ai\"\nimport { BiArrowFromRight } from \"react-icons/bi\"\nimport { useMutation, useQuery } from \"react-query\"\nimport { Cell } from \"react-table\"\nimport useToggle from \"../../hooks/useToggle\"\nimport IsLoading from \"../../shared-components/isLoading\"\nimport TablePagination from \"../../shared-components/Pagination\"\nimport ReactTable from \"../../shared-components/ReactTable\"\nimport API from \"../../utils/API\"\nimport { adminApiBaseUrl, baseUploadUrl, secondaryColor } from \"../../utils/constants\"\nimport { queryClient } from \"../../utils/queryClient\"\nimport { showErrorToast } from \"../../utils/showErrorToast\"\nimport UpdateCreateForm from \"./BrandsCreateUpdateForm\"\n\n\nconst key = \"brands\"\n\n\n\nconst deleteBrand = (id: string) => {\n\n    return API.delete(`${key}/${id}`, {\n        headers: { \"Content-Type\": \"multipart/form-data\" },\n\n    })\n\n\n}\n\nconst Brands = () => {\n\n    const { setStatusCreate, setStatusDefault, status, setStatusEdit } = useToggle()\n    const [selectedRowId, setSelectedRowId] = useState<string>(\"\")\n    const [page, setPage] = useState<number>(1)\n    const [deletePopup, setDeletePopup] = useState(false)\n    const { data, isLoading, isFetching, error } = useQuery<any>([key, page], {\n        onError: (err: any) => {\n\n            showErrorToast(err.response.data.message)\n        }\n    })\n\n    const { mutate, isLoading: isDeleteLoading } = useMutation(deleteBrand, {\n        onSuccess: () => {\n\n            queryClient.invalidateQueries(key)\n            setDeletePopup(false)\n        },\n        onError: () => {\n\n            showErrorToast(\"Something went wrong deleteing the records\")\n        }\n    })\n\n    const columns = useMemo(\n        () => [\n            {\n                Header: '#Id',\n                accessor: 'id',  //accessor is the \"key\" in the data\n            },\n            {\n                Header: 'Logo',\n                accessor: 'logo',\n                Cell: (data: Cell) =>\n                    <div className=\"table-image\">\n                        <img src={`${baseUploadUrl}brands/${data.row.values.logo}`} alt=\"name\" />\n                    </div>\n\n\n            },\n            {\n                Header: 'Name',\n                accessor: 'name',\n            },\n            {\n                Header: 'Url',\n                accessor: 'url',\n            },\n            {\n                Header: 'Actions',\n                Cell: (data: Cell) => {\n\n                    return (\n                        <div className=\"d-flex\">\n                            <button onClick={() => {\n                                setSelectedRowId(data.row.values.id)\n                                setStatusEdit()\n                            }}>\n                                <AiFillEdit color={secondaryColor} size={24} />\n                            </button>\n                            <button className=\"ml-2\" onClick={() => {\n                                setSelectedRowId(data.row.values.id)\n                                setDeletePopup(true)\n                            }}>\n                                <AiFillDelete color=\"red\" size={24} />\n                            </button>\n                        </div>\n                    )\n                }\n            }\n        ],\n        []\n    )\n\n\n\n\n\n    return (\n        <>\n            <Container fluid className=\"component-wrapper px-0 py-2\">\n                <Container fluid className=\"d-flex justify-content-between py-2\">\n                    <h2 className=\"text-primary font-weight-bold\">Brands</h2>\n                    {\n                        status !== \"default\" ?\n                            <Button variant=\"primary\" onClick={setStatusDefault}  >\n                                <div className=\"text-secondary\">\n                                    <BiArrowFromRight size={25} /> <b>Back</b>\n                                </div>\n                            </Button> :\n                            <Button variant=\"primary\" onClick={setStatusCreate}>\n                                <div className=\"text-secondary\">\n\n                                    <AiFillPlusSquare size={24} /> <b>Create</b>\n                                </div>\n                            </Button>\n                    }\n\n                </Container>\n\n                <Container fluid className=\"h-100 p-0\">\n\n                    {\n                        status === \"creating\" &&\n                        <Container fluid className=\"mt-2 py-4\">\n                            <UpdateCreateForm />\n                        </Container>\n                    }\n\n                    {\n                        status === \"editing\" &&\n                        <Container fluid className=\"mt-2 py-4\">\n                            <UpdateCreateForm id={selectedRowId} />\n                        </Container>\n                    }\n\n                    {\n                        (status === \"default\") &&\n                        <>\n                            {\n                                (isLoading || isFetching) ?\n                                    <IsLoading /> :\n\n\n                                    <>\n                                        {\n                                            !error &&\n                                            <ReactTable data={data.data} columns={columns} />\n                                        }\n                                        {\n                                            !error && data.data.length > 0 ?\n                                                <TablePagination\n                                                    currentPage={(data).current_page}\n                                                    lastPage={(data).last_page}\n                                                    setPage={setPage}\n                                                    hasNextPage={!!(data).next_page_url}\n                                                    hasPrevPage={!!(data).prev_page_url}\n                                                />\n                                                : null\n                                        }  </>\n                            }\n                        </>\n\n                    }\n\n                </Container>\n            </Container>\n            <Modal show={deletePopup} onHide={() => setDeletePopup(false)}>\n                <Modal.Header closeButton>\n                    <Modal.Title>Are you sure?</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>Do you really want to delete this record? This process cannot be undone</Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"bg-light\" onClick={() => setDeletePopup(false)}>\n                        Close\n          </Button>\n                    <Button variant=\"danger\" onClick={() => {\n\n                        mutate(selectedRowId)\n                    }}>\n                        {\n                            isDeleteLoading ?\n                                <Spinner animation=\"border\" size=\"sm\" /> :\n                                \"Delete\"\n                        }\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n        </>\n    )\n}\n\nexport default Brands\n","import axios from \"axios\"\nimport bsCustomFileInput from \"bs-custom-file-input\"\nimport { Form, Formik } from 'formik'\nimport { useEffect } from 'react'\nimport { Alert, Button, Col, Container, Row, Spinner } from 'react-bootstrap'\nimport { useMutation, useQuery } from \"react-query\"\nimport useGetSingleQuery from \"../../hooks/useGetSingleQuery\"\nimport { InputField } from '../../shared-components/InputFeild'\nimport IsLoading from \"../../shared-components/isLoading\"\nimport { ICreateUpdateForm } from \"../../types/interface\"\nimport API from \"../../utils/API\"\nimport { adminApiBaseUrl } from \"../../utils/constants\"\nimport { queryClient } from \"../../utils/queryClient\"\n\n\nconst key = \"brand-models\"\n\n\nconst createUpdataBrand = ({ formdata, id }: { formdata: FormData, id: string }) => {\n    if (!id) {\n        return API.post(`${key}`, formdata, {\n            headers: { \"Content-Type\": \"multipart/form-data\" },\n\n        })\n    }\n\n    return API.post(`${key}/${id}`, formdata, {\n        headers: { \"Content-Type\": \"multipart/form-data\" },\n\n    })\n}\n\nconst BrandsCreateUpdateForm = ({ id = \"\" }: ICreateUpdateForm) => {\n\n\n    useEffect(() => {\n        bsCustomFileInput.init()\n    }, [])\n\n    const { data: brands, isLoading: isBrandLoading } = useQuery<any>([\"brands\"])\n    const { data, isLoading: dataLoading } = useGetSingleQuery({ id, key })\n    const { mutate, isLoading, error, status } = useMutation(createUpdataBrand, {\n        onSuccess: () => {\n            setTimeout(() =>\n                queryClient.invalidateQueries(key)\n                , 500)\n        }\n    })\n\n\n    console.log(data)\n\n    const apiData = data && (data as any);\n\n\n\n\n\n\n    if (dataLoading)\n        return <IsLoading />\n\n\n    return (\n        <Row className=\"px-3 rounded\">\n            <Col className=\" box-shadow mx-auto pb-3\">\n\n                <Formik\n                    initialValues={{ name: apiData ? apiData.name : \"\", url: apiData ? apiData.url : \"\", image: \"\", brand_id: \"\" }}\n                    onSubmit={(values) => {\n                        const formdata = new FormData()\n                        formdata.append(\"name\", values.name)\n                        if (!id) {\n                            formdata.append(\"image\", values.image)\n                            formdata.append(\"url\", values.url)\n                            formdata.append(\"brand_id\", values.brand_id)\n\n                        }\n                        // console.log(\"values\", values)\n\n                        mutate({ formdata, id })\n                    }}>\n                    {({ setFieldValue }) => (\n                        <Form>\n                            <h1 className=\"text-primary my-3 text-center\"><b>{id ? \"Update Brand Model\" : \"Create Brand Model\"}</b></h1>\n                            {status === \"success\" &&\n                                <Alert variant=\"success\">{id ? \"Brand model updated successfully\" : \"Brand model created successfully\"}</Alert>\n                            }\n                            {error &&\n                                <Alert variant=\"danger\">{(error as Error).message}</Alert>\n                            }\n                            <div className={`form-container  py-2 `}>\n                                <InputField\n                                    name=\"name\"\n                                    placeholder=\"Name\"\n                                    label=\"Name\"\n                                    required\n                                />\n\n                                {\n                                    !id &&\n                                    <InputField name=\"url\" placeholder=\"Url\" label=\"Url\" required />\n                                }\n                                {\n                                    !id &&\n                                    <InputField name=\"image\" placeholder=\"image\" label=\"Choose Brand Model Image\" isFile setFieldValue={setFieldValue} />\n                                }\n                                {\n                                    !id &&\n                                    <InputField name=\"brand_id\" placeholder=\"Brand\" label=\"Choose Brand\" as=\"select\" selectData={!isBrandLoading && (brands).data} />\n                                }\n                            </div>\n                            <Row className=\"d-flex justify-content-center\">\n                                <Col md=\"6\">\n                                    <Button type=\"submit\" disabled={isLoading} className=\"w-100\">\n                                        {isLoading ? <Spinner animation=\"border\" size=\"sm\" /> : \"Submit\"}\n                                    </Button>\n                                </Col>\n                            </Row>\n                        </Form>\n\n                    )}\n                </Formik>\n\n            </Col>\n        </Row>\n    )\n}\n\nexport default BrandsCreateUpdateForm\n","import axios from \"axios\"\nimport { useMemo, useState } from \"react\"\nimport { Button, Container, Modal, Spinner } from \"react-bootstrap\"\nimport { AiFillDelete, AiFillEdit, AiFillPlusSquare } from \"react-icons/ai\"\nimport { BiArrowFromRight } from \"react-icons/bi\"\nimport { useMutation, useQuery } from \"react-query\"\nimport { Cell } from \"react-table\"\nimport useToggle from \"../../hooks/useToggle\"\nimport IsLoading from \"../../shared-components/isLoading\"\nimport TablePagination from \"../../shared-components/Pagination\"\nimport ReactTable from \"../../shared-components/ReactTable\"\nimport API from \"../../utils/API\"\nimport { adminApiBaseUrl, baseUploadUrl, secondaryColor } from \"../../utils/constants\"\nimport { queryClient } from \"../../utils/queryClient\"\nimport { showErrorToast } from \"../../utils/showErrorToast\"\nimport Brands from \"../Brands\"\nimport UpdateCreateForm from \"./BrandModelsUpdateCreateForm\"\n\n\nconst key = \"brand-models\"\n\n\n\nconst deleteBrandModels = (id: string) => {\n\n    return API.delete(`${key}/${id}`, {\n        headers: { \"Content-Type\": \"multipart/form-data\" },\n\n    })\n\n\n}\n\nconst BrandModels = () => {\n    // const { data: brands } = useQuery(\"brands\")\n    const { setStatusCreate, setStatusDefault, status, setStatusEdit } = useToggle()\n    const [selectedRowId, setSelectedRowId] = useState<string>(\"\")\n    const [page, setPage] = useState<number>(1)\n    const [deletePopup, setDeletePopup] = useState(false)\n    const { data, isLoading, isFetching } = useQuery<any>([key, page])\n\n\n    const { mutate, isLoading: isDeleteLoading } = useMutation(deleteBrandModels, {\n        onSuccess: () => {\n\n            queryClient.invalidateQueries(key)\n            setDeletePopup(false)\n        },\n        onError: () => {\n\n            showErrorToast(\"Something went wrong deleteing the records\")\n        }\n    })\n\n    const columns = useMemo(\n        () => [\n            {\n                Header: '#Id',\n                accessor: 'id',  //accessor is the \"key\" in the data\n            },\n            {\n                Header: 'Image',\n                accessor: 'image',\n                Cell: (data: Cell) =>\n                    <div className=\"table-image\">\n                        <img src={`${baseUploadUrl}${key}/${data.row.values.image}`} alt={key} />\n                    </div>\n\n\n            },\n            {\n                Header: 'Name',\n                accessor: 'name',\n            },\n\n            {\n                Header: 'Url',\n                accessor: 'url',\n            },\n            {\n                Header: 'Brand',\n                accessor: 'brand_id',\n                // Cell: (data: Cell) =>\n                //     brands ? (brands as any).data.find((brand: any) => brand.id === data.row.values.brand_id).name : data.row.values.brand_id\n\n\n            },\n            {\n                Header: 'Actions',\n                Cell: (data: Cell) => {\n\n                    return (\n                        <div className=\"d-flex\">\n                            <button onClick={() => {\n                                setSelectedRowId(data.row.values.id)\n                                setStatusEdit()\n                            }}>\n                                <AiFillEdit color={secondaryColor} size={24} />\n                            </button>\n                            <button className=\"ml-2\" onClick={() => {\n                                setSelectedRowId(data.row.values.id)\n                                setDeletePopup(true)\n                            }}>\n                                <AiFillDelete color=\"red\" size={24} />\n                            </button>\n                        </div>\n                    )\n                }\n            }\n        ],\n        []\n    )\n\n\n\n\n\n    return (\n        <>\n            <Container fluid className=\"component-wrapper px-0 py-2\">\n                <Container fluid className=\"d-flex justify-content-between py-2\">\n                    <h2 className=\"text-primary font-weight-bold\">Brand Models</h2>\n                    {\n                        status !== \"default\" ?\n                            <Button variant=\"primary\" onClick={setStatusDefault}  >\n                                <div className=\"text-secondary\">\n                                    <BiArrowFromRight size={25} /> <b>Back</b>\n                                </div>\n                            </Button> :\n                            <Button variant=\"primary\" onClick={setStatusCreate}>\n                                <div className=\"text-secondary\">\n\n                                    <AiFillPlusSquare size={24} /> <b>Create</b>\n                                </div>\n                            </Button>\n                    }\n\n                </Container>\n\n                <Container fluid className=\"h-100 p-0\">\n\n                    {\n                        status === \"creating\" &&\n                        <Container fluid className=\"mt-2 py-4\">\n                            <UpdateCreateForm />\n                        </Container>\n                    }\n\n                    {\n                        status === \"editing\" &&\n                        <Container fluid className=\"mt-2 py-4\">\n                            <UpdateCreateForm id={selectedRowId} />\n                        </Container>\n                    }\n\n                    {\n                        (status === \"default\") &&\n                        <>\n                            {\n                                (isLoading || isFetching) ?\n                                    <IsLoading /> :\n\n\n                                    <>\n                                        <ReactTable data={(data).data} columns={columns} />\n                                        {\n                                            (data).data.length > 0 ?\n                                                <TablePagination\n                                                    currentPage={(data).current_page}\n                                                    lastPage={(data).last_page}\n                                                    setPage={setPage}\n                                                    hasNextPage={!!(data).next_page_url}\n                                                    hasPrevPage={!!(data).prev_page_url}\n                                                />\n                                                : null\n                                        }  </>\n                            }\n                        </>\n\n                    }\n\n                </Container>\n            </Container>\n            <Modal show={deletePopup} onHide={() => setDeletePopup(false)}>\n                <Modal.Header closeButton>\n                    <Modal.Title>Are you sure?</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>Do you really want to delete this record? This process cannot be undone</Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"bg-light\" onClick={() => setDeletePopup(false)}>\n                        Close\n          </Button>\n                    <Button variant=\"danger\" onClick={() => {\n\n                        mutate(selectedRowId)\n                    }}>\n                        {\n                            isDeleteLoading ?\n                                <Spinner animation=\"border\" size=\"sm\" /> :\n                                \"Delete\"\n                        }\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n        </>\n    )\n}\n\nexport default BrandModels\n","import axios from \"axios\"\nimport bsCustomFileInput from \"bs-custom-file-input\"\nimport { Form, Formik } from 'formik'\nimport { useEffect } from 'react'\nimport { Alert, Button, Col, Row, Spinner } from 'react-bootstrap'\nimport { useMutation, useQuery } from \"react-query\"\nimport useGetSingleQuery from \"../../hooks/useGetSingleQuery\"\nimport { InputField } from '../../shared-components/InputFeild'\nimport IsLoading from \"../../shared-components/isLoading\"\nimport { ICreateUpdateForm } from \"../../types/interface\"\nimport API from \"../../utils/API\"\nimport { adminApiBaseUrl } from \"../../utils/constants\"\nimport { queryClient } from \"../../utils/queryClient\"\n\n\nconst key = \"categories\"\n\n\n\nconst createUpdataCategories = ({ formdata, id }: { formdata: { name: any }, id: string }) => {\n    if (!id) {\n        return API.post(`${key}`, formdata, {\n            headers: { \"Content-Type\": \"application/json\" },\n\n        })\n    }\n\n    return API.post(`${key}/${id}`, formdata, {\n        headers: { \"Content-Type\": \"application/json\" },\n\n    })\n}\n\nconst CategoriesCreateUpdateForm = ({ id = \"\" }: ICreateUpdateForm) => {\n\n\n    useEffect(() => {\n        bsCustomFileInput.init()\n    }, [])\n    const { data, isLoading: dataLoading } = useGetSingleQuery({ id, key })\n    const { mutate, isLoading, error, status } = useMutation(createUpdataCategories, {\n        onSuccess: () => {\n            setTimeout(() =>\n                queryClient.invalidateQueries(key)\n                , 500)\n        }\n    })\n\n\n\n    const apiData = data && (data as any);\n\n    console.log(\"apiData\", data)\n\n\n\n\n    if (dataLoading)\n        return <IsLoading />\n\n\n    return (\n        <Row className=\"px-3 rounded\">\n            <Col className=\" box-shadow py-3 mx-auto\">\n\n                <Formik\n                    initialValues={{ name: apiData ? apiData.name : \"\" }}\n                    onSubmit={(values) => {\n\n                        console.log(values)\n                        mutate({ formdata: values, id })\n                    }}>\n                    {() => (\n                        <Form className=\"w-100\">\n                            <h1 className=\"text-primary text-center my-3\"><b>{id ? \"Update Cateory\" : \"Create Category\"}</b></h1>\n                            {status === \"success\" &&\n                                <Alert variant=\"success\">{id ? \"Category updated successfully\" : \"Category created successfully\"}</Alert>\n                            }\n                            {error &&\n                                <Alert variant=\"danger\">{(error as Error).message}</Alert>\n                            }\n\n                            <div className=\"form-container py-2\">\n                                <InputField\n                                    name=\"name\"\n                                    placeholder=\"Name\"\n                                    label=\"Name\"\n                                    required\n                                />\n\n\n                            </div>\n                            <Row className=\"d-flex justify-content-center\">\n                                <Col md=\"6\">\n                                    <Button type=\"submit\" disabled={isLoading} className=\"w-100\">\n                                        {isLoading ? <Spinner animation=\"border\" size=\"sm\" /> : \"Submit\"}\n                                    </Button>\n                                </Col>\n                            </Row>\n                        </Form>\n\n                    )}\n                </Formik>\n\n            </Col>\n        </Row>\n    )\n}\n\nexport default CategoriesCreateUpdateForm\n","import { useMemo, useState } from \"react\"\nimport { Button, Container, Modal, Spinner } from \"react-bootstrap\"\nimport { AiFillDelete, AiFillEdit, AiFillPlusSquare } from \"react-icons/ai\"\nimport { BiArrowFromRight } from \"react-icons/bi\"\nimport { useMutation, useQuery } from \"react-query\"\nimport { Cell } from \"react-table\"\nimport useToggle from \"../../hooks/useToggle\"\nimport IsLoading from \"../../shared-components/isLoading\"\nimport TablePagination from \"../../shared-components/Pagination\"\nimport ReactTable from \"../../shared-components/ReactTable\"\nimport API from \"../../utils/API\"\nimport { secondaryColor } from \"../../utils/constants\"\nimport { queryClient } from \"../../utils/queryClient\"\nimport { showErrorToast } from \"../../utils/showErrorToast\"\nimport UpdateCreateForm from \"./CategoriesCreateUpdateForm\"\n\n\nconst key = \"categories\"\n\n\n\nconst deleteBrandModels = (id: string) => {\n\n    return API.delete(`${key}/${id}`, {\n        headers: { \"Content-Type\": \"multipart/form-data\" },\n\n    })\n\n\n}\n\nconst Categories = () => {\n    // const { data: brands } = useQuery(\"brands\")\n    const { setStatusCreate, setStatusDefault, status, setStatusEdit } = useToggle()\n    const [selectedRowId, setSelectedRowId] = useState<string>(\"\")\n    const [page, setPage] = useState<number>(1)\n    const [deletePopup, setDeletePopup] = useState(false)\n    const { data, isLoading, isFetching } = useQuery([key, page])\n\n\n    const { mutate, isLoading: isDeleteLoading } = useMutation(deleteBrandModels, {\n        onSuccess: () => {\n\n            queryClient.invalidateQueries(key)\n            setDeletePopup(false)\n        },\n        onError: () => {\n\n            showErrorToast(\"Something went wrong deleteing the records\")\n        }\n    })\n\n    const columns = useMemo(\n        () => [\n            {\n                Header: '#Id',\n                accessor: 'id',  //accessor is the \"key\" in the data\n            },\n\n            {\n                Header: 'Name',\n                accessor: 'name',\n            },\n            {\n                Header: 'Actions',\n                Cell: (data: Cell) => {\n\n                    return (\n                        <div className=\"d-flex\">\n                            <button onClick={() => {\n                                setSelectedRowId(data.row.values.id)\n                                setStatusEdit()\n                            }}>\n                                <AiFillEdit color={secondaryColor} size={24} />\n                            </button>\n                            <button className=\"ml-2\" onClick={() => {\n                                setSelectedRowId(data.row.values.id)\n                                setDeletePopup(true)\n                            }}>\n                                <AiFillDelete color=\"red\" size={24} />\n                            </button>\n                        </div>\n                    )\n                }\n            }\n        ],\n        []\n    )\n\n\n\n\n\n    return (\n        <>\n            <Container fluid className=\"component-wrapper px-0 py-2\">\n                <Container fluid className=\"d-flex justify-content-between py-2\">\n                    <h2 className=\"text-primary font-weight-bold\">Categories</h2>\n                    {\n                        status !== \"default\" ?\n                            <Button variant=\"primary\" onClick={setStatusDefault}  >\n                                <div className=\"text-secondary\">\n                                    <BiArrowFromRight size={25} /> <b>Back</b>\n                                </div>\n                            </Button> :\n                            <Button variant=\"primary\" onClick={setStatusCreate}>\n                                <div className=\"text-secondary\">\n\n                                    <AiFillPlusSquare size={24} /> <b>Create</b>\n                                </div>\n                            </Button>\n                    }\n\n                </Container>\n\n                <Container fluid className=\"h-100 p-0\">\n\n                    {\n                        status === \"creating\" &&\n                        <Container fluid className=\"mt-2 py-4\">\n                            <UpdateCreateForm />\n                        </Container>\n                    }\n\n                    {\n                        status === \"editing\" &&\n                        <Container fluid className=\"mt-2 py-4\">\n                            <UpdateCreateForm id={selectedRowId} />\n                        </Container>\n                    }\n\n                    {\n                        (status === \"default\") &&\n                        <>\n                            {\n                                (isLoading || isFetching) ?\n                                    <IsLoading /> :\n\n\n                                    <>\n                                        <ReactTable data={(data as any).data} columns={columns} />\n                                        {\n                                            (data as any).data.length > 0 ?\n                                                <TablePagination\n                                                    currentPage={(data as any).current_page}\n                                                    lastPage={(data as any).last_page}\n                                                    setPage={setPage}\n                                                    hasNextPage={!!(data as any).next_page_url}\n                                                    hasPrevPage={!!(data as any).prev_page_url}\n                                                />\n                                                : null\n                                        }  </>\n                            }\n                        </>\n\n                    }\n\n                </Container>\n            </Container>\n            <Modal show={deletePopup} onHide={() => setDeletePopup(false)}>\n                <Modal.Header closeButton>\n                    <Modal.Title>Are you sure?</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>Do you really want to delete this record? This process cannot be undone</Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"bg-light\" onClick={() => setDeletePopup(false)}>\n                        Close\n          </Button>\n                    <Button variant=\"danger\" onClick={() => {\n\n                        mutate(selectedRowId)\n                    }}>\n                        {\n                            isDeleteLoading ?\n                                <Spinner animation=\"border\" size=\"sm\" /> :\n                                \"Delete\"\n                        }\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n        </>\n    )\n}\n\nexport default Categories\n","import bsCustomFileInput from \"bs-custom-file-input\"\nimport { Form, Formik } from 'formik'\nimport { useEffect } from 'react'\nimport { Alert, Button, Col, Row, Spinner } from 'react-bootstrap'\nimport { useMutation } from \"react-query\"\nimport useGetSingleQuery from \"../../hooks/useGetSingleQuery\"\nimport { InputField } from '../../shared-components/InputFeild'\nimport IsLoading from \"../../shared-components/isLoading\"\nimport { ICreateUpdateForm } from \"../../types/interface\"\nimport API from \"../../utils/API\"\nimport { queryClient } from \"../../utils/queryClient\"\n\n\nconst key = \"coupons\"\n\n\nconst createUpdataCoupons = ({ formdata, id }: { formdata: any, id: string }) => {\n    if (!id) {\n        return API.post(`${key}`, formdata, {\n            headers: { \"Content-Type\": \"applicatioin/json\" },\n\n        })\n    }\n\n    return API.post(`${key}/${id}`, formdata, {\n        headers: { \"Content-Type\": \"application/json\" },\n\n    })\n}\n\nconst CouponCreateUpdateForm = ({ id = \"\" }: ICreateUpdateForm) => {\n\n\n    useEffect(() => {\n        bsCustomFileInput.init()\n    }, [])\n    const { data, isLoading: dataLoading } = useGetSingleQuery({ id, key })\n    const { mutate, isLoading, error, status } = useMutation(createUpdataCoupons, {\n        onSuccess: () => {\n            setTimeout(() =>\n                queryClient.invalidateQueries(key)\n                , 500)\n        }\n    })\n\n\n\n    const apiData = data && (data as any);\n\n    console.log(\"apiData\", apiData)\n\n\n\n\n    if (dataLoading)\n        return <IsLoading />\n\n\n    return (\n        <Row className=\"px-3 rounded\">\n            <Col className=\" box-shadow pb-3 mx-auto\">\n\n                <Formik\n                    initialValues={{ title: apiData ? apiData.title : \"\", coupon_code: apiData ? apiData.coupon_code : \"\", description: apiData ? apiData.description : \"\", terms: apiData ? apiData.terms : \"\" }}\n                    onSubmit={(values) => {\n\n                        // console.log(\"values\", values)\n\n                        mutate({ formdata: values, id })\n                    }}>\n                    {({ setFieldValue }) => (\n                        <Form>\n                            <h1 className=\"text-primary text-center my-3\"><b>{id ? \"Update Coupon \" : \"Create Coupon\"}</b></h1>\n                            {status === \"success\" &&\n                                <Alert variant=\"success\">{id ? \"Coupon updated successfully\" : \"Coupon created successfully\"}</Alert>\n                            }\n                            {error &&\n                                <Alert variant=\"danger\">{(error as Error).message}</Alert>\n                            }\n                            <div className=\"form-container  py-2 \">\n                                <InputField\n                                    name=\"title\"\n                                    placeholder=\"Title\"\n                                    label=\"Title\"\n                                    required\n                                />\n\n                                {\n                                    !id &&\n                                    <InputField name=\"coupon_code\" placeholder=\"Coupon Code\" label=\"Coupon Code\" required />\n                                }\n                                {\n                                    !id &&\n                                    <InputField name=\"description\" placeholder=\"Description\" label=\"Descrition\" as=\"textarea\" required />\n                                }\n\n                                {\n                                    !id &&\n                                    <InputField name=\"terms\" placeholder=\"Terms\" label=\"Terms\" as=\"textarea\" required />\n                                }\n                            </div>\n                            <Row className=\"d-flex justify-content-center\">\n                                <Col md=\"6\">\n                                    <Button type=\"submit\" disabled={isLoading} className=\"w-100\">\n                                        {isLoading ? <Spinner animation=\"border\" size=\"sm\" /> : \"Submit\"}\n                                    </Button>\n                                </Col>\n                            </Row>\n                        </Form>\n\n                    )}\n                </Formik>\n\n            </Col>\n        </Row>\n    )\n}\n\nexport default CouponCreateUpdateForm\n","import { useMemo, useState } from \"react\"\nimport { Button, Container, Modal, Spinner } from \"react-bootstrap\"\nimport { AiFillDelete, AiFillEdit, AiFillPlusSquare } from \"react-icons/ai\"\nimport { BiArrowFromRight } from \"react-icons/bi\"\nimport { useMutation, useQuery } from \"react-query\"\nimport { Cell } from \"react-table\"\nimport useToggle from \"../../hooks/useToggle\"\nimport IsLoading from \"../../shared-components/isLoading\"\nimport TablePagination from \"../../shared-components/Pagination\"\nimport ReactTable from \"../../shared-components/ReactTable\"\nimport API from \"../../utils/API\"\nimport { secondaryColor } from \"../../utils/constants\"\nimport { queryClient } from \"../../utils/queryClient\"\nimport { showErrorToast } from \"../../utils/showErrorToast\"\nimport UpdateCreateForm from \"./CouponsCreateUpdateForm\"\n\n\nconst key = \"coupons\"\n\n\n\nconst deleteCoupon = (id: string) => {\n\n    return API.delete(`${key}/${id}`, {\n        headers: { \"Content-Type\": \"multipart/form-data\" },\n\n    })\n\n\n}\n\nconst Coupons = () => {\n    // const { data: brands } = useQuery(\"brands\")\n    const { setStatusCreate, setStatusDefault, status, setStatusEdit } = useToggle()\n    const [selectedRowId, setSelectedRowId] = useState<string>(\"\")\n    const [page, setPage] = useState<number>(1)\n    const [deletePopup, setDeletePopup] = useState(false)\n    const { data, isLoading, isFetching } = useQuery([key, page])\n\n\n    const { mutate, isLoading: isDeleteLoading } = useMutation(deleteCoupon, {\n        onSuccess: () => {\n\n            queryClient.invalidateQueries(key)\n            setDeletePopup(false)\n        },\n        onError: () => {\n\n            showErrorToast(\"Something went wrong deleteing the records\")\n        }\n    })\n\n    const columns = useMemo(\n        () => [\n            {\n                Header: '#Id',\n                accessor: 'id',  //accessor is the \"key\" in the data\n            },\n\n            {\n                Header: 'Title',\n                accessor: 'title',\n            },\n\n            {\n                Header: 'Code',\n                accessor: 'code',\n            },\n            {\n                Header: 'Description',\n                accessor: 'description'\n            },\n            {\n                Header: 'Actions',\n                Cell: (data: Cell) => {\n\n                    return (\n                        <div className=\"d-flex\">\n                            <button onClick={() => {\n                                setSelectedRowId(data.row.values.id)\n                                setStatusEdit()\n                            }}>\n                                <AiFillEdit color={secondaryColor} size={24} />\n                            </button>\n                            <button className=\"ml-2\" onClick={() => {\n                                setSelectedRowId(data.row.values.id)\n                                setDeletePopup(true)\n                            }}>\n                                <AiFillDelete color=\"red\" size={24} />\n                            </button>\n                        </div>\n                    )\n                }\n            }\n        ],\n        []\n    )\n\n\n\n\n\n    return (\n        <>\n            <Container fluid className=\"component-wrapper px-0 py-2\">\n                <Container fluid className=\"d-flex justify-content-between py-2\">\n                    <h2 className=\"text-primary font-weight-bold\">Coupons</h2>\n                    {\n                        status !== \"default\" ?\n                            <Button variant=\"primary\" onClick={setStatusDefault}  >\n                                <div className=\"text-secondary\">\n                                    <BiArrowFromRight size={25} /> <b>Back</b>\n                                </div>\n                            </Button> :\n                            <Button variant=\"primary\" onClick={setStatusCreate}>\n                                <div className=\"text-secondary\">\n\n                                    <AiFillPlusSquare size={24} /> <b>Create</b>\n                                </div>\n                            </Button>\n                    }\n\n                </Container>\n\n                <Container fluid className=\"h-100 p-0\">\n\n                    {\n                        status === \"creating\" &&\n                        <Container fluid className=\"mt-2 py-4\">\n                            <UpdateCreateForm />\n                        </Container>\n                    }\n\n                    {\n                        status === \"editing\" &&\n                        <Container fluid className=\"mt-2 py-4\">\n                            <UpdateCreateForm id={selectedRowId} />\n                        </Container>\n                    }\n\n                    {\n                        (status === \"default\") &&\n                        <>\n                            {\n                                (isLoading || isFetching) ?\n                                    <IsLoading /> :\n\n\n                                    <>\n                                        <ReactTable data={(data as any).data} columns={columns} />\n                                        {\n                                            (data as any).data.length > 0 ?\n                                                <TablePagination\n                                                    currentPage={(data as any).current_page}\n                                                    lastPage={(data as any).last_page}\n                                                    setPage={setPage}\n                                                    hasNextPage={!!(data as any).next_page_url}\n                                                    hasPrevPage={!!(data as any).prev_page_url}\n                                                />\n                                                : null\n                                        }  </>\n                            }\n                        </>\n\n                    }\n\n                </Container>\n            </Container>\n            <Modal show={deletePopup} onHide={() => setDeletePopup(false)}>\n                <Modal.Header closeButton>\n                    <Modal.Title>Are you sure?</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>Do you really want to delete this record? This process cannot be undone</Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"bg-light\" onClick={() => setDeletePopup(false)}>\n                        Close\n          </Button>\n                    <Button variant=\"danger\" onClick={() => {\n\n                        mutate(selectedRowId)\n                    }}>\n                        {\n                            isDeleteLoading ?\n                                <Spinner animation=\"border\" size=\"sm\" /> :\n                                \"Delete\"\n                        }\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n        </>\n    )\n}\n\nexport default Coupons\n","export default __webpack_public_path__ + \"static/media/logo.6fe10f16.jpg\";","import image from '../assets/logo.jpg'\n\ninterface IMockData {\n    id: string;\n    imageScr: string;\n    created_by: string;\n    name: string;\n}\n\nexport const mockData: Array<IMockData> = [{\n    \"id\": \"1\",\n    \"imageScr\": image,\n    \"created_by\": \"Hillier\",\n    \"name\": \"Prius\"\n}, {\n    \"id\": \"2\",\n    \"imageScr\": image,\n    \"created_by\": \"Pascale\",\n    \"name\": \"Outlook\"\n}, {\n    \"id\": \"3\",\n    \"imageScr\": image,\n    \"created_by\": \"Etienne\",\n    \"name\": \"RDX\"\n}, {\n    \"id\": \"4\",\n    \"imageScr\": image,\n    \"created_by\": \"Jeddy\",\n    \"name\": \"MPV\"\n}, {\n    \"id\": \"5\",\n    \"imageScr\": image,\n    \"created_by\": \"Avigdor\",\n    \"name\": \"Mark LT\"\n}, {\n    \"id\": \"6\",\n    \"imageScr\": image,\n    \"created_by\": \"Grover\",\n    \"name\": \"Cayenne\"\n}]","import bsCustomFileInput from \"bs-custom-file-input\"\nimport { Form, Formik } from 'formik'\nimport { useEffect } from 'react'\nimport { Button } from 'react-bootstrap'\nimport { InputField } from '../../shared-components/InputFeild'\n\ninterface IBrandsCreateUpdateForm {\n    title?: string,\n    description?: string\n}\n\nconst BrandsCreateUpdateForm = ({ description = \"\", title = \"\" }: IBrandsCreateUpdateForm) => {\n\n    useEffect(() => {\n        bsCustomFileInput.init()\n    }, [])\n    return (\n\n        <Formik\n            initialValues={{ title, description, image: null }}\n            onSubmit={(values) => {\n                console.log(values)\n            }}>\n            {({ setFieldValue }) => (\n                <Form>\n                    <InputField\n                        name=\"title\"\n                        placeholder=\"Title\"\n                        label=\"Title\"\n                    />\n\n                    <InputField name=\"description\" placeholder=\"description\" label=\"Description\" />\n                    <InputField name=\"image\" placeholder=\"image\" label=\"Choose Brand\" isFile setFieldValue={setFieldValue} />\n                    {/* <input type=\"file\" name=\"image\" id=\"image\" onChange={(e: ChangeEvent) => {\n                        const input = (e.currentTarget as HTMLInputElement).files\n                        if (input) {\n                            setFieldValue(\"image\", input[0])\n                        }\n                    }} /> */}\n                    <Button type=\"submit\">Submit</Button>\n\n                </Form>\n\n            )}\n        </Formik>\n\n    )\n}\n\nexport default BrandsCreateUpdateForm\n","import { useMemo, useState } from \"react\"\nimport { Button, Container, Modal } from \"react-bootstrap\"\nimport { AiFillDelete, AiFillEdit, AiFillPlusSquare } from \"react-icons/ai\"\nimport { BiArrowFromRight } from \"react-icons/bi\"\nimport { Cell } from \"react-table\"\nimport useToggle from \"../../hooks/useToggle\"\nimport ReactTable from \"../../shared-components/ReactTable\"\nimport { secondaryColor } from \"../../utils/constants\"\nimport { mockData } from \"../../utils/mockData\"\nimport FaqsCreateUpdateForm from \"./FaqsCreateUpdateForm\"\n\nconst Brands = () => {\n    const { setStatusCreate, setStatusDefault, status, setStatusEdit } = useToggle()\n    const [deletePopup, setDeletePopup] = useState(false)\n    const data: any = useMemo(\n        () => [\n            ...mockData\n        ],\n        []\n    )\n    const columns = useMemo(\n        () => [\n            {\n                Header: '#Id',\n                accessor: 'id',  //accessor is the \"key\" in the data\n            },\n            {\n                Header: 'Image',\n                accessor: 'imageScr',\n                Cell: (data: Cell) =>\n                    <div className=\"table-image\">\n                        <img src={data.row.values.imageScr} alt=\"name\" />\n                    </div>\n\n\n            },\n            {\n                Header: 'Name',\n                accessor: 'name',\n            },\n            {\n                Header: 'User',\n                accessor: 'created_by',\n            },\n            {\n                Header: 'Actions',\n                Cell: () => (\n                    <div className=\"d-flex\">\n                        <button onClick={() => {\n                            setStatusEdit()\n                        }}>\n                            <AiFillEdit color={secondaryColor} size={24} />\n                        </button>\n                        <button className=\"ml-2\" onClick={() => {\n\n                            setDeletePopup(true)\n                        }}>\n                            <AiFillDelete color=\"red\" size={24} />\n                        </button>\n                    </div>\n                )\n            }\n        ],\n        [setStatusEdit]\n    )\n\n    return (\n        <>\n            <Container fluid className=\"component-wrapper px-0 py-2\">\n                <Container className=\"d-flex justify-content-between py-2\">\n                    <h2 className=\"text-primary font-weight-bold\">Faqs</h2>\n                    {\n                        status !== \"default\" ?\n                            <Button variant=\"primary\" onClick={setStatusDefault}  >\n                                <div className=\"text-secondary\">\n                                    <BiArrowFromRight size={25} /> <b>Back</b>\n                                </div>\n                            </Button> :\n                            <Button variant=\"primary\" onClick={setStatusCreate}>\n                                <div className=\"text-secondary\">\n\n                                    <AiFillPlusSquare size={24} /> <b>Create</b>\n                                </div>\n                            </Button>\n                    }\n\n                </Container>\n\n                <Container fluid className=\"h-100 p-0\">\n\n                    {\n                        status === \"creating\" &&\n                        <Container fluid className=\"mt-2 py-4\">\n                            <FaqsCreateUpdateForm />\n                        </Container>\n                    }\n\n                    {\n                        status === \"editing\" &&\n                        <Container fluid className=\"mt-2 py-4\">\n                            <FaqsCreateUpdateForm title=\"test title\" description=\"test description\" />\n                        </Container>\n                    }\n\n                    {\n                        status === \"default\" &&\n                        <ReactTable data={data} columns={columns} />\n                    }\n\n                </Container>\n            </Container>\n            <Modal show={deletePopup} onHide={() => setDeletePopup(false)}>\n                <Modal.Header closeButton>\n                    <Modal.Title>Are you sure?</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>Do you really want to delete this record? This process cannot be undone</Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"bg-light\" onClick={() => setDeletePopup(false)}>\n                        Close\n          </Button>\n                    <Button variant=\"danger\" onClick={() => setDeletePopup(false)}>\n                        Delete\n          </Button>\n                </Modal.Footer>\n            </Modal>\n        </>\n    )\n}\n\nexport default Brands\n","import logo from \"../assets/logo.jpg\";\nconst Logo = () => {\n  return (\n    <div className=\"logo-wrapper\">\n      <div className=\"logo\">\n        <img src={logo} alt=\"logo\" />\n        {/* <h2 style={{ color }}>Carwash</h2> */}\n      </div>\n    </div>\n  );\n};\n\nexport default Logo;\n","import { Form, Formik } from 'formik'\nimport { useEffect } from 'react'\nimport { Button, Container, Spinner } from 'react-bootstrap'\nimport { useMutation } from 'react-query'\nimport { useHistory } from 'react-router'\nimport * as Yup from 'yup'\nimport { InputField } from '../shared-components/InputFeild'\nimport Logo from '../shared-components/Logo'\nimport API from '../utils/API'\n\ninterface Props {\n\n}\nconst phoneRegExp = /^[6-9]\\d{9}$/\nconst LoginSchema = Yup.object().shape({\n    phone: Yup.string().matches(phoneRegExp, 'Phone number is not valid').required(\"Phone number required\")\n})\n\nconst sendOtp = (formData: FormData) => {\n    return API.post(`auth/send-otp`, formData, {\n        headers: { \"Content-Type\": \"multipart/form-data\" },\n\n    })\n}\n\nconst LoginPage = (props: Props) => {\n\n    const history = useHistory()\n\n    const { mutate, data, isLoading } = useMutation(sendOtp)\n\n    useEffect(() => {\n        if (data) {\n            console.log(\"send-otp\", data.data)\n            history.push(`/verify-otp/${data.data.user.phone}/${data.data.user.otp}`)\n        }\n\n    }, [data])\n\n\n\n    return (\n        <Container fluid className=\"login-page\" >\n            <Formik initialValues={{ phone: \"\" }}\n                onSubmit={values => {\n                    const formData = new FormData()\n                    formData.append(\"phone\", values.phone)\n\n                    mutate(formData)\n\n                }}\n                validationSchema={LoginSchema}\n            >\n\n                {\n                    ({ errors }) => {\n                        return (\n                            <Form >\n                                <div className=\"d-flex flex-column align-items-center justify-content-between px-3 py-5 box-shadow rounded\">\n\n                                    <div className=\"logo-container\">\n                                        <Logo />\n                                    </div>\n\n                                    <h1 className=\"text-primary my-3\"><b>Login</b></h1>\n                                    <p >We will send you a 4-digit\n                                        verification code to this number</p>\n                                    <InputField name=\"phone\" placeholder=\"Enter your phone number\" label=\"Phone number\" type=\"text\" error={errors.phone} />\n\n                                    <Button variant=\"primary\" type=\"submit\" className=\"my-2\">\n                                        {\n                                            isLoading ?\n                                                <Spinner animation=\"border\" variant=\"secondary\" size=\"sm\" /> :\n                                                <div className=\"text-secondary\">\n                                                    <b>Send OTP</b>\n                                                </div>\n                                        }\n                                    </Button>\n                                </div>\n                            </Form>\n                        )\n                    }\n                }\n            </Formik>\n        </Container>\n    )\n}\n\nexport default LoginPage\n","import { Link, useLocation } from \"react-router-dom\"\nimport { INavLink } from \"../types/interface\"\n\nconst Navlink = ({ title, path, onClick, icon }: INavLink) => {\n    const { pathname } = useLocation()\n    return (\n        <Link to={path} >\n            <li className={pathname === path ? \"navLink active\" : \"navLink my-1\"}\n                onClick={onClick}\n            >{icon && icon} {title}</li>\n        </Link>\n    )\n}\n\nexport default Navlink\n","interface IOverlay {\n    onClick?: () => void\n}\nconst Overlay = ({ onClick }: IOverlay) => {\n    return (\n        <div className=\"overlay\" onClick={onClick ? onClick : () => { }}>\n\n        </div>\n    )\n}\n\nexport default Overlay\n","import { INavBar, INavLink } from \"../types/interface\";\nimport Logo from \"../shared-components/Logo\";\nimport Navlink from \"../shared-components/Navlink\";\nimport Overlay from \"../shared-components/Overlay\";\nimport { ImCross } from \"react-icons/im\";\nimport { SiBrandfolder } from \"react-icons/si\";\nimport { IoLogoModelS } from \"react-icons/io\";\nimport {\n  FaAddressCard,\n  FaBoxes,\n  FaDiceFour,\n  FaQuestionCircle,\n  FaRegLightbulb,\n  FaUsers,\n} from \"react-icons/fa\";\nimport {\n  RiAdvertisementFill,\n  RiCoupon3Line,\n  RiDashboardFill,\n  RiServiceFill,\n} from \"react-icons/ri\";\nimport { useContext } from \"react\";\nimport { IsDesktopContext } from \"../context/IsDesktopContext\";\n\nconst manageLinks: Array<INavLink> = [\n  {\n    title: \"Brands\",\n    path: \"/brands\",\n    icon: <SiBrandfolder />,\n  },\n  {\n    title: \"Brand Models\",\n    path: \"/brand-models\",\n    icon: <IoLogoModelS />,\n  },\n  {\n    title: \"Categories\",\n    path: \"/categories\",\n    icon: <FaDiceFour />,\n  },\n  {\n    title: \"Users\",\n    path: \"/users\",\n    icon: <FaUsers />,\n  },\n  {\n    title: \"Services\",\n    path: \"/servicies\",\n    icon: <RiServiceFill />,\n  },\n  {\n    title: \"Faqs\",\n    path: \"/faqs\",\n    icon: <FaQuestionCircle />,\n  },\n  {\n    title: \"Plans\",\n    path: \"/plans\",\n    icon: <FaRegLightbulb />,\n  },\n  {\n    title: \"Coupons\",\n    path: \"/coupons\",\n    icon: <RiCoupon3Line />,\n  },\n];\nconst mainLinks: Array<INavLink> = [\n  {\n    title: \"Orders\",\n    path: \"/orders\",\n    icon: <FaBoxes />,\n  },\n  {\n    title: \"Subscriptions\",\n    path: \"/subscriptions\",\n    icon: <FaAddressCard />,\n  },\n  {\n    title: \"Advertisements\",\n    path: \"/advertisements\",\n    icon: <RiAdvertisementFill />,\n  },\n];\n\nconst NavBar = ({ isNavOpen, setIsNavOpen }: INavBar) => {\n  const isDesktop = useContext(IsDesktopContext);\n\n  const closeNavBar = () => {\n    if (setIsNavOpen) {\n      setIsNavOpen(false);\n    }\n  };\n\n  return (\n    <>\n      <nav className={isNavOpen ? \"active\" : \"\"}>\n        {!isDesktop ? (\n          <div className=\"menu-hamburger\">\n            <ImCross size={20} onClick={closeNavBar} color=\"white\" />\n          </div>\n        ) : null}\n        <div className=\"all-links mt-5\">\n          <ul className=\"mt-5 pt-5\">\n            <Navlink\n              title=\"Dashboard\"\n              path=\"/\"\n              onClick={closeNavBar}\n              icon={<RiDashboardFill />}\n            />\n          </ul>\n\n          <p className=\" mb-2\">Manage</p>\n          <ul>\n            {manageLinks.map(({ title, path, icon }) => (\n              <Navlink\n                path={path}\n                title={title}\n                key={title}\n                onClick={closeNavBar}\n                icon={icon}\n              />\n            ))}\n          </ul>\n          <p className=\"mb-2\">Main</p>\n          <ul>\n            {mainLinks.map(({ title, path, icon }) => (\n              <Navlink\n                path={path}\n                title={title}\n                key={title}\n                onClick={closeNavBar}\n                icon={icon}\n              />\n            ))}\n          </ul>\n        </div>\n      </nav>\n      {isNavOpen && <Overlay onClick={closeNavBar} />}\n    </>\n  );\n};\n\nexport default NavBar;\n","import bsCustomFileInput from \"bs-custom-file-input\"\nimport { Form, Formik } from 'formik'\nimport { useEffect } from 'react'\nimport { Alert, Button, Col, Row, Spinner } from 'react-bootstrap'\nimport { useMutation } from \"react-query\"\nimport useGetSingleQuery from \"../../hooks/useGetSingleQuery\"\nimport { InputField } from '../../shared-components/InputFeild'\nimport IsLoading from \"../../shared-components/isLoading\"\nimport { ICreateUpdateForm } from \"../../types/interface\"\nimport API from \"../../utils/API\"\nimport { queryClient } from \"../../utils/queryClient\"\n\n\nconst key = \"plans\"\n\n\nconst createUpdataCoupons = ({ formdata, id }: { formdata: any, id: string }) => {\n    if (!id) {\n        return API.post(`${key}`, formdata, {\n            headers: { \"Content-Type\": \"applicatioin/json\" },\n\n        })\n    }\n\n    return API.post(`${key}/${id}`, formdata, {\n        headers: { \"Content-Type\": \"application/json\" },\n\n    })\n}\n\nconst CouponCreateUpdateForm = ({ id = \"\" }: ICreateUpdateForm) => {\n\n\n    useEffect(() => {\n        bsCustomFileInput.init()\n    }, [])\n    const { data, isLoading: dataLoading } = useGetSingleQuery({ id, key })\n    const { mutate, isLoading, error, status } = useMutation(createUpdataCoupons, {\n        onSuccess: () => {\n            setTimeout(() =>\n                queryClient.invalidateQueries(key)\n                , 500)\n        }\n    })\n\n\n\n    const apiData = data && (data as any);\n\n    console.log(\"apiData\", apiData)\n\n\n\n\n    if (dataLoading)\n        return <IsLoading />\n\n\n    return (\n        <Row className=\"px-3 rounded\">\n            <Col className=\" box-shadow pb-3 mx-auto\">\n\n                <Formik\n                    initialValues={{ name: apiData ? apiData.name : \"\", description: apiData ? apiData.description : \"\", price: apiData ? apiData.price : \"\" }}\n                    onSubmit={(values) => {\n\n                        // console.log(\"values\", values)\n\n                        mutate({ formdata: values, id })\n                    }}>\n                    {({ setFieldValue }) => (\n                        <Form>\n                            <h1 className=\"text-primary text-center my-3\"><b>{id ? \"Update Plan \" : \"Create Plan\"}</b></h1>\n                            {status === \"success\" &&\n                                <Alert variant=\"success\">{id ? \"Plan updated successfully\" : \"Plan created successfully\"}</Alert>\n                            }\n                            {error &&\n                                <Alert variant=\"danger\">{(error as Error).message}</Alert>\n                            }\n                            <div className=\"form-container  py-2 \">\n                                <InputField\n                                    name=\"name\"\n                                    placeholder=\"Name\"\n                                    label=\"Name\"\n                                    required\n                                />\n\n                                {\n                                    !id &&\n                                    <InputField type=\"number\" name=\"price\" placeholder=\"Price\" label=\"Price\" required />\n                                }\n                                {\n                                    !id &&\n                                    <InputField name=\"description\" placeholder=\"Description\" label=\"Descrition\" as=\"textarea\" required />\n                                }\n\n                            </div>\n                            <Row className=\"d-flex justify-content-center\">\n                                <Col md=\"6\">\n                                    <Button type=\"submit\" disabled={isLoading} className=\"w-100\">\n                                        {isLoading ? <Spinner animation=\"border\" size=\"sm\" /> : \"Submit\"}\n                                    </Button>\n                                </Col>\n                            </Row>\n                        </Form>\n\n                    )}\n                </Formik>\n\n            </Col>\n        </Row>\n    )\n}\n\nexport default CouponCreateUpdateForm\n","import { useMemo, useState } from \"react\"\nimport { Button, Container, Modal, Spinner } from \"react-bootstrap\"\nimport { AiFillDelete, AiFillEdit, AiFillPlusSquare } from \"react-icons/ai\"\nimport { BiArrowFromRight } from \"react-icons/bi\"\nimport { useMutation, useQuery } from \"react-query\"\nimport { Cell } from \"react-table\"\nimport useToggle from \"../../hooks/useToggle\"\nimport IsLoading from \"../../shared-components/isLoading\"\nimport TablePagination from \"../../shared-components/Pagination\"\nimport ReactTable from \"../../shared-components/ReactTable\"\nimport API from \"../../utils/API\"\nimport { secondaryColor } from \"../../utils/constants\"\nimport { queryClient } from \"../../utils/queryClient\"\nimport { showErrorToast } from \"../../utils/showErrorToast\"\nimport UpdateCreateForm from \"./PlansCreateUpdateForm\"\n\n\nconst key = \"plans\"\n\n\n\nconst deletePlan = (id: string) => {\n\n    return API.delete(`${key}/${id}`, {\n        headers: { \"Content-Type\": \"multipart/form-data\" },\n\n    })\n\n\n}\n\nconst Plans = () => {\n    // const { data: brands } = useQuery(\"brands\")\n    const { setStatusCreate, setStatusDefault, status, setStatusEdit } = useToggle()\n    const [selectedRowId, setSelectedRowId] = useState<string>(\"\")\n    const [page, setPage] = useState<number>(1)\n    const [deletePopup, setDeletePopup] = useState(false)\n    const { data, isLoading, isFetching } = useQuery([key, page])\n\n\n    const { mutate, isLoading: isDeleteLoading } = useMutation(deletePlan, {\n        onSuccess: () => {\n\n            queryClient.invalidateQueries(key)\n            setDeletePopup(false)\n        },\n        onError: () => {\n\n            showErrorToast(\"Something went wrong deleteing the records\")\n        }\n    })\n\n    const columns = useMemo(\n        () => [\n            {\n                Header: '#Id',\n                accessor: 'id',  //accessor is the \"key\" in the data\n            },\n\n            {\n                Header: 'Name',\n                accessor: 'name',\n            },\n\n            {\n                Header: 'Description',\n                accessor: 'description'\n            },\n            {\n                Header: 'Price',\n                accessor: 'price',\n            },\n            {\n                Header: 'Is Active',\n                accessor: 'is_active',\n                Cell: (data: Cell) => {\n                    return (\n                        <p>{data.row.values.is_active === 0 ? \"No\" : \"Yes\"}</p>\n                    )\n                }\n            },\n            {\n                Header: 'Is Popular',\n                accessor: 'is_popular',\n                Cell: (data: Cell) => {\n                    return (\n                        <p>{data.row.values.is_popular === 0 ? \"No\" : \"Yes\"}</p>\n                    )\n                }\n            },\n            {\n                Header: 'Actions',\n                Cell: (data: Cell) => {\n\n                    return (\n                        <div className=\"d-flex\">\n                            <button onClick={() => {\n                                setSelectedRowId(data.row.values.id)\n                                setStatusEdit()\n                            }}>\n                                <AiFillEdit color={secondaryColor} size={24} />\n                            </button>\n                            <button className=\"ml-2\" onClick={() => {\n                                setSelectedRowId(data.row.values.id)\n                                setDeletePopup(true)\n                            }}>\n                                <AiFillDelete color=\"red\" size={24} />\n                            </button>\n                        </div>\n                    )\n                }\n            }\n        ],\n        []\n    )\n\n\n\n\n\n    return (\n        <>\n            <Container fluid className=\"component-wrapper px-0 py-2\">\n                <Container fluid className=\"d-flex justify-content-between py-2\">\n                    <h2 className=\"text-primary font-weight-bold\">Plans</h2>\n                    {\n                        status !== \"default\" ?\n                            <Button variant=\"primary\" onClick={setStatusDefault}  >\n                                <div className=\"text-secondary\">\n                                    <BiArrowFromRight size={25} /> <b>Back</b>\n                                </div>\n                            </Button> :\n                            <Button variant=\"primary\" onClick={setStatusCreate}>\n                                <div className=\"text-secondary\">\n\n                                    <AiFillPlusSquare size={24} /> <b>Create</b>\n                                </div>\n                            </Button>\n                    }\n\n                </Container>\n\n                <Container fluid className=\"h-100 p-0\">\n\n                    {\n                        status === \"creating\" &&\n                        <Container fluid className=\"mt-2 py-4\">\n                            <UpdateCreateForm />\n                        </Container>\n                    }\n\n                    {\n                        status === \"editing\" &&\n                        <Container fluid className=\"mt-2 py-4\">\n                            <UpdateCreateForm id={selectedRowId} />\n                        </Container>\n                    }\n\n                    {\n                        (status === \"default\") &&\n                        <>\n                            {\n                                (isLoading || isFetching) ?\n                                    <IsLoading /> :\n\n\n                                    <>\n                                        <ReactTable data={(data as any).data} columns={columns} />\n                                        {\n                                            (data as any).data.length > 0 ?\n                                                <TablePagination\n                                                    currentPage={(data as any).current_page}\n                                                    lastPage={(data as any).last_page}\n                                                    setPage={setPage}\n                                                    hasNextPage={!!(data as any).next_page_url}\n                                                    hasPrevPage={!!(data as any).prev_page_url}\n                                                />\n                                                : null\n                                        }  </>\n                            }\n                        </>\n\n                    }\n\n                </Container>\n            </Container>\n            <Modal show={deletePopup} onHide={() => setDeletePopup(false)}>\n                <Modal.Header closeButton>\n                    <Modal.Title>Are you sure?</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>Do you really want to delete this record? This process cannot be undone</Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"bg-light\" onClick={() => setDeletePopup(false)}>\n                        Close\n          </Button>\n                    <Button variant=\"danger\" onClick={() => {\n\n                        mutate(selectedRowId)\n                    }}>\n                        {\n                            isDeleteLoading ?\n                                <Spinner animation=\"border\" size=\"sm\" /> :\n                                \"Delete\"\n                        }\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n        </>\n    )\n}\n\nexport default Plans\n","import axios from \"axios\"\nimport bsCustomFileInput from \"bs-custom-file-input\"\nimport { Form, Formik } from 'formik'\nimport { useEffect } from 'react'\nimport { Alert, Button, Col, Row, Spinner } from 'react-bootstrap'\nimport { useMutation, useQuery } from \"react-query\"\nimport useGetSingleQuery from \"../../hooks/useGetSingleQuery\"\nimport { InputField } from '../../shared-components/InputFeild'\nimport IsLoading from \"../../shared-components/isLoading\"\nimport { ICreateUpdateForm } from \"../../types/interface\"\nimport API from \"../../utils/API\"\nimport { adminApiBaseUrl } from \"../../utils/constants\"\nimport { queryClient } from \"../../utils/queryClient\"\n\n\nconst key = \"services\"\n\n\nconst createUpdataServices = ({ formdata, id }: { formdata: any, id: string }) => {\n    if (!id) {\n        return API.post(`${key}`, formdata, {\n            headers: { \"Content-Type\": \"applicatioin/json\" },\n\n        })\n    }\n\n    return API.post(`${key}/${id}`, formdata, {\n        headers: { \"Content-Type\": \"application/json\" },\n\n    })\n}\n\nconst ServicesCreateUpdateForm = ({ id = \"\" }: ICreateUpdateForm) => {\n    console.log(\"id\", id)\n    useEffect(() => {\n        bsCustomFileInput.init()\n    }, [])\n    const { data, isLoading: dataLoading } = useGetSingleQuery({ id, key })\n    const { data: categories, isLoading: isCategoriesLoading } = useQuery('categories')\n    const { mutate, isLoading, error, status } = useMutation(createUpdataServices, {\n        onSuccess: () => {\n            setTimeout(() =>\n                queryClient.invalidateQueries(key)\n                , 500)\n        }\n    })\n\n\n\n\n\n    const apiData = data && (data as any);\n\n    console.log(\"apiData\", apiData)\n\n\n\n\n    if (dataLoading)\n        return <IsLoading />\n\n\n    return (\n        <Row className=\"px-3 rounded\">\n            <Col className=\" box-shadow mx-auto pb-3\">\n\n                <Formik\n                    initialValues={{ name: apiData ? apiData.name : \"\", url: apiData ? apiData.url : \"\", price: apiData ? apiData.price : \"\", category_id: \"\" }}\n                    onSubmit={(values) => {\n\n                        // console.log(\"values\", values)\n\n                        mutate({ formdata: values, id })\n                    }}>\n                    {({ setFieldValue }) => (\n                        <Form>\n                            <h1 className=\"text-primary my-3 text-center\"><b>{id ? \"Update Services \" : \"Create Service\"}</b></h1>\n                            {status === \"success\" &&\n                                <Alert variant=\"success\">{id ? \"Service updated successfully\" : \"Service created successfully\"}</Alert>\n                            }\n                            {error &&\n                                <Alert variant=\"danger\">{(error as Error).message}</Alert>\n                            }\n                            <div className=\"form-container  py-2 \">\n                                <InputField\n                                    name=\"name\"\n                                    placeholder=\"Name\"\n                                    label=\"Name\"\n                                    required\n                                />\n\n                                {\n                                    !id &&\n                                    <InputField name=\"url\" placeholder=\"Url\" label=\"Url\" required />\n                                }\n                                {\n                                    !id &&\n                                    <InputField name=\"price\" placeholder=\"Price\" label=\"Price\" type=\"number\" />\n                                }\n                                {\n                                    !id &&\n                                    <InputField name=\"category_id\" placeholder=\"Category\" label=\"Choose Category\" as=\"select\" selectData={!isCategoriesLoading && (categories as any).data} />\n                                }\n                                {\n                                    !id &&\n                                    <InputField name=\"details\" placeholder=\"Details\" label=\"Details\" as=\"textarea\" />\n                                }\n                            </div>\n                            <Row className=\"d-flex justify-content-center\">\n                                <Col md=\"6\">\n                                    <Button type=\"submit\" disabled={isLoading} className=\"w-100\">\n                                        {isLoading ? <Spinner animation=\"border\" size=\"sm\" /> : \"Submit\"}\n                                    </Button>\n                                </Col>\n                            </Row>\n                        </Form>\n\n                    )}\n                </Formik>\n\n            </Col>\n        </Row>\n    )\n}\n\nexport default ServicesCreateUpdateForm\n","import axios from \"axios\"\nimport { useMemo, useState } from \"react\"\nimport { Button, Container, Modal, Spinner } from \"react-bootstrap\"\nimport { AiFillDelete, AiFillEdit, AiFillPlusSquare } from \"react-icons/ai\"\nimport { BiArrowFromRight } from \"react-icons/bi\"\nimport { useMutation, useQuery } from \"react-query\"\nimport { Cell } from \"react-table\"\nimport useToggle from \"../../hooks/useToggle\"\nimport IsLoading from \"../../shared-components/isLoading\"\nimport TablePagination from \"../../shared-components/Pagination\"\nimport ReactTable from \"../../shared-components/ReactTable\"\nimport API from \"../../utils/API\"\nimport { adminApiBaseUrl, secondaryColor } from \"../../utils/constants\"\nimport { queryClient } from \"../../utils/queryClient\"\nimport { showErrorToast } from \"../../utils/showErrorToast\"\nimport UpdateCreateForm from \"./ServiciesCreateUpdateForm\"\n\n\nconst key = \"services\"\n\n\n\nconst deleteService = (id: string) => {\n\n    return API.delete(`${key}/${id}`, {\n        headers: { \"Content-Type\": \"multipart/form-data\" },\n\n    })\n\n\n}\n\nconst Services = () => {\n    // const { data: brands } = useQuery(\"brands\")\n    const { setStatusCreate, setStatusDefault, status, setStatusEdit } = useToggle()\n    const [selectedRowId, setSelectedRowId] = useState<string>(\"\")\n    const [page, setPage] = useState<number>(1)\n    const [deletePopup, setDeletePopup] = useState(false)\n    const { data, isLoading, isFetching } = useQuery([key, page])\n\n\n    const { mutate, isLoading: isDeleteLoading } = useMutation(deleteService, {\n        onSuccess: () => {\n\n            queryClient.invalidateQueries(key)\n            setDeletePopup(false)\n        },\n        onError: () => {\n\n            showErrorToast(\"Something went wrong deleteing the records\")\n        }\n    })\n\n    const columns = useMemo(\n        () => [\n            {\n                Header: '#Id',\n                accessor: 'id',  //accessor is the \"key\" in the data\n            },\n\n            {\n                Header: 'Name',\n                accessor: 'name',\n            },\n\n            {\n                Header: 'Url',\n                accessor: 'url',\n            },\n            {\n                Header: 'Details',\n                accessor: 'details'\n            },\n            {\n                Header: 'Category Id',\n                accessor: 'category_id',\n                // Cell: (data: Cell) =>\n                //     brands ? (brands as any).data.find((brand: any) => brand.id === data.row.values.brand_id).name : data.row.values.brand_id\n\n\n            },\n            {\n                Header: 'Price',\n                accessor: 'price',\n            },\n            {\n                Header: 'Actions',\n                Cell: (data: Cell) => {\n\n                    return (\n                        <div className=\"d-flex\">\n                            <button onClick={() => {\n                                setSelectedRowId(data.row.values.id)\n                                setStatusEdit()\n                            }}>\n                                <AiFillEdit color={secondaryColor} size={24} />\n                            </button>\n                            <button className=\"ml-2\" onClick={() => {\n                                setSelectedRowId(data.row.values.id)\n                                setDeletePopup(true)\n                            }}>\n                                <AiFillDelete color=\"red\" size={24} />\n                            </button>\n                        </div>\n                    )\n                }\n            }\n        ],\n        []\n    )\n\n\n\n\n\n    return (\n        <>\n            <Container fluid className=\"component-wrapper px-0 py-2\">\n                <Container fluid className=\"d-flex justify-content-between py-2\">\n                    <h2 className=\"text-primary font-weight-bold\">Services</h2>\n                    {\n                        status !== \"default\" ?\n                            <Button variant=\"primary\" onClick={setStatusDefault}  >\n                                <div className=\"text-secondary\">\n                                    <BiArrowFromRight size={25} /> <b>Back</b>\n                                </div>\n                            </Button> :\n                            <Button variant=\"primary\" onClick={setStatusCreate}>\n                                <div className=\"text-secondary\">\n\n                                    <AiFillPlusSquare size={24} /> <b>Create</b>\n                                </div>\n                            </Button>\n                    }\n\n                </Container>\n\n                <Container fluid className=\"h-100 p-0\">\n\n                    {\n                        status === \"creating\" &&\n                        <Container fluid className=\"mt-2 py-4\">\n                            <UpdateCreateForm />\n                        </Container>\n                    }\n\n                    {\n                        status === \"editing\" &&\n                        <Container fluid className=\"mt-2 py-4\">\n                            <UpdateCreateForm id={selectedRowId} />\n                        </Container>\n                    }\n\n                    {\n                        (status === \"default\") &&\n                        <>\n                            {\n                                (isLoading || isFetching) ?\n                                    <IsLoading /> :\n\n\n                                    <>\n                                        <ReactTable data={(data as any).data} columns={columns} />\n                                        {\n                                            (data as any).data.length > 0 ?\n                                                <TablePagination\n                                                    currentPage={(data as any).current_page}\n                                                    lastPage={(data as any).last_page}\n                                                    setPage={setPage}\n                                                    hasNextPage={!!(data as any).next_page_url}\n                                                    hasPrevPage={!!(data as any).prev_page_url}\n                                                />\n                                                : null\n                                        }  </>\n                            }\n                        </>\n\n                    }\n\n                </Container>\n            </Container>\n            <Modal show={deletePopup} onHide={() => setDeletePopup(false)}>\n                <Modal.Header closeButton>\n                    <Modal.Title>Are you sure?</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>Do you really want to delete this record? This process cannot be undone</Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"bg-light\" onClick={() => setDeletePopup(false)}>\n                        Close\n          </Button>\n                    <Button variant=\"danger\" onClick={() => {\n\n                        mutate(selectedRowId)\n                    }}>\n                        {\n                            isDeleteLoading ?\n                                <Spinner animation=\"border\" size=\"sm\" /> :\n                                \"Delete\"\n                        }\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n        </>\n    )\n}\n\nexport default Services\n","export default __webpack_public_path__ + \"static/media/profile.aba28314.svg\";","import create from 'zustand'\nimport { persist, combine } from 'zustand/middleware'\nimport { User } from '../types/interface'\n\n\n\nlet store = combine(\n    { user: null as User | null },\n    (set) => ({\n        setUser: (user: any) => set((state) => ({ user: user })),\n        removeUser: () => set((state) => ({ user: null })),\n    })\n)\n\nstore = persist(store, { name: \"user\" })\n\nconst useUserProfileStore = create(store)\n\nexport default useUserProfileStore;","import React, { useContext } from \"react\";\nimport { Button, Container, Dropdown } from \"react-bootstrap\";\nimport { BiMenuAltLeft } from \"react-icons/bi\";\nimport { BsBell } from \"react-icons/bs\";\nimport { IsDesktopContext } from \"../context/IsDesktopContext\";\nimport Logo from \"../shared-components/Logo\";\nimport { INavBar } from \"../types/interface\";\nimport { primaryColor } from \"../utils/constants\";\nimport profile from \"../assets/profile.svg\";\nimport useTokenStore from \"../hooks/useTokenStore\";\nimport useUserProfileStore from \"../hooks/useUserProfileStore\";\n\nconst TopBar = ({ isNavOpen, setIsNavOpen }: INavBar) => {\n  const isDesktop = useContext(IsDesktopContext);\n  const removeToken = useTokenStore((state) => state.removeToken);\n  const removeUser = useUserProfileStore((state) => state.removeUser);\n  const openNavBar = () => {\n    if (setIsNavOpen) {\n      setIsNavOpen(true);\n    }\n  };\n\n  return (\n    <Container\n      fluid\n      className=\"top-bar d-flex align-items-center justify-content-between w-100\"\n    >\n      {!isDesktop ? (\n        <div className=\"menu-hamburger\">\n          {!isNavOpen ? (\n            <BiMenuAltLeft\n              size={32}\n              onClick={openNavBar}\n              color={primaryColor}\n            />\n          ) : null}\n        </div>\n      ) : null}\n\n      <Logo />\n\n      <div\n        className={\n          isDesktop\n            ? \"d-flex align-items-center ml-auto\"\n            : \"d-flex align-items-center\"\n        }\n      >\n        <div className=\"notification\">\n          <BsBell size={24} />\n          <div className=\"circle bg-primary text-secondary d-flex  justify-content-center\">\n            <p>\n              <b>1</b>\n            </p>\n          </div>\n        </div>\n\n        {/* <button>\n                        <img src={profile} alt=\"profile\" />\n                    </button> */}\n        <Dropdown className=\"ml-4\">\n          <Dropdown.Toggle\n            id=\"dropdown-basic\"\n            className=\"filter-button bg-transparent border-0 text-primary\"\n          >\n            <img src={profile} alt=\"profile\" className=\"profile\" />\n          </Dropdown.Toggle>\n\n          <Dropdown.Menu>\n            <Dropdown.Item\n              onClick={() => {\n                removeUser();\n                removeToken();\n              }}\n            >\n              Sign Out\n            </Dropdown.Item>\n          </Dropdown.Menu>\n        </Dropdown>\n      </div>\n    </Container>\n  );\n};\n\nexport default TopBar;\n","import bsCustomFileInput from \"bs-custom-file-input\"\nimport { Form, Formik } from 'formik'\nimport { useEffect } from 'react'\nimport { Alert, Button, Col, Row, Spinner } from 'react-bootstrap'\nimport { useMutation } from \"react-query\"\nimport useGetSingleQuery from \"../../hooks/useGetSingleQuery\"\nimport { InputField } from '../../shared-components/InputFeild'\nimport IsLoading from \"../../shared-components/isLoading\"\nimport { ICreateUpdateForm } from \"../../types/interface\"\nimport API from \"../../utils/API\"\nimport { queryClient } from \"../../utils/queryClient\"\n\n\nconst key = \"users\"\n\n\n\nconst createUpdateUser = ({ formdata, id }: { formdata: { name: any }, id: string }) => {\n    if (!id) {\n        return API.post(`${key}`, formdata, {\n            headers: { \"Content-Type\": \"application/json\" },\n\n        })\n    }\n\n    return API.post(`${key}/${id}`, formdata, {\n        headers: { \"Content-Type\": \"application/json\" },\n\n    })\n}\n\nconst CategoriesCreateUpdateForm = ({ id = \"\" }: ICreateUpdateForm) => {\n\n\n    useEffect(() => {\n        bsCustomFileInput.init()\n    }, [])\n    const { data, isLoading: dataLoading } = useGetSingleQuery({ id, key })\n    const { mutate, isLoading, error, status } = useMutation(createUpdateUser, {\n        onSuccess: () => {\n            setTimeout(() =>\n                queryClient.invalidateQueries(key)\n                , 500)\n        }\n    })\n\n\n\n    const apiData = data && (data as any);\n\n\n\n\n\n\n    if (dataLoading)\n        return <IsLoading />\n\n\n    return (\n        <Row className=\"px-3 rounded\">\n            <Col className=\" box-shadow py-3 mx-auto\">\n\n                <Formik\n                    initialValues={{ name: apiData ? apiData.name : \"\", phone: apiData ? apiData.phone : \"\", email: apiData ? apiData.email : \"\" }}\n                    onSubmit={(values) => {\n\n                        console.log(values)\n                        mutate({ formdata: values, id })\n                    }}>\n                    {() => (\n                        <Form className=\"w-100\">\n                            <h1 className=\"text-primary text-center my-3\"><b>{id ? \"Update User\" : \"Create User\"}</b></h1>\n                            {status === \"success\" &&\n                                <Alert variant=\"success\">{id ? \"User updated successfully\" : \"User created successfully\"}</Alert>\n                            }\n                            {error &&\n                                <Alert variant=\"danger\">{(error as Error).message}</Alert>\n                            }\n\n                            <div className=\"form-container py-2\">\n                                <InputField\n                                    name=\"name\"\n                                    placeholder=\"Name\"\n                                    label=\"Name\"\n                                    required\n                                />\n                                <InputField\n                                    name=\"phone\"\n                                    placeholder=\"phone\"\n                                    label=\"Phone\"\n                                    required\n                                />\n                                <InputField\n                                    name=\"email\"\n                                    placeholder=\"Email\"\n                                    label=\"Email\"\n                                    required\n                                />\n\n\n                            </div>\n                            <Row className=\"d-flex justify-content-center\">\n                                <Col md=\"6\">\n                                    <Button type=\"submit\" disabled={isLoading} className=\"w-100\">\n                                        {isLoading ? <Spinner animation=\"border\" size=\"sm\" /> : \"Submit\"}\n                                    </Button>\n                                </Col>\n                            </Row>\n                        </Form>\n\n                    )}\n                </Formik>\n\n            </Col>\n        </Row>\n    )\n}\n\nexport default CategoriesCreateUpdateForm\n","import { useMemo, useState } from \"react\"\nimport { Button, Container, Modal, Spinner } from \"react-bootstrap\"\nimport { AiFillDelete, AiFillEdit, AiFillPlusSquare } from \"react-icons/ai\"\nimport { BiArrowFromRight } from \"react-icons/bi\"\nimport { ImBlocked } from \"react-icons/im\"\nimport { useMutation, useQuery } from \"react-query\"\nimport { Cell } from \"react-table\"\nimport useToggle from \"../../hooks/useToggle\"\nimport IsLoading from \"../../shared-components/isLoading\"\nimport TablePagination from \"../../shared-components/Pagination\"\nimport ReactTable from \"../../shared-components/ReactTable\"\nimport API from \"../../utils/API\"\nimport { secondaryColor } from \"../../utils/constants\"\nimport { queryClient } from \"../../utils/queryClient\"\nimport { showErrorToast } from \"../../utils/showErrorToast\"\nimport UpdateCreateForm from \"./UsersCreateUpdateForm\"\n\n\nconst key = \"users\"\n\n\n\nconst disableUser = (id: string) => {\n\n    return API.delete(`${key}/${id}`, {\n        headers: { \"Content-Type\": \"multipart/form-data\" },\n\n    })\n\n\n}\n\nconst Users = () => {\n    // const { data: brands } = useQuery(\"brands\")\n    const { setStatusCreate, setStatusDefault, status, setStatusEdit } = useToggle()\n    const [selectedRowId, setSelectedRowId] = useState<string>(\"\")\n    const [page, setPage] = useState<number>(1)\n    const [deletePopup, setDeletePopup] = useState(false)\n    const { data, isLoading, isFetching } = useQuery([key, page])\n\n\n    const { mutate, isLoading: isDeleteLoading } = useMutation(disableUser, {\n        onSuccess: () => {\n\n            queryClient.invalidateQueries(key)\n            setDeletePopup(false)\n        },\n        onError: () => {\n\n            showErrorToast(\"Something went wrong deleteing the records\")\n        }\n    })\n\n    const columns = useMemo(\n        () => [\n            {\n                Header: '#Id',\n                accessor: 'id',  //accessor is the \"key\" in the data\n            },\n\n            {\n                Header: 'Name',\n                accessor: 'name',\n            },\n            {\n                Header: 'Phone',\n                accessor: 'phone',\n            },\n            {\n                Header: 'Email',\n                accessor: 'email',\n            },\n            {\n                Header: 'Disabled',\n                accessor: \"disabled\",\n                Cell: (data: Cell) => {\n                    console.log(data)\n                    return (\n                        <p>{data.row.values.disabled === 0 ? \"No\" : \"Yes\"}</p>\n                    )\n                }\n\n            },\n            {\n                Header: 'Actions',\n                Cell: (data: Cell) => {\n\n                    return (\n                        <div className=\"d-flex\">\n                            <button onClick={() => {\n                                setSelectedRowId(data.row.values.id)\n                                setStatusEdit()\n                            }}>\n                                <AiFillEdit color={secondaryColor} size={24} />\n                            </button>\n                            <button className=\"ml-2\" onClick={() => {\n                                setSelectedRowId(data.row.values.id)\n                                setDeletePopup(true)\n                            }}>\n                                <ImBlocked color=\"red\" size={24} />\n                            </button>\n                        </div>\n                    )\n                }\n            }\n        ],\n        []\n    )\n\n\n\n\n\n    return (\n        <>\n            <Container fluid className=\"component-wrapper px-0 py-2\">\n                <Container fluid className=\"d-flex justify-content-between py-2\">\n                    <h2 className=\"text-primary font-weight-bold\">Categories</h2>\n                    {\n                        status !== \"default\" ?\n                            <Button variant=\"primary\" onClick={setStatusDefault}  >\n                                <div className=\"text-secondary\">\n                                    <BiArrowFromRight size={25} /> <b>Back</b>\n                                </div>\n                            </Button> :\n                            <Button variant=\"primary\" onClick={setStatusCreate}>\n                                <div className=\"text-secondary\">\n\n                                    <AiFillPlusSquare size={24} /> <b>Create</b>\n                                </div>\n                            </Button>\n                    }\n\n                </Container>\n\n                <Container fluid className=\"h-100 p-0\">\n\n                    {\n                        status === \"creating\" &&\n                        <Container fluid className=\"mt-2 py-4\">\n                            <UpdateCreateForm />\n                        </Container>\n                    }\n\n                    {\n                        status === \"editing\" &&\n                        <Container fluid className=\"mt-2 py-4\">\n                            <UpdateCreateForm id={selectedRowId} />\n                        </Container>\n                    }\n\n                    {\n                        (status === \"default\") &&\n                        <>\n                            {\n                                (isLoading || isFetching) ?\n                                    <IsLoading /> :\n\n\n                                    <>\n                                        <ReactTable data={(data as any).data} columns={columns} />\n                                        {\n                                            (data as any).data.length > 0 ?\n                                                <TablePagination\n                                                    currentPage={(data as any).current_page}\n                                                    lastPage={(data as any).last_page}\n                                                    setPage={setPage}\n                                                    hasNextPage={!!(data as any).next_page_url}\n                                                    hasPrevPage={!!(data as any).prev_page_url}\n                                                />\n                                                : null\n                                        }  </>\n                            }\n                        </>\n\n                    }\n\n                </Container>\n            </Container>\n            <Modal show={deletePopup} onHide={() => setDeletePopup(false)}>\n                <Modal.Header closeButton>\n                    <Modal.Title>Are you sure?</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>Do you really want to disable this user?</Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"bg-light\" onClick={() => setDeletePopup(false)}>\n                        Close\n          </Button>\n                    <Button variant=\"danger\" onClick={() => {\n\n                        mutate(selectedRowId)\n                    }}>\n                        {\n                            isDeleteLoading ?\n                                <Spinner animation=\"border\" size=\"sm\" /> :\n                                \"Delete\"\n                        }\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n        </>\n    )\n}\n\nexport default Users\n","import axios from 'axios'\nimport { Form, Formik } from 'formik'\nimport { useEffect } from 'react'\nimport { Alert, Button, Container, Spinner } from 'react-bootstrap'\nimport { useMutation } from 'react-query'\nimport { useHistory, useParams } from 'react-router'\nimport * as Yup from \"yup\"\nimport useTokenStore from '../hooks/useTokenStore'\nimport useUserProfileStore from '../hooks/useUserProfileStore'\nimport { InputField } from '../shared-components/InputFeild'\nimport Logo from '../shared-components/Logo'\nimport API from '../utils/API'\nimport { appApiBaseUrl } from '../utils/constants'\n\ninterface Props {\n\n}\n\nconst VerifySchema = Yup.object().shape({\n    otp: Yup.string().max(4).min(4).required(\"Otp is required\")\n})\n\n\nconst verifyOtp = (formData: FormData) => {\n    return API.post(`auth/verify-otp`, formData, {\n        headers: { \"Content-Type\": \"multipart/form-data\" },\n\n    })\n}\n\nconst VerifyOtp = (props: Props) => {\n\n    const params: { id: string, otp: string } = useParams()\n    const history = useHistory()\n    const setToken = useTokenStore(state => state.setToken)\n    const setUser = useUserProfileStore(state => state.setUser)\n\n    const { mutate, data, isLoading, error } = useMutation(verifyOtp, {\n        onSuccess: (data) => {\n            setToken(data.data.token)\n            setUser(data.data.user)\n            history.push(\"/\")\n        }\n    })\n\n\n    return (\n        <Container fluid className=\"login-page\" >\n            <Formik initialValues={{ otp: params.otp || \"\" }} onSubmit={values => {\n\n                const formData = new FormData()\n                formData.append(\"phone\", params.id)\n                formData.append(\"otp\", values.otp)\n\n                mutate(formData)\n\n\n            }}\n                validationSchema={VerifySchema}\n            >\n\n                {\n                    ({ errors }) => {\n\n                        return (\n                            <Form >\n                                <div className=\"d-flex flex-column align-items-center box-shadow px-3 py-5 rounded\">\n\n                                    <div className=\"logo-container\">\n                                        <Logo />\n                                    </div>\n\n\n                                    <h1 className=\"text-primary my-3\"><b>Verify OTP</b></h1>\n                                    <p>Please enter the code sent on your mobile number</p>\n                                    {\n                                        error &&\n                                        <Alert variant=\"danger\">{(error as any).response.data.error}</Alert>\n                                    }\n\n                                    <InputField name=\"otp\" placeholder=\"Enter the Otp\" label=\"Verify Otp\" error={errors.otp} />\n                                    <Button variant=\"primary\" type=\"submit\" className=\"my-2\">\n                                        {\n                                            isLoading ?\n                                                <Spinner animation=\"border\" variant=\"secondary\" size=\"sm\" /> :\n                                                <div className=\"text-secondary\">\n                                                    <b>Verify OTP</b>\n                                                </div>\n                                        }\n                                    </Button>\n                                </div>\n                            </Form>\n                        )\n                    }\n                }\n            </Formik>\n        </Container>\n    )\n}\n\nexport default VerifyOtp\n","import React from \"react\";\nimport { AreaChart } from \"recharts\";\nimport { BarChart, Bar } from \"recharts\";\nimport { Area } from \"recharts\";\nimport { ResponsiveContainer } from \"recharts\";\nimport {\n    LineChart,\n    Line,\n    XAxis,\n    YAxis,\n    CartesianGrid,\n    Tooltip,\n    Legend\n} from \"recharts\";\nimport { primaryColor, secondaryColor } from \"../../utils/constants\";\n\nconst data = [\n    {\n        name: \"Data A\",\n        data1: 4000,\n        data2: 2400,\n        data3: 2400\n    },\n    {\n        name: \"Data B\",\n        data1: 3000,\n        data2: 1398,\n        data3: 2210\n    },\n    {\n        name: \"Data C\",\n        data1: 2000,\n        data2: 9800,\n        data3: 2290\n    },\n    {\n        name: \"Data D\",\n        data1: 2780,\n        data2: 3908,\n        data3: 2000\n    },\n];\n\nconst ChartLine = () => {\n    return (\n        <ResponsiveContainer>\n            <LineChart width={\"100%\"} height={300} data={data} margin={{ top: 10, right: 30, left: 0, bottom: 0 }}>\n                {/* <CartesianGrid str /> */}\n                <XAxis dataKey=\"name\" tickLine={false} padding={{ left: 20, right: 20 }} />\n                <YAxis tickLine={false} axisLine={false} />\n                <Tooltip />\n                <Legend />\n                <Line\n                    type=\"monotone\"\n                    dataKey=\"data2\"\n                    stroke={primaryColor}\n                    activeDot={{ r: 8 }}\n                />\n                {/* <Line type=\"monotone\" dataKey=\"data1\" stroke=\"#00ff00\" />\n                <Line type=\"monotone\" dataKey=\"data3\" stroke=\"#0000ff\" /> */}\n            </LineChart></ResponsiveContainer>\n    );\n}\n\nconst ChartArea = () => {\n    return (\n        <ResponsiveContainer>\n            <AreaChart width={\"100%\"} height={300} data={data}\n                margin={{ top: 10, right: 30, left: 0, bottom: 0 }}>\n                <defs>\n                    <linearGradient id=\"colorUv\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n                        <stop offset=\"5%\" stopColor={secondaryColor} stopOpacity={0.8} />\n                        <stop offset=\"95%\" stopColor={secondaryColor} stopOpacity={0} />\n                    </linearGradient>\n                    {/* <linearGradient id=\"colorPv\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n                        <stop offset=\"5%\" stopColor=\"#82ca9d\" stopOpacity={0.8} />\n                        <stop offset=\"95%\" stopColor=\"#82ca9d\" stopOpacity={0} />\n                    </linearGradient> */}\n                </defs>\n                <XAxis dataKey=\"name\" tickLine={false} padding={{ left: 20, right: 20 }} />\n                <YAxis tickLine={false} axisLine={false} />\n                {/* <CartesianGrid strokeDasharray=\"1 1\" /> */}\n                <Tooltip />\n                <Legend />\n                <Area type=\"monotone\" dataKey=\"data2\" stroke={secondaryColor} fillOpacity={1} fill=\"url(#colorUv)\" />\n                {/* <Area type=\"monotone\" dataKey=\"data2\" stroke=\"#82ca9d\" fillOpacity={1} fill=\"url(#colorPv)\" /> */}\n            </AreaChart></ResponsiveContainer>\n    )\n}\n\nconst ChartBar = () => {\n    return (\n        <ResponsiveContainer>\n            <BarChart width={\"100%\"} height={300} data={data}>\n                {/* <CartesianGrid strokeDasharray=\"3 3\" /> */}\n                <XAxis dataKey=\"name\" tickLine={false} padding={{ left: 20, right: 20 }} />\n                <YAxis axisLine={false} />\n                <Tooltip />\n                <Legend />\n                <Bar dataKey=\"data1\" fill={primaryColor} />\n                <Bar dataKey=\"data2\" fill={secondaryColor} />\n            </BarChart></ResponsiveContainer>\n    )\n}\nexport { ChartLine, ChartArea, ChartBar }\n","import React, { useState } from 'react'\nimport { Container, Form, Tooltip } from 'react-bootstrap'\nimport { AiFillCar, AiOutlineArrowUp } from 'react-icons/ai'\nimport { ResponsiveContainer, LineChart, XAxis, YAxis, Legend, Line } from 'recharts'\nimport { primaryColor } from '../../utils/constants'\nimport { ChartLine, ChartArea, ChartBar } from \"./Chart\"\n\ninterface Props {\n\n}\n\n\nconst Dashboard = (props: Props) => {\n    const [chartOneSelect, setChartOneSelect] = useState<string>(\"1\")\n    const [chartTwoSelect, setChartTwoSelect] = useState<string>(\"\")\n\n    console.log(chartOneSelect)\n\n    const handleChartOneChange = (e: any) => setChartOneSelect(e.target.value)\n    const handleChartTwoChange = (e: any) => setChartTwoSelect(e.target.value)\n    return (\n        <>\n            <Container fluid className=\"component-wrapper px-0 py-2\">\n                {/* <Container className=\"d-flex justify-content-between py-2 m-0\">\n                    <h2 className=\"text-primary font-weight-bold\">Dashboard</h2>\n\n                </Container> */}\n\n\n                <div className=\"dashboard-page w-100\">\n\n                    <Container fluid className=\"status-container mt-2\">\n                        <h2 className=\"text-primary font-weight-bold \">Stats</h2>\n                        <div className=\"head-row\">\n\n                            {\n                                Array.from({ length: 4 }).map((id: any) => (\n                                    <div className=\"card p-2 d-flex\" key={id}>\n                                        <div className=\"d-flex flex-column\">\n                                            <div className=\"lead\">\n                                                Total Users\n                                    </div>\n                                            <div className=\"d-flex align-items-end\">\n\n                                                <p className=\" display-4 text-primary m-0\">3050</p>\n                                                <span className=\"text-success d-flex  align-items-center mb-3 ml-auto\">\n                                                    <AiOutlineArrowUp size={24} />\n                                                    <strong>\n\n                                                        10%</strong>\n                                                </span>\n\n                                            </div>\n\n\n                                        </div>\n\n\n                                    </div>\n                                ))\n                            }\n                        </div>\n                    </Container>\n                    {/* <Container fluid className=\"d-flex justify-content-between py-2 my-1 \">\n                    <h2 className=\"text-primary font-weight-bold\">Analytics</h2>\n\n                </Container> */}\n                    <Container fluid className=\"charts-container mt-2\">\n\n                        <h2 className=\"text-primary font-weight-bold\">Analytics</h2>\n                        <div className=\"charts-row\">\n\n                            <div className=\"card \">\n                                <div className=\"chart-setting px-1 py-2 d-flex justify-content-between align-items-center\">\n                                    <h4 className=\"text-primary\">\n                                        <strong>\n                                            Bookings\n                                </strong>\n                                    </h4>\n                                    <div>\n                                        <Form.Control as=\"select\" custom onChange={handleChartOneChange} className=\"bg-transparent\">\n                                            <option value=\"1\">Option 1</option>\n                                            <option value=\"2\">Option 2</option>\n                                            <option value=\"3\">Option 3</option>\n\n                                        </Form.Control>\n                                    </div>\n\n                                </div>\n                                <div className=\" chart-container\">\n                                    <ChartLine />\n                                </div>\n                            </div>\n                            <div className=\"card \">\n                                <div className=\"chart-setting p-1 d-flex justify-content-between\">\n                                    <h4 className=\"text-primary\">\n                                        <strong>\n                                            Chart Title\n                                </strong></h4>\n                                    <div>\n                                        <Form.Control as=\"select\" custom onChange={handleChartTwoChange} className=\"bg-transparent\">\n                                            <option value=\"1\">Option 1</option>\n                                            <option value=\"2\">Option 2</option>\n                                            <option value=\"3\">Option 3</option>\n\n                                        </Form.Control>\n                                    </div>\n                                </div>\n                                <div className=\" chart-container\">\n                                    <ChartArea />\n                                </div>\n                            </div>\n                            <div className=\"card \">\n                                <div className=\"chart-setting p-1 d-flex justify-content-between\">\n                                    <h4 className=\"text-primary\">\n                                        <strong>\n                                            Chart Title\n                                </strong></h4>\n                                    <div>\n                                        <Form.Control as=\"select\" custom onChange={handleChartTwoChange} className=\"bg-transparent\">\n                                            <option value=\"1\">Option 1</option>\n                                            <option value=\"2\">Option 2</option>\n                                            <option value=\"3\">Option 3</option>\n\n                                        </Form.Control>\n                                    </div>\n                                </div>\n                                <div className=\" chart-container\">\n                                    <ChartBar />\n                                </div>\n                            </div>\n                            <div className=\"card \">\n                                <div className=\"chart-setting p-1 d-flex justify-content-between\">\n                                    <h4 className=\"text-primary\">\n                                        <strong>\n                                            Chart Title\n                                </strong></h4>\n                                    <div>\n                                        <Form.Control as=\"select\" custom onChange={handleChartTwoChange} className=\"bg-transparent\">\n                                            <option value=\"1\">Option 1</option>\n                                            <option value=\"2\">Option 2</option>\n                                            <option value=\"3\">Option 3</option>\n\n                                        </Form.Control>\n                                    </div>\n                                </div>\n                                <div className=\" chart-container\">\n\n                                    <ChartArea />\n                                </div>\n                            </div>\n\n                        </div>\n                    </Container>\n                </div>\n            </Container>\n        </>\n\n    )\n}\n\nexport default Dashboard\n","import { useMemo, useState } from 'react';\nimport { Button, Container } from 'react-bootstrap';\nimport { Cell } from 'react-table';\nimport ReactTable from '../../shared-components/ReactTable';\nimport { mockData } from '../../utils/mockData';\n\ninterface Props {\n\n}\n\n// const isActiveTab = (id: string, key: string): { variant: string, color: string } => {\n//     if (id === key)\n//         return {\n//             variant: \"primary\",\n//             color: \"text-secondary\"\n//         }\n//     else\n//         return {\n//             variant: \"light\",\n//             color: \"text-primary\"\n//         }\n// }\nconst isActiveTab = (id: string, key: string): string => {\n    const classname = \"tab-link\"\n    if (id === key)\n        return `${classname} isActive`\n    else\n        return classname\n}\n\nconst Orders = (props: Props) => {\n    const columns = useMemo(\n        () => [\n            {\n                Header: '#Id',\n                accessor: 'id',  //accessor is the \"key\" in the data\n            },\n            {\n                Header: 'Image',\n                accessor: 'imageScr',\n                Cell: (data: Cell) =>\n                    <div className=\"table-image\">\n                        <img src={data.row.values.imageScr} alt=\"name\" />\n                    </div>\n\n\n            },\n            {\n                Header: 'Name',\n                accessor: 'name',\n            },\n            {\n                Header: 'User',\n                accessor: 'created_by',\n            },\n            {\n                Header: 'Actions',\n                Cell: () => (\n                    <Button>Action</Button>\n                )\n            }\n        ],\n        []\n    )\n\n    const [key, setKey] = useState<string>(\"1\")\n\n    const displayTab = (key: string) => {\n        switch (key) {\n            case \"1\":\n                return <ReactTable data={mockData} columns={columns} />\n            case \"2\":\n                return <ReactTable data={mockData} columns={columns} />\n            case \"3\":\n                return <ReactTable data={mockData} columns={columns} />\n            case \"4\":\n                return <ReactTable data={mockData} columns={columns} />\n\n            default:\n                return <ReactTable data={mockData} columns={columns} />\n        }\n    }\n    return (\n        <Container fluid className=\"px-0 py-2\">\n            <Container className=\"d-flex justify-content-between py-2\">\n                <h2 className=\"text-primary font-weight-bold\">Orders</h2>\n\n            </Container>\n            <Container fluid>\n                <div className=\"tab-btn-row\">\n                    {/* <Button variant={isActiveTab(\"1\", key).variant} className={`${isActiveTab(\"1\", key).color}`}\n                        onClick={() => setKey(\"1\")}\n                    >All</Button>\n                    <Button variant={isActiveTab(\"2\", key).variant} className={`${isActiveTab(\"2\", key).color} `}\n                        onClick={() => setKey(\"2\")}\n                    >Ongoing</Button>\n                    <Button variant={isActiveTab(\"3\", key).variant} className={`${isActiveTab(\"3\", key).color} `}\n                        onClick={() => setKey(\"3\")}\n                    >Cancelled</Button>\n                    <Button variant={isActiveTab(\"4\", key).variant} className={`${isActiveTab(\"4\", key).color} `}\n                        onClick={() => setKey(\"4\")}\n                    >Completed</Button> */}\n\n                    <Button variant=\"light\" className={`${isActiveTab(\"1\", key)}`}\n                        onClick={() => setKey(\"1\")}\n                    >All</Button>\n\n                    <Button variant=\"light\" className={`${isActiveTab(\"2\", key)} `}\n                        onClick={() => setKey(\"2\")}\n                    >Ongoing</Button>\n                    <Button variant=\"light\" className={`${isActiveTab(\"3\", key)} `}\n                        onClick={() => setKey(\"3\")}\n                    >Cancelled</Button>\n                    <Button variant=\"light\" className={`${isActiveTab(\"4\", key)} `}\n                        onClick={() => setKey(\"4\")}\n                    >Completed</Button>\n\n                </div>\n            </Container>\n            <div className=\"mt-3 p-0\">\n                {\n                    // displaying the tabs here\n                    displayTab(key)\n                }\n\n            </div>\n\n\n\n\n        </Container>\n    )\n}\n\nexport default Orders\n","export interface AdType {\n    id: string;\n    name: string;\n}\nexport const types: Array<AdType> = [\n    { id: \"Trending\", name: \"Trending\" },\n    { id: \"Latest\", name: \"Latest\" },\n];\n","import { Field, useField } from 'formik';\nimport moment from 'moment';\nimport React from 'react'\nimport { Form } from 'react-bootstrap'\nimport DateTime from 'react-datetime';\n\n\n\ninterface Props {\n    label?: string;\n    name: string;\n    error?: string;\n    setFieldValue: (field: string, value: any, shouldValidate?: boolean | undefined) => void;\n    inputProps?: React.HTMLProps<HTMLInputElement>\n}\n\nconst DatePicker: React.FC<Props> = ({\n    label, name, error, setFieldValue, inputProps, ...props\n}) => {\n    const [field] = useField({ ...props, name });\n    return (\n        <div className=\"w-100\">\n            <Form.Group>\n                {\n                    label ?\n                        <Form.Label htmlFor={field.name}>{label}</Form.Label>\n                        : null\n                }\n                {\n\n                    <DateTime\n                        inputProps={inputProps}\n                        closeOnSelect\n                        onChange={(value: any) => {\n                            console.log(\"value\", value)\n                            if (value)\n                                setFieldValue(field.name, moment(value._d).format(\"YYYY-MM-DD hh:mm:ss\"))\n                        }}\n                    />\n                    // <Form.Control {...field} {...props} id={field.name} />\n\n                }\n                {\n                    error &&\n                    <Form.Text className=\"text-danger\">\n                        {error}\n                    </Form.Text>\n                }\n            </Form.Group>\n        </div>\n    )\n}\n\nexport default DatePicker\n","import axios from \"axios\"\nimport bsCustomFileInput from \"bs-custom-file-input\"\nimport { Form, Formik } from 'formik'\nimport { useEffect } from 'react'\nimport { Alert, Button, Col, Container, Row, Spinner } from 'react-bootstrap'\nimport { useMutation, useQuery } from \"react-query\"\nimport useGetSingleQuery from \"../../hooks/useGetSingleQuery\"\nimport { InputField } from '../../shared-components/InputFeild'\nimport IsLoading from \"../../shared-components/isLoading\"\nimport { ICreateUpdateForm } from \"../../types/interface\"\nimport API from \"../../utils/API\"\nimport { adminApiBaseUrl } from \"../../utils/constants\"\nimport { queryClient } from \"../../utils/queryClient\"\nimport { types } from \"./AdvertisementTypes\"\nimport DateTime from 'react-datetime';\nimport DatePicker from \"../../shared-components/DatePicker\"\n\n\nconst key = \"banners\"\n\nconst createUpdataAdvertisement = ({ formdata, id }: { formdata: FormData, id: string }) => {\n    if (!id) {\n        return API.post(`${key}`, formdata, {\n            headers: { \"Content-Type\": \"multipart/form-data\" },\n\n        })\n    }\n\n    return API.post(`${key}/${id}`, formdata, {\n        headers: { \"Content-Type\": \"multipart/form-data\" },\n\n    })\n}\n\nconst AdvertisementCreateUpdateForm = ({ id = \"\" }: ICreateUpdateForm) => {\n\n\n    useEffect(() => {\n        bsCustomFileInput.init()\n    }, [])\n\n    const { data, isLoading: dataLoading } = useGetSingleQuery({ id, key })\n    const { mutate, isLoading, error, status } = useMutation(createUpdataAdvertisement, {\n        onSuccess: () => {\n            setTimeout(() => {\n\n                queryClient.invalidateQueries(\"banners/list\")\n                if (id)\n                    queryClient.invalidateQueries(`${key}/${id}`)\n            }\n                , 500)\n        }\n    })\n\n\n\n\n    const apiData = data && (data as any);\n\n\n\n\n\n\n    if (dataLoading)\n        return <IsLoading />\n\n\n    return (\n        <Row className=\"px-3 rounded\">\n            <Col className=\" box-shadow mx-auto pb-3\">\n\n                <Formik\n                    initialValues={{ name: apiData ? apiData.name : \"\", deeplink: apiData ? apiData.deeplink : \"\", image: \"\", type: \"\", valid_to: \"\", valid_from: \"\" }}\n                    onSubmit={(values) => {\n                        const formdata = new FormData()\n                        formdata.append(\"name\", values.name)\n                        formdata.append(\"deeplink\", values.deeplink)\n                        if (!id) {\n                            formdata.append(\"image\", values.image)\n                            formdata.append(\"type\", values.type)\n                            formdata.append(\"valid_to\", values.valid_to)\n                            formdata.append(\"valid_from\", values.valid_from)\n\n                        }\n                        // console.log(\"values\", values)\n\n                        mutate({ formdata, id })\n                    }}>\n                    {({ setFieldValue }) => (\n                        <Form>\n                            <h1 className=\"text-primary my-3 text-center\"><b>{id ? \"Update Advertisement\" : \"Create Advertisement\"}</b></h1>\n                            {status === \"success\" &&\n                                <Alert variant=\"success\">{id ? \"Advertisement  updated successfully\" : \"Advertisement created successfully\"}</Alert>\n                            }\n                            {error &&\n                                <Alert variant=\"danger\">{(error as Error).message}</Alert>\n                            }\n                            <div className={`form-container  py-2 `}>\n                                <InputField\n                                    name=\"name\"\n                                    placeholder=\"Name\"\n                                    label=\"Name\"\n                                    required\n                                />\n\n                                <InputField name=\"deeplink\" placeholder=\"Deep Link\" label=\"Deep Link\" required />\n\n                                {\n                                    !id &&\n                                    <DatePicker name=\"valid_from\" setFieldValue={setFieldValue} label=\"Valid From\" inputProps={{ placeholder: \"Valid from\", required: true }} />\n                                }\n                                {\n                                    !id &&\n                                    <DatePicker name=\"valid_to\" setFieldValue={setFieldValue} label=\"Valid To\" inputProps={{ placeholder: \"Valid to\", required: true }} />\n                                }\n                                {\n                                    !id &&\n                                    <InputField name=\"image\" placeholder=\"image\" label=\"Image\" isFile setFieldValue={setFieldValue} />\n                                }\n                                {\n                                    !id &&\n                                    <InputField name=\"type\" placeholder=\"Advertisement type\" label=\"Choose Type\" as=\"select\" selectData={types} />\n                                }\n                            </div>\n                            <Row className=\"d-flex justify-content-center\">\n                                <Col md=\"6\">\n                                    <Button type=\"submit\" disabled={isLoading} className=\"w-100\">\n                                        {isLoading ? <Spinner animation=\"border\" size=\"sm\" /> : \"Submit\"}\n                                    </Button>\n                                </Col>\n                            </Row>\n                        </Form>\n\n                    )}\n                </Formik>\n\n            </Col>\n        </Row>\n    )\n}\n\nexport default AdvertisementCreateUpdateForm\n","import create from 'zustand'\nimport { combine } from 'zustand/middleware'\nimport { AdType, types } from './AdvertisementTypes'\n\n\nlet store = combine(\n    { type: types[0] as AdType },\n    (set) => ({\n        setCurrentType: (type: AdType) => set((state) => ({ type })),\n    })\n)\n\n\nconst useCurrentAdTypeSelectedStore = create(store)\n\nexport default useCurrentAdTypeSelectedStore","import React, { useState } from 'react'\nimport { Container, Row, Col, Card, Dropdown } from 'react-bootstrap'\nimport { AiFillEdit, AiFillDelete } from 'react-icons/ai'\nimport { BiSad } from 'react-icons/bi';\nimport { QueryFunction, useQuery } from 'react-query';\nimport IsLoading from '../../shared-components/isLoading';\nimport API from '../../utils/API';\nimport { baseUploadUrl, primaryColor, secondaryColor } from '../../utils/constants'\nimport { types } from './AdvertisementTypes';\nimport moment from 'moment';\nimport useCurrentAdTypeSelectedStore from './useCurrentAdTypeSelectedStore';\n\ninterface Props {\n    setSelectedRowId: React.Dispatch<React.SetStateAction<string>>;\n    setDeletePopup: React.Dispatch<React.SetStateAction<boolean>>;\n    setStatusEdit: () => void;\n}\nconst key = \"banners/list\"\n\n\nconst getBanners: QueryFunction = async ({ queryKey }) => {\n    const r = await API.get(`${queryKey[0]}/${(queryKey[1] as string).toLowerCase()}`);\n\n    return await r.data;\n}\n\nconst LatestAd: React.FC<Props> = ({ setDeletePopup, setStatusEdit, setSelectedRowId }) => {\n    const selectedType = useCurrentAdTypeSelectedStore(state => state.type)\n    const setSelectedType = useCurrentAdTypeSelectedStore(state => state.setCurrentType)\n    // const [selectedType, setSelectedType] = useState(types[0])\n\n    const { data, isLoading, isFetching } = useQuery<any>([key, selectedType.id], getBanners)\n\n\n    if (isLoading || isFetching)\n        return <IsLoading />\n\n\n\n    return (\n        <>\n            <Container fluid className=\" bg-light-secondary d-flex align-items-center  py-2 position-relative\">\n\n\n                <Dropdown className=\"ml-auto\">\n                    <Dropdown.Toggle id=\"dropdown-basic\" className=\"filter-button bg-transparent border-0 text-primary\">\n                        {\n                            selectedType.name\n                        }\n\n\n                    </Dropdown.Toggle>\n\n                    <Dropdown.Menu className=\"p-2\">\n                        {\n                            types.map(type => (\n                                <Dropdown.Item active={selectedType.id === type.id}\n                                    onClick={() => setSelectedType(type)}\n                                >{type.name}</Dropdown.Item>\n                            ))\n                        }\n                    </Dropdown.Menu>\n                </Dropdown>\n\n            </Container>\n            <Container fluid className=\"mt-3\">\n\n                <Row >\n                    {\n                        data.data.length > 0 ?\n                            data.data.map((ad: any) => (\n\n                                <Col md={6} className=\"mb-3\">\n                                    <Card >\n                                        <Card.Img variant=\"top\" src={`${baseUploadUrl}banners/${ad.image}`} style={{ height: \"12rem\", }} className=\"advertisement-image\" />\n                                        <Card.Body className=\"d-flex align-items-start justify-content-between\">\n                                            <div>\n                                                <Card.Title className=\"m-0 text-primary\">{ad.name}</Card.Title>\n                                                <span className=\"text-muted\">({moment(ad.valid_from).format(\"DD/MM/YY\")}-{moment(ad.valid_to).format(\"DD/MM/YY\")})</span>\n                                            </div>\n                                            <div className=\"advertisements-actions \">\n\n                                                <button onClick={() => {\n                                                    setSelectedRowId(ad.id)\n                                                    setStatusEdit()\n                                                }}>\n                                                    <AiFillEdit color={secondaryColor} size={24} />\n                                                </button>\n                                                <button className=\"ml-2\" onClick={() => {\n                                                    setSelectedRowId(ad.id)\n                                                    setDeletePopup(true)\n                                                }}>\n                                                    <AiFillDelete color=\"red\" size={24} />\n                                                </button>\n                                            </div>\n                                        </Card.Body>\n                                    </Card>\n                                </Col>\n                            )) :\n                            <Container fluid className=\"d-flex justify-content-center display-3\">\n                                <div className=\"d-flex flex-column align-items-center\">\n\n                                    <BiSad color={primaryColor} />\n                                    <span className=\"text-primary display-3\">No data found</span>\n                                </div>\n                            </Container>\n                    }\n                </Row>\n            </Container>\n        </>\n    )\n}\n\nexport default LatestAd\n","import React, { useState } from 'react'\nimport { Container, Button, Row, Col, Card, Modal, Spinner } from 'react-bootstrap'\nimport { AiFillDelete, AiFillEdit, AiFillPlusSquare } from 'react-icons/ai'\nimport { BiArrowFromRight } from 'react-icons/bi'\nimport { useMutation } from 'react-query'\nimport useToggle from '../../hooks/useToggle'\nimport API from '../../utils/API'\nimport { secondaryColor } from '../../utils/constants'\nimport { queryClient } from '../../utils/queryClient'\nimport { showErrorToast } from '../../utils/showErrorToast'\nimport UpdateCreateForm from './AdvertisementUpdateCreateForm';\nimport AdCardsContainer from './AdCardsContainer'\n\nconst deleteBanner = (id: string) => {\n\n    return API.delete(`banners/${id}`, {\n        headers: { \"Content-Type\": \"multipart/form-data\" },\n\n    })\n\n\n}\nconst Advertisements = () => {\n\n    const { setStatusCreate, setStatusDefault, status, setStatusEdit } = useToggle()\n    const [selectedRowId, setSelectedRowId] = useState<string>(\"\")\n    const [deletePopup, setDeletePopup] = useState(false)\n\n    const { mutate, isLoading: isDeleteLoading } = useMutation(deleteBanner, {\n        onSuccess: () => {\n\n            queryClient.invalidateQueries(\"banners/list\")\n            setDeletePopup(false)\n        },\n        onError: () => {\n\n            showErrorToast(\"Something went wrong deleteing the records\")\n        }\n    })\n\n\n\n    return (\n        <>\n            <Container fluid className=\"component-wrapper px-0 py-2\">\n                <Container fluid className=\"d-flex justify-content-between py-2\">\n                    <h2 className=\"text-primary font-weight-bold\">Advertisements</h2>\n                    {\n                        status !== \"default\" ?\n                            <Button variant=\"primary\" onClick={setStatusDefault}  >\n                                <div className=\"text-secondary\">\n                                    <BiArrowFromRight size={25} /> <b>Back</b>\n                                </div>\n                            </Button> :\n                            <Button variant=\"primary\" onClick={() => {\n                                setSelectedRowId(\"\")\n                                setStatusCreate()\n                            }}>\n                                <div className=\"text-secondary\">\n\n                                    <AiFillPlusSquare size={24} /> <b>Create</b>\n                                </div>\n                            </Button>\n                    }\n\n                </Container>\n\n                <Container fluid className=\"h-100 p-0\">\n\n                    {\n                        status === \"creating\" &&\n                        <Container fluid className=\"mt-2 py-4\">\n                            <UpdateCreateForm />\n                        </Container>\n                    }\n\n                    {\n                        status === \"editing\" &&\n                        <Container fluid className=\"mt-2 py-4\">\n                            <UpdateCreateForm id={selectedRowId} />\n                        </Container>\n                    }\n\n                    {\n                        (status === \"default\") &&\n\n                        <AdCardsContainer setDeletePopup={setDeletePopup} setSelectedRowId={setSelectedRowId} setStatusEdit={setStatusEdit} />\n\n                    }\n\n                </Container>\n            </Container>\n            <Modal show={deletePopup} onHide={() => setDeletePopup(false)}>\n                <Modal.Header closeButton>\n                    <Modal.Title>Are you sure?</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>Do you really want to delete this record? This process cannot be undone</Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"bg-light\" onClick={() => setDeletePopup(false)}>\n                        Close\n          </Button>\n                    <Button variant=\"danger\" onClick={() => {\n\n                        mutate(selectedRowId)\n                    }}>\n                        {\n                            isDeleteLoading ?\n                                <Spinner animation=\"border\" size=\"sm\" /> :\n                                \"Delete\"\n                        }\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n        </>\n    )\n}\n\nexport default Advertisements","import axios, { AxiosError } from 'axios'\nimport { QueryFunction, useQuery } from 'react-query'\nimport { useHistory } from \"react-router-dom\"\nimport API from '../utils/API'\nimport { appApiBaseUrl } from '../utils/constants'\nimport { queryClient } from '../utils/queryClient'\nimport { showErrorToast } from '../utils/showErrorToast'\nimport useTokenStore from './useTokenStore'\nimport useUserProfileStore from './useUserProfileStore'\n\n\nconst getProfile: QueryFunction = async ({ queryKey }) => {\n    if (!queryKey[1])\n        return false\n\n    const r = await axios.get(`${appApiBaseUrl}${queryKey[0]}`, {\n        headers: {\n            Authorization: `Bearer ${queryKey[1]}`\n        }\n    })\n    return r.data\n\n}\n\n\nconst useMeQuery = () => {\n    const history = useHistory()\n    const token = useTokenStore(state => state.accessToken)\n    const setToken = useTokenStore(state => state.setToken)\n    const removeToken = useTokenStore(state => state.removeToken)\n    const setUser = useUserProfileStore(state => state.setUser)\n\n\n    const me = useQuery([\"profile\", token], getProfile, {\n        retry: false,\n        onSuccess: (data: any) => {\n            setUser(data)\n        },\n        onError: async (err: AxiosError | Error) => {\n            if (axios.isAxiosError(err)) {\n                const { response } = err;\n\n                if (response?.status === 401) {\n                    try {\n                        const res = await API.post('/auth/refresh');\n                        const data = await res.data;\n                        if (data) {\n                            setToken(data.access_token)\n                            queryClient.invalidateQueries(\"profile\")\n                        }\n                    } catch (error) {\n                        history.push('./login')\n                        showErrorToast(error.message)\n                    }\n\n                } else {\n                    history.push('/login')\n                }\n\n            } else {\n                history.push(\"./login\")\n            }\n        }\n    })\n\n\n    return me\n}\n\nexport default useMeQuery\n","import { Container, Spinner } from \"react-bootstrap\";\nimport { Route } from \"react-router-dom\";\nimport useMeQuery from \"../hooks/useMeQuery\";\n\n\nexport const PrivateRoute = ({ component: Component, ...rest }: any) => {\n\n  const { isFetching, isLoading, error, } = useMeQuery();\n\n\n\n  if (isLoading || isFetching || error) {\n    return <Container fluid className=\"d-flex justify-content-center align-items-center mt-4\"><Spinner animation=\"border\" /></Container>;\n  }\n  return (\n    <Route {...rest} render={(props) => (\n\n      <Component {...props} />\n\n    )} />\n  );\n};\n","import { useEffect, useState } from \"react\";\nimport { Container } from \"react-bootstrap\";\nimport { Route, Switch, useLocation } from \"react-router-dom\";\nimport { IsDesktopContext } from \"./context/IsDesktopContext\";\nimport ErrorToast from \"./shared-components/ErrorToast/ErrorToast\";\nimport useTokenStore from \"./hooks/useTokenStore\";\nimport API from \"./utils/API\";\n// ------pages components--------\nimport Brands from \"./components/Brands\";\nimport BrandModels from \"./components/BrandModels\";\nimport Categories from \"./components/Categories\";\nimport Coupons from \"./components/Coupons\";\nimport Faqs from \"./components/Faqs\";\nimport LoginPage from \"./components/LoginPage\";\nimport NavBar from \"./components/NavBar\";\nimport Plans from \"./components/Plans\";\nimport Services from \"./components/Servicies\";\nimport TopBar from \"./components/TopBar\";\nimport Users from \"./components/Users\";\nimport VerifyOtp from \"./components/VerifyOtp\";\nimport Dashboard from \"./components/Dashboard\";\nimport Orders from \"./components/Orders\";\nimport Advertisements from \"./components/Advertisements\";\nimport { QueryFunction } from \"react-query\";\nimport { queryClient } from \"./utils/queryClient\";\nimport { PrivateRoute } from \"./shared-components/PrivateRoute\";\n\nconst App = () => {\n  const [isDesktop, setIsDesktop] = useState<boolean>(false);\n\n  //adding token to every request\n  const token = useTokenStore((state) => state.accessToken);\n\n  if (token) API.defaults.headers.common[\"Authorization\"] = `Bearer ${token}`;\n\n  useEffect(() => {\n    updateDimensions();\n\n    window.addEventListener(\"resize\", updateDimensions);\n    return () => window.removeEventListener(\"resize\", updateDimensions);\n  }, []);\n\n  const updateDimensions = () => {\n    const width = window.innerWidth;\n    if (width > 800) setIsDesktop(true);\n    else setIsDesktop(false);\n  };\n\n  const [isNavOpen, setIsNavOpen] = useState<boolean>(false);\n  const { pathname } = useLocation();\n\n  function showNavTopBar(): boolean {\n    if (pathname.includes(\"login\") || pathname.includes(\"verify-otp\"))\n      return false;\n    else return true;\n  }\n\n  return (\n    <IsDesktopContext.Provider value={isDesktop}>\n      <div className=\"App\">\n        {showNavTopBar() ? (\n          <NavBar isNavOpen={isNavOpen} setIsNavOpen={setIsNavOpen} />\n        ) : (\n          \"\"\n        )}\n        <div></div>\n        <Container fluid className=\"main-layout\">\n          {showNavTopBar() ? (\n            <TopBar isNavOpen={isNavOpen} setIsNavOpen={setIsNavOpen} />\n          ) : (\n            \"\"\n          )}\n\n          <Switch>\n            <PrivateRoute path=\"/\" exact component={Dashboard} />\n            <PrivateRoute path=\"/brands\" exact component={Brands} />\n            <PrivateRoute path=\"/brand-models\" exact component={BrandModels} />\n            <PrivateRoute path=\"/categories\" exact component={Categories} />\n            <PrivateRoute path=\"/users\" exact component={Users} />\n            <PrivateRoute path=\"/servicies\" exact component={Services} />\n            <PrivateRoute path=\"/faqs\" exact component={Faqs} />\n            <PrivateRoute path=\"/plans\" exact component={Plans} />\n            <PrivateRoute path=\"/coupons\" exact component={Coupons} />\n            <PrivateRoute path=\"/orders\" exact component={Orders} />\n            <PrivateRoute\n              path=\"/advertisements\"\n              exact\n              component={Advertisements}\n            />\n            <Route path=\"/login\" exact component={LoginPage} />\n            <Route path=\"/verify-otp/:id/:otp\" exact component={VerifyOtp} />\n          </Switch>\n          <ErrorToast />\n        </Container>\n      </div>\n    </IsDesktopContext.Provider>\n  );\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport \"react-datetime/css/react-datetime.css\";\nimport './css/App.css'\nimport './index.css';\nimport App from './App';\nimport { BrowserRouter } from 'react-router-dom'\nimport reportWebVitals from './reportWebVitals';\nimport { QueryClientProvider } from 'react-query';\nimport { ReactQueryDevtools } from \"react-query/devtools\"\nimport { queryClient } from './utils/queryClient';\n\nReactDOM.render(\n  <React.StrictMode>\n\n    <QueryClientProvider client={queryClient}>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n      {/* <ReactQueryDevtools initialIsOpen={false} /> */}\n    </QueryClientProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\nreportWebVitals();\n"],"sourceRoot":""}